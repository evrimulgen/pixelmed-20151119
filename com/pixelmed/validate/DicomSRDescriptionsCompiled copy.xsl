<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:import href="CommonDicomSRValidationRules.xsl"/>
<xsl:output method="text"/>
<xsl:template match="/DicomStructuredReport">
<xsl:choose>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.11'">
<xsl:text>Found BasicTextSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: BasicTextSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="BasicTextSRContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.22'">
<xsl:text>Found EnhancedSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: EnhancedSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="EnhancedSRContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10001'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10011'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = '113704'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'DCM'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-40010'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-08000'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 1500: Invoke TID_1500</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '1500'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 1500: Invoke TID_1500</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_1500"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match QIICR_2000: Invoke TID_QIICR_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = 'QIICR_2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = '99QIICR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match QIICR_2000: Invoke TID_QIICR_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_QIICR_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.33'">
<xsl:text>Found ComprehensiveSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: ComprehensiveSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="ComprehensiveSRContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10001'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10011'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = '113704'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'DCM'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-40010'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-08000'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match RPH_0001: Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = 'RPH_0001'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = '99RPH'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match RPH_0001: Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_RPH_0001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title (only): Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = 'RP-100001'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = '99RPH'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title (only): Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_RPH_0001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 1500: Invoke TID_1500</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '1500'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 1500: Invoke TID_1500</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_1500"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match QIICR_2000: Invoke TID_QIICR_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = 'QIICR_2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = '99QIICR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match QIICR_2000: Invoke TID_QIICR_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_QIICR_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.34'">
<xsl:text>Found Comprehensive3DSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: Comprehensive3DSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="Comprehensive3DSRContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 2000: Invoke TID_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10001'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10011'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = '113704'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'DCM'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-40010'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-08000'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match RPH_0001: Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = 'RPH_0001'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = '99RPH'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match RPH_0001: Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_RPH_0001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title (only): Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = 'RP-100001'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = '99RPH'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title (only): Invoke TID_RPH_0001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_RPH_0001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 1500: Invoke TID_1500</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '1500'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 1500: Invoke TID_1500</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_1500"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match QIICR_2000: Invoke TID_QIICR_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = 'QIICR_2000'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = '99QIICR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match QIICR_2000: Invoke TID_QIICR_2000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_QIICR_2000"/>
</xsl:for-each>
</xsl:if>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.40'">
<xsl:text>Found ProcedureLog IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: ProcedureLogContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="ProcedureLogContentItemConstraints"/>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.50'">
<xsl:text>Found MammographyCADSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: MammographyCADSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="MammographyCADSRContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Required Root Template: TID_4000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_4000"/>
</xsl:for-each>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.59'">
<xsl:text>Found KeyObjectSelectionDocument IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: KeyObjectSelectionDocumentContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="KeyObjectSelectionDocumentContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Required Root Template: TID_2010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_2010"/>
</xsl:for-each>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.65'">
<xsl:text>Found ChestCADSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: ChestCADSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="ChestCADSRContentItemConstraints"/>
<xsl:apply-templates/>
</xsl:when>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/SOPClassUID/value = '1.2.840.10008.5.1.4.1.1.88.67'">
<xsl:text>Found XRayRadiationDoseSR IOD</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking IOD Content Item Constraints: XRayRadiationDoseSRContentItemConstraints</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="XRayRadiationDoseSRContentItemConstraints"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10001'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10001: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="/DicomStructuredReport/DicomStructuredReportContent/container/@template = '10011'       and /DicomStructuredReport/DicomStructuredReportContent/container/@templatemappingresource = 'DCMR'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on presence of Template Identification Sequence (only): match 10011: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = '113704'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'DCM'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-40010'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10001"/>
</xsl:for-each>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="count(/DicomStructuredReport/DicomStructuredReportContent/container/@template) = 0                and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@cv = '113701'       and /DicomStructuredReport/DicomStructuredReportContent/container/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@cv = '121058'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/concept/@csd = 'DCM'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@cv = 'P5-08000'       and /DicomStructuredReport/DicomStructuredReportContent/container/code/value/@csd = 'SRT'       ">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Condition satisfied for presence of Root Template based on absence of Template Identification Sequence and instead using Document Title and Procedure Reported: Invoke TID_10011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:for-each select="/DicomStructuredReport/DicomStructuredReportContent">
<xsl:call-template name="TID_10011"/>
</xsl:for-each>
</xsl:if>
<xsl:apply-templates/>
</xsl:when>
<xsl:otherwise>
<xsl:text>IOD (SOP Class) unrecognized</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:otherwise>
</xsl:choose>
</xsl:template>
<xsl:template match="/DicomStructuredReport/DicomStructuredReportHeader">
<xsl:apply-templates/>
</xsl:template>
<xsl:template match="text()"/>
<xsl:template name="BasicTextSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//waveform">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//datetime">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//date">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//time">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//uidref">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//pname">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="EnhancedSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//waveform">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//datetime">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//date">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//time">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//uidref">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//pname">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//scoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//tcoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="ComprehensiveSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//waveform">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//datetime">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//date">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//time">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//uidref">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//pname">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//scoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//tcoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="Comprehensive3DSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//waveform">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//datetime">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//date">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//time">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//uidref">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//pname">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//scoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//scoord3d">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//tcoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord3d'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="ProcedureLogContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//datetime">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//date">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//pname">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//time">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//uidref">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//waveform">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="MammographyCADSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//scoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="KeyObjectSelectionDocumentContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="ChestCADSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'tcoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//waveform">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//scoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//tcoord">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'scoord'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'SELECTED FROM' and name(.) = 'reference' and name(key('idkey',@IDREF)) = 'waveform'">
<xsl:call-template name="checkPermittedChildContentItemByReferenceRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="XRayRadiationDoseSRContentItemConstraints">
<xsl:for-each select="//container">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'CONTAINS' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//text">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//code">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//num">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS OBS CONTEXT' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'image'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'composite'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'INFERRED FROM' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//image">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//composite">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'num'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS ACQ CONTEXT' and name(.) = 'container'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//datetime">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//uidref">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
<xsl:for-each select="//pname">
<xsl:for-each select="*[@relationship]">
<xsl:choose>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS CONCEPT MOD' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'text'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'code'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'datetime'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'date'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'time'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'uidref'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:when test="@relationship = 'HAS PROPERTIES' and name(.) = 'pname'">
<xsl:call-template name="checkPermittedChildContentItemByValueRelationship">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="describeIllegalChildContentItem">
<xsl:with-param name="parent" select=".."/>
<xsl:with-param name="child" select="."/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
</xsl:for-each>
</xsl:for-each>
</xsl:template>
<xsl:template name="TID_RPH_0001">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0001</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0001 (RadPharmClinicalTrialsResults)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_RPH_0001 (RadPharmClinicalTrialsResults)</xsl:text>
<xsl:value-of select="$newline"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,"Clinical Trial Results")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Clinical Trial Results'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100001'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100001' and concept/@csd = '99RPH']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0002a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0002a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0002a">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0002b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0002b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0002b">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0002c</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0002c</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0002c">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0002d</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0002d</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0002d">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,"Clinical Trial Results")/[Row 5] CONTAINER (111028,DCM,"Image Library")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(/DicomStructuredReport/DicomStructuredReportContent//image) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 5] CONTAINER (111028,DCM,&quot;Image Library&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Library'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 5] CONTAINER (111028,DCM,&quot;Image Library&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Library'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111028' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0010">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>	
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,"Clinical Trial Results")/[Row 7] CONTAINER (RP-100702,99RPH,"General Lesion Observations")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(/DicomStructuredReport/DicomStructuredReportContent//container/concept[@cv = 'RP-100280' and @csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 7] CONTAINER (RP-100702,99RPH,&quot;General Lesion Observations&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'General Lesion Observations'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100702'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 7] CONTAINER (RP-100702,99RPH,&quot;General Lesion Observations&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'General Lesion Observations'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100702'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100702' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0006b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0006b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0006b">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,"Clinical Trial Results")/[Row 9] CONTAINER (RP-100023,99RPH,"Reading Sub-task")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 9] CONTAINER (RP-100023,99RPH,&quot;Reading Sub-task&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reading Sub-task'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100023'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100023' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0003">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,"Clinical Trial Results")/[Row 11] CONTAINER (RP-100024,99RPH,"Time Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 11] CONTAINER (RP-100024,99RPH,&quot;Time Point&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100024'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100024' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0004">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0005">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0006">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0005b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0005b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0005b">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>	
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,"Clinical Trial Results")/[Row 16] CODE (RP-100074,99RPH,"Signature meaning")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="/DicomStructuredReport/DicomStructuredReportHeader/VerificationFlag/value[1] = 'VERIFIED'">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 16] CODE (RP-100074,99RPH,&quot;Signature meaning&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Signature meaning'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100074'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0001 RadPharmClinicalTrialsResults/[Row 1] CONTAINER (RP-100001,99RPH,&quot;Clinical Trial Results&quot;)/[Row 16] CODE (RP-100074,99RPH,&quot;Signature meaning&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Signature meaning'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100074'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100074' and concept/@csd = '99RPH']"/>			
		</xsl:for-each>	
	<xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_RPH_0002a">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0002a</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0002a (RadPharmPersonObserverIdentifyingAttributes)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 1] PNAME (121008,DCM,"Person Observer Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 1] PNAME (121008,DCM,&quot;Person Observer Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'pname'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121008'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'pname' and concept/@cv = '121008' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 2] TEXT (RP-100006,99RPH,"Person Observer#s Login Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 2] TEXT (RP-100006,99RPH,&quot;Person Observer#s Login Name&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Login Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100006'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100006' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 3] TEXT (121009,DCM,"Person Observer#s Organization Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 3] TEXT (121009,DCM,&quot;Person Observer#s Organization Name&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Organization Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121009' and concept/@csd = 'DCM']">
			<xsl:if test="value != /DicomStructuredReport/DicomStructuredReportHeader/InstitutionName/value">
<xsl:text>Error: Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 3] TEXT (121009,DCM,"Person Observer#s Organization Name"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Person Observer's Organization Name does not match Institution Name</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 4] CODE (121011,DCM,"Person Observer#s Role in this Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 4] CODE (121011,DCM,&quot;Person Observer#s Role in this Procedure&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Role in this Procedure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7001'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121011' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 5] TEXT (RP-100007,99RPH,"Identifier within Person Observer#s Role")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002a RadPharmPersonObserverIdentifyingAttributes/[Row 5] TEXT (RP-100007,99RPH,&quot;Identifier within Person Observer#s Role&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Identifier within Person Observer#s Role'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100007' and concept/@csd = '99RPH']"/>
	</xsl:template>
<xsl:template name="TID_RPH_0002b">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0002b</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0002b (RadPharmDeviceObserverIdentifyingAttributes)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 1] TEXT (RP-100084,99RPH,"Application Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 1] TEXT (RP-100084,99RPH,&quot;Application Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Application Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100084'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100084' and concept/@csd = '99RPH']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 1] TEXT (RP-100084,99RPH,"Application Name")/[Row 2] TEXT (RP-100083,99RPH,"Version")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 1] TEXT (RP-100084,99RPH,&quot;Application Name&quot;)/[Row 2] TEXT (RP-100083,99RPH,&quot;Version&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Version'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100083'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100083' and concept/@csd = '99RPH']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,"Algorithm Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,&quot;Algorithm Name&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111001'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111001' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,"Algorithm Name")/[Row 4] TEXT (RP-100083,99RPH,"Version")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,&quot;Algorithm Name&quot;)/[Row 4] TEXT (RP-100083,99RPH,&quot;Version&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Version'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100083'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100083' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,"Algorithm Name")/[Row 5] CODE (RP-100085,99RPH,"Algorithm Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,&quot;Algorithm Name&quot;)/[Row 5] CODE (RP-100085,99RPH,&quot;Algorithm Type&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100085'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7016'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100085' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,"Algorithm Name")/[Row 6] TEXT (RP-100926,99RPH,"Algorithm UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,&quot;Algorithm Name&quot;)/[Row 6] TEXT (RP-100926,99RPH,&quot;Algorithm UID&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100926'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100926' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,"Algorithm Name")/[Row 7] TEXT (111002,DCM,"Algorithm Parameters")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 3] TEXT (111001,DCM,&quot;Algorithm Name&quot;)/[Row 7] TEXT (111002,DCM,&quot;Algorithm Parameters&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm Parameters'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111002' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 8] TEXT (RP-100086,99RPH,"Business Rule Set Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 8] TEXT (RP-100086,99RPH,&quot;Business Rule Set Name&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Business Rule Set Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100086'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100086' and concept/@csd = '99RPH']">                  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 8] TEXT (RP-100086,99RPH,"Business Rule Set Name")/[Row 9] TEXT (RP-100083,99RPH,"Version")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002b RadPharmDeviceObserverIdentifyingAttributes/[Row 8] TEXT (RP-100086,99RPH,&quot;Business Rule Set Name&quot;)/[Row 9] TEXT (RP-100083,99RPH,&quot;Version&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Version'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100083'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100083' and concept/@csd = '99RPH']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0002c">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0002c</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0002c (RadPharmClinicalTrialProtocolContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002c RadPharmClinicalTrialProtocolContext/[Row 1] TEXT (RP-101100,99RPH,"Protocol Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002c RadPharmClinicalTrialProtocolContext/[Row 1] TEXT (RP-101100,99RPH,&quot;Protocol Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Protocol Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-101100' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002c RadPharmClinicalTrialProtocolContext/[Row 2] TEXT (RP-101101,99RPH,"Protocol UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002c RadPharmClinicalTrialProtocolContext/[Row 2] TEXT (RP-101101,99RPH,&quot;Protocol UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Protocol UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101101'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-101101' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002c RadPharmClinicalTrialProtocolContext/[Row 3] TEXT (RP-101109,99RPH,"Protocol Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002c RadPharmClinicalTrialProtocolContext/[Row 3] TEXT (RP-101109,99RPH,&quot;Protocol Number&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Protocol Number'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101109'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-101109' and concept/@csd = '99RPH']"/>
	</xsl:template>
<xsl:template name="TID_RPH_0002d">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0002d</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0002d (RadPharmSubjectContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 1] TEXT (RP-101102,99RPH,"Site UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 1] TEXT (RP-101102,99RPH,&quot;Site UID&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Site UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101102'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-101102' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 2] TEXT (RP-101103,99RPH,"Subject UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 2] TEXT (RP-101103,99RPH,&quot;Subject UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101103'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-101103' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 3] DATE (RP-101104,99RPH,"Enrollment Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 3] DATE (RP-101104,99RPH,&quot;Enrollment Date&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Enrollment Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101104'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'RP-101104' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 4] DATE (RP-101105,99RPH,"Randomization Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 4] DATE (RP-101105,99RPH,&quot;Randomization Date&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Randomization Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101105'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'RP-101105' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 5] DATE (RP-101106,99RPH,"First Dose Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 5] DATE (RP-101106,99RPH,&quot;First Dose Date&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'First Dose Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'RP-101106' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 6] DATE (RP-101107,99RPH,"End of Treatment Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 6] DATE (RP-101107,99RPH,&quot;End of Treatment Date&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'End of Treatment Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101107'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'RP-101107' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0002d RadPharmSubjectContext/[Row 7] DATE (RP-101108,99RPH,"Termination Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0002d RadPharmSubjectContext/[Row 7] DATE (RP-101108,99RPH,&quot;Termination Date&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Termination Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101108'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'RP-101108' and concept/@csd = '99RPH']"/>
	</xsl:template>
<xsl:template name="TID_RPH_0003">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0003</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0003 (RadPharmReadingSessionAndTaskContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100008'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100008' and concept/@csd = '99RPH']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 2] UIDREF (RP-100081,99RPH,"Worklist Task UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 2] UIDREF (RP-100081,99RPH,&quot;Worklist Task UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100081'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100081' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 3] TEXT (RP-100010,99RPH,"Worklist Task Version")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 3] TEXT (RP-100010,99RPH,&quot;Worklist Task Version&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Version'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100010' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 4] TEXT (RP-100011,99RPH,"Worklist Task Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 4] TEXT (RP-100011,99RPH,&quot;Worklist Task Description&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Description'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100011' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 5] CODE (RP-100212,99RPH,"Worklist Task Level")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 5] CODE (RP-100212,99RPH,&quot;Worklist Task Level&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Level'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100212'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7003b'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100212' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 6] CODE (RP-100210,99RPH,"Worklist Task Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 6] CODE (RP-100210,99RPH,&quot;Worklist Task Type&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100210'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7002'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100210' and concept/@csd = '99RPH']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 7] CODE (RP-100211,99RPH,"Worklist Task Category")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 7] CODE (RP-100211,99RPH,&quot;Worklist Task Category&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Category'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100211'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7003'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100211' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 8] CODE (RP-100232,99RPH,"Worklist Task Repeat Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 8] CODE (RP-100232,99RPH,&quot;Worklist Task Repeat Type&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Repeat Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100232'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7003c'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100232' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 9] CODE (RP-100233,99RPH,"Worklist Task Variability Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 9] CODE (RP-100233,99RPH,&quot;Worklist Task Variability Type&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Task Variability Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100233'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7003d'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100233' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 10] TEXT (RP-100009,99RPH,"Worklist Sub-task Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 10] TEXT (RP-100009,99RPH,&quot;Worklist Sub-task Name&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100009' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 10] TEXT (RP-100009,99RPH,"Worklist Sub-task Name")/[Row 11] UIDREF (RP-100082,99RPH,"Worklist Sub-task UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 10] TEXT (RP-100009,99RPH,&quot;Worklist Sub-task Name&quot;)/[Row 11] UIDREF (RP-100082,99RPH,&quot;Worklist Sub-task UID&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100082'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100082' and concept/@csd = '99RPH']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 10] TEXT (RP-100009,99RPH,"Worklist Sub-task Name")/[Row 12] DATETIME (RP-100924,99RPH,"Worklist Sub-task Start DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 10] TEXT (RP-100009,99RPH,&quot;Worklist Sub-task Name&quot;)/[Row 12] DATETIME (RP-100924,99RPH,&quot;Worklist Sub-task Start DateTime&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task Start DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100924'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-100924' and concept/@csd = '99RPH']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,"Worklist Task Name")/[Row 10] TEXT (RP-100009,99RPH,"Worklist Sub-task Name")/[Row 13] DATETIME (RP-100925,99RPH,"Worklist Sub-task Closed DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0003 RadPharmReadingSessionAndTaskContext/[Row 1] TEXT (RP-100008,99RPH,&quot;Worklist Task Name&quot;)/[Row 10] TEXT (RP-100009,99RPH,&quot;Worklist Sub-task Name&quot;)/[Row 13] DATETIME (RP-100925,99RPH,&quot;Worklist Sub-task Closed DateTime&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task Closed DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100925'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-100925' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0004">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0004</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0004 (RadPharmTimePointContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 1] TEXT (RP-100018,99RPH,"Subject Time Point Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 1] TEXT (RP-100018,99RPH,&quot;Subject Time Point Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Time Point Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100018' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 2] TEXT (RP-100017,99RPH,"Protocol Time Point Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 2] TEXT (RP-100017,99RPH,&quot;Protocol Time Point Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Protocol Time Point Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100017'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100017' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 3] TEXT (RP-100019,99RPH,"Time Point Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 3] TEXT (RP-100019,99RPH,&quot;Time Point Name&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100019' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 4] TEXT (RP-100550,99RPH,"Time Point Sponsor Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 4] TEXT (RP-100550,99RPH,&quot;Time Point Sponsor Name&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Sponsor Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100550'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100550' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 4a] TEXT (RP-100551,99RPH,"Time Point Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 4a] TEXT (RP-100551,99RPH,&quot;Time Point Type&quot;)'"/>
<xsl:with-param name="row" select="'4a'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100551'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100551' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 4b] NUM (RP-100552,99RPH,"Days from enrollment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 4b] NUM (RP-100552,99RPH,&quot;Days from enrollment&quot;)'"/>
<xsl:with-param name="row" select="'4b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Days from enrollment'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100552'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Days'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'d'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100552' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 4c] NUM (RP-100553,99RPH,"Time Point Order")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 4c] NUM (RP-100553,99RPH,&quot;Time Point Order&quot;)'"/>
<xsl:with-param name="row" select="'4c'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Order'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100553'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'order'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{order}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100553' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 5] CODE (RP-100021,99RPH,"Time Point Unscheduled")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 5] CODE (RP-100021,99RPH,&quot;Time Point Unscheduled&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Unscheduled'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100021'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100021' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 6] CODE (RP-100022,99RPH,"Time Point Baseline")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 6] CODE (RP-100022,99RPH,&quot;Time Point Baseline&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Baseline'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100022'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100022' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 7] CODE (RP-100090,99RPH,"Completed")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 7] CODE (RP-100090,99RPH,&quot;Completed&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Completed'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100090'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100090' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121065'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121065' and concept/@csd = 'DCM']">                  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 9] UIDREF (110180,DCM,"Study Instance UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 9] UIDREF (110180,DCM,&quot;Study Instance UID&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Instance UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110180'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '110180' and concept/@csd = 'DCM']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 10] CODE (121139,DCM,"Modality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 10] CODE (121139,DCM,&quot;Modality&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Modality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121139'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'29'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121139' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 10a] CODE (121058,DCM,"Procedure reported")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 10a] CODE (121058,DCM,&quot;Procedure reported&quot;)'"/>
<xsl:with-param name="row" select="'10a'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure reported'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121058' and concept/@csd = 'DCM']"/>                    
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 11] DATE (111060,DCM,"Study Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 11] DATE (111060,DCM,&quot;Study Date&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111060'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111060' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 12] TIME (111061,DCM,"Study Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 12] TIME (111061,DCM,&quot;Study Time&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111061'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111061' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 13] CODE (RID12236,RADLEX,"Anatomic Region Covered")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 13] CODE (RID12236,RADLEX,&quot;Anatomic Region Covered&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Anatomic Region Covered'"/>
<xsl:with-param name="csdConceptName" select="'RADLEX'"/>
<xsl:with-param name="cvConceptName" select="'RID12236'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7007'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RID12236' and concept/@csd = 'RADLEX']">	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 13] CODE (RID12236,RADLEX,"Anatomic Region Covered")/[Row 13b] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 13] CODE (RID12236,RADLEX,&quot;Anatomic Region Covered&quot;)/[Row 13b] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'13b'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 14] UIDREF (RP-100904,99RPH,"Exam Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 14] UIDREF (RP-100904,99RPH,&quot;Exam Identifier&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exam Identifier'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100904'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100904' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 15] NUM (RID12405,RADLEX,"Reconstruction Interval")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 15] NUM (RID12405,RADLEX,&quot;Reconstruction Interval&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reconstruction Interval'"/>
<xsl:with-param name="csdConceptName" select="'RADLEX'"/>
<xsl:with-param name="cvConceptName" select="'RID12405'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RID12405' and concept/@csd = 'RADLEX']"/>   	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 16] NUM (15074-8,LN,"Blood Glucose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 16] NUM (15074-8,LN,&quot;Blood Glucose&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Blood Glucose'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'15074-8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mmol/l'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mmol/l'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '15074-8' and concept/@csd = 'LN']"/>	      
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,"Procedure Description")/[Row 17] NUM (RP-100900,99RPH,"PET Radionuclide Incubation Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0004 RadPharmTimePointContext/[Row 8] TEXT (121065,DCM,&quot;Procedure Description&quot;)/[Row 17] NUM (RP-100900,99RPH,&quot;PET Radionuclide Incubation Time&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'PET Radionuclide Incubation Time'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100900'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'min'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'min'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100900' and concept/@csd = '99RPH']"/>          
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0005">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0005</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0005 (RadPharmTimePointObservations)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Observation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100073'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100073' and concept/@csd = '99RPH']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 2] UIDREF (RP-100401,99RPH,"Observation UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 2] UIDREF (RP-100401,99RPH,&quot;Observation UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100401' and concept/@csd = '99RPH']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 3] CODE (RP-101019,99RPH,"Baseline fluid collection is present")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num) = 0               and count(code[concept/@cv = 'RP-101018' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101020' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101021' and concept/@csd = '99RPH']) = 0               and count(../code[concept/@cv = 'RP-100022' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) = 1">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 3] CODE (RP-101019,99RPH,&quot;Baseline fluid collection is present&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Baseline fluid collection is present'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 3] CODE (RP-101019,99RPH,&quot;Baseline fluid collection is present&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Baseline fluid collection is present'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-101019' and concept/@csd = '99RPH']"/>	

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 4] CODE (RP-101018,99RPH,"Pseudo-progression")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num) = 0               and count(code[concept/@cv = 'RP-101019' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101020' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101021' and concept/@csd = '99RPH']) = 0               and count(../code[concept/@cv = 'RP-100022' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) = 1">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 4] CODE (RP-101018,99RPH,&quot;Pseudo-progression&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pseudo-progression'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 4] CODE (RP-101018,99RPH,&quot;Pseudo-progression&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pseudo-progression'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-101018' and concept/@csd = '99RPH']"/>	

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 5] CODE (RP-101021,99RPH,"New fluid collection is present")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num) = 0               and count(code[concept/@cv = 'RP-101018' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101019' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101020' and concept/@csd = '99RPH']) = 0               and count(../code[concept/@cv = 'RP-100022' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) = 1">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 5] CODE (RP-101021,99RPH,&quot;New fluid collection is present&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'New fluid collection is present'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101021'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7231'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 5] CODE (RP-101021,99RPH,&quot;New fluid collection is present&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'New fluid collection is present'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101021'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7231'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-101021' and concept/@csd = '99RPH']"/>	

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 6] CODE (RP-101020,99RPH,"Baseline fluid collection has increased")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num) = 0               and count(code[concept/@cv = 'RP-101018' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101019' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101021' and concept/@csd = '99RPH']) = 0               and count(../code[concept/@cv = 'RP-100022' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) = 1">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 6] CODE (RP-101020,99RPH,&quot;Baseline fluid collection has increased&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Baseline fluid collection has increased'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101020'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7232'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 6] CODE (RP-101020,99RPH,&quot;Baseline fluid collection has increased&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Baseline fluid collection has increased'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101020'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7232'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-101020' and concept/@csd = '99RPH']"/>	

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 7] NUM CID RPH_7031</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-101018' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101019' and concept/@csd = '99RPH']) = 0               and count(code[concept/@cv = 'RP-101020' and concept/@csd = '99RPH']) = 0                  and count(code[concept/@cv = 'RP-101021' and concept/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 7] NUM CID RPH_7031'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'RPH_7031'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'RPH_7032'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 7] NUM CID RPH_7031'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'RPH_7031'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'RPH_7032'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'RP-100142' and concept/@csd = '99RPH') or (name() = 'num' and concept/@cv = 'RP-100143' and concept/@csd = '99RPH') or (name() = 'num' and concept/@cv = 'RP-100144' and concept/@csd = '99RPH') or (name() = 'num' and concept/@cv = 'RP-100145' and concept/@csd = '99RPH') or (name() = 'num' and concept/@cv = 'RP-100146' and concept/@csd = '99RPH') or (name() = 'num' and concept/@cv = 'RP-100147' and concept/@csd = '99RPH')]"/>
											  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,"Time Point Observation")/[Row 8] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005 RadPharmTimePointObservations/[Row 1] CONTAINER (RP-100073,99RPH,&quot;Time Point Observation&quot;)/[Row 8] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0020">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0005b">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0005b</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0005b (RadPharmAdjudicationObservations)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv = 'RP-100212' and concept/@csd = '99RPH' and value/@cv = 'RP-100214' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Adjudication Observation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100280'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Adjudication Observation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100280'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100280' and concept/@csd = '99RPH']">
												
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 2] UIDREF (RP-100401,99RPH,"Observation UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 2] UIDREF (RP-100401,99RPH,&quot;Observation UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100401' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 3] CODE (121011,DCM,"Person Observer#s Role in this Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 3] CODE (121011,DCM,&quot;Person Observer#s Role in this Procedure&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Role in this Procedure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7001b'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121011' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 4] CONTAINER (RP-100281,99RPH,"Observers Accepted")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 4] CONTAINER (RP-100281,99RPH,&quot;Observers Accepted&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observers Accepted'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100281'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100281' and concept/@csd = '99RPH']"> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 4] CONTAINER (RP-100281,99RPH,"Observers Accepted")/[Row 5] TEXT (RP-100007,99RPH,"Identifier within Person Observer#s Role")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 4] CONTAINER (RP-100281,99RPH,&quot;Observers Accepted&quot;)/[Row 5] TEXT (RP-100007,99RPH,&quot;Identifier within Person Observer#s Role&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Identifier within Person Observer#s Role'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100007' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 6] CONTAINER (RP-100282,99RPH,"Observers Rejected")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 6] CONTAINER (RP-100282,99RPH,&quot;Observers Rejected&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observers Rejected'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100282'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100282' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 6] CONTAINER (RP-100282,99RPH,"Observers Rejected")/[Row 7] TEXT (RP-100007,99RPH,"Identifier within Person Observer#s Role")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 6] CONTAINER (RP-100282,99RPH,&quot;Observers Rejected&quot;)/[Row 7] TEXT (RP-100007,99RPH,&quot;Identifier within Person Observer#s Role&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Identifier within Person Observer#s Role'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100007' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 8] CODE (RP-100283,99RPH,"Reason for Choice")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100286' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) &gt; 0                 and count(code[concept/@cv = 'RP-100284' and concept/@csd = '99RPH' and                 (value/@cv = 'RP-100290' or value/@cv = 'RP-100292' or value/@cv = 'RP-100294' or value/@cv = 'RP-100296' or value/@cv = 'RP-100298' or value/@cv = 'RP-100300' or value/@cv = 'RP-100305' or value/@cv = 'RP-100307' or value/@cv = 'RP-100309')                 and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 8] CODE (RP-100283,99RPH,&quot;Reason for Choice&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Choice'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100283'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7050a'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 8] CODE (RP-100283,99RPH,&quot;Reason for Choice&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Choice'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100283'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7050a'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100283' and concept/@csd = '99RPH']"/>
												
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 8a] CODE (RP-100284,99RPH,"Reason for Discordance")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 8a] CODE (RP-100284,99RPH,&quot;Reason for Discordance&quot;)'"/>
<xsl:with-param name="row" select="'8a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Discordance'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100284'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7050b'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100284' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 8b] CODE (RP-100286,99RPH,"Image Quality Issues Contribute to Discordance")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 8b] CODE (RP-100286,99RPH,&quot;Image Quality Issues Contribute to Discordance&quot;)'"/>
<xsl:with-param name="row" select="'8b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Quality Issues Contribute to Discordance'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100286'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100286' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 9] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 9] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,"Adjudication Observation")/[Row 10] CODE (RP-100277,99RPH,"Observation Scope")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0005b RadPharmAdjudicationObservations/[Row 1] CONTAINER (RP-100280,99RPH,&quot;Adjudication Observation&quot;)/[Row 10] CODE (RP-100277,99RPH,&quot;Observation Scope&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation Scope'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100277'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7052'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100277' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0020">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0006">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0006</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0006 (RadPharmTimePointLesionObservations)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100025'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100025' and concept/@csd = '99RPH']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 2] UIDREF (112040,DCM,"Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 2] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112040' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 3] CODE (RP-100320,99RPH,"Calibration")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 3] CODE (RP-100320,99RPH,&quot;Calibration&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100320'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100320' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 4] UIDREF (RP-100028,99RPH,"Predecessor Lesion Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 4] UIDREF (RP-100028,99RPH,&quot;Predecessor Lesion Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Predecessor Lesion Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100028' and concept/@csd = '99RPH']"/>                
			<xsl:if test="count(uidref[concept/@cv = 'RP-100028' and concept/@csd = '99RPH']) &gt; 0              and count(code[concept/@cv = 'RP-100320' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) &gt; 0">
<xsl:text>Error: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Predecessor Lesion Tracking Unique Identifier not permitted when Calibration == Yes</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 5] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 5] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0007">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if> 
			
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 9] CODE (RID11510,RADLEX,"Therapeutic Response")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 9] CODE (RID11510,RADLEX,&quot;Therapeutic Response&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Therapeutic Response'"/>
<xsl:with-param name="csdConceptName" select="'RADLEX'"/>
<xsl:with-param name="cvConceptName" select="'RID11510'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RID11510' and concept/@csd = 'RADLEX']"/>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 9b] CODE (RP-100901,99RPH,"Qualitative Assessment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 9b] CODE (RP-100901,99RPH,&quot;Qualitative Assessment&quot;)'"/>
<xsl:with-param name="row" select="'9b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Qualitative Assessment'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100901'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7010c'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100901' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 11] CODE (RP-100042,99RPH,"Unable to evaluate lesion")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100320' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 11] CODE (RP-100042,99RPH,&quot;Unable to evaluate lesion&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Unable to evaluate lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100042'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 11] CODE (RP-100042,99RPH,&quot;Unable to evaluate lesion&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Unable to evaluate lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100042'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100042' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 12] CODE (RP-100043,99RPH,"Reason unable to evaluate")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100042' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 12] CODE (RP-100043,99RPH,&quot;Reason unable to evaluate&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason unable to evaluate'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100043'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7011'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 12] CODE (RP-100043,99RPH,&quot;Reason unable to evaluate&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason unable to evaluate'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100043'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7011'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100043' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 13] CODE (RP-100053,99RPH,"Unable to measure lesion")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = 'RP-100022' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) &gt; 0                  and count(code[concept/@cv = 'RP-100042' and concept/@csd = '99RPH' and value/@cv = 'R-00339' and value/@csd = 'SRT']) &gt; 0                  and count(code[concept/@cv = 'RP-100901' and concept/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 13] CODE (RP-100053,99RPH,&quot;Unable to measure lesion&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Unable to measure lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100053'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 13] CODE (RP-100053,99RPH,&quot;Unable to measure lesion&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Unable to measure lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100053'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100053' and concept/@csd = '99RPH']"/>	
													
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 14] CODE (RP-100054,99RPH,"Reason unable to measure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100053' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) &gt; 0                     and count(code[concept/@cv = 'RP-100285' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 14] CODE (RP-100054,99RPH,&quot;Reason unable to measure&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason unable to measure'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100054'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7012b'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 14] CODE (RP-100054,99RPH,&quot;Reason unable to measure&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason unable to measure'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100054'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7012b'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100054' and concept/@csd = '99RPH']"/>	
										
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 14b] CODE (RP-100285,99RPH,"Unequivocal Progression")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006 RadPharmTimePointLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 14b] CODE (RP-100285,99RPH,&quot;Unequivocal Progression&quot;)'"/>
<xsl:with-param name="row" select="'14b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Unequivocal Progression'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100285'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100285' and concept/@csd = '99RPH']"/>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0020">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0006b">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0006b</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0006b (RadPharmGeneralLesionObservations)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100025'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100025' and concept/@csd = '99RPH']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 2] UIDREF (112040,DCM,"Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 2] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112040' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 3] TEXT (112039,DCM,"Tracking Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 3] TEXT (112039,DCM,&quot;Tracking Identifier&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112039' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 4] CODE (RP-100026,99RPH,"Lesion Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 4] CODE (RP-100026,99RPH,&quot;Lesion Type&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Lesion Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100026'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7004'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100026' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 5b] CODE (RP-100036,99RPH,"Reconstruction Interval Unknown, Sufficient To Select Lesion")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 5b] CODE (RP-100036,99RPH,&quot;Reconstruction Interval Unknown, Sufficient To Select Lesion&quot;)'"/>
<xsl:with-param name="row" select="'5b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reconstruction Interval Unknown, Sufficient To Select Lesion'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100036' and concept/@csd = '99RPH']"/>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 6] CODE (G-C0E3,SRT,"Finding Site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100026' and concept/@csd = '99RPH' and value/@cv = 'RP-100320' and value/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 6] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7006'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 6] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7006'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E3' and concept/@csd = 'SRT']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 6b] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100026' and concept/@csd = '99RPH' and value/@cv = 'RP-100320' and value/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 6b] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'6b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 6b] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'6b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,"Lesion")/[Row 6c] CODE (G-C2CE,SRT,"Multiplicity")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0006b RadPharmGeneralLesionObservations/[Row 1] CONTAINER (RP-100025,99RPH,&quot;Lesion&quot;)/[Row 6c] CODE (G-C2CE,SRT,&quot;Multiplicity&quot;)'"/>
<xsl:with-param name="row" select="'6c'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Multiplicity'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C2CE'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7702'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C2CE' and concept/@csd = 'SRT']"/>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0020">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0007">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0007</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0007 (RadPharmMeasurementObjects)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100502'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100502' and concept/@csd = '99RPH']">         
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 1a] UIDREF (RP-100403,99RPH,"Measurement Object UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 1a] UIDREF (RP-100403,99RPH,&quot;Measurement Object UID&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100403'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100403' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 1b] COMPOSITE (RP-100700,99RPH,"Registration Used")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 1b] COMPOSITE (RP-100700,99RPH,&quot;Registration Used&quot;)'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Registration Used'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100700'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = 'RP-100700' and concept/@csd = '99RPH']">         
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 1b] COMPOSITE (RP-100700,99RPH,"Registration Used")/[Row 1c] TEXT (RP-100926,99RPH,"Algorithm UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 1b] COMPOSITE (RP-100700,99RPH,&quot;Registration Used&quot;)/[Row 1c] TEXT (RP-100926,99RPH,&quot;Algorithm UID&quot;)'"/>
<xsl:with-param name="row" select="'1c'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100926'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100926' and concept/@csd = '99RPH']"/>            
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 2b] CODE (121139,DCM,"Modality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH']) &gt; 0             and count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100111' and value/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 2b] CODE (121139,DCM,&quot;Modality&quot;)'"/>
<xsl:with-param name="row" select="'2b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Modality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121139'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'29'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 2b] CODE (121139,DCM,&quot;Modality&quot;)'"/>
<xsl:with-param name="row" select="'2b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Modality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121139'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'29'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121139' and concept/@csd = 'DCM']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 2c] DATE (RP-100600,99RPH,"Acquisition Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH']) &gt; 0             and count(code[concept/@cv = 'RP-100601' and concept/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 2c] DATE (RP-100600,99RPH,&quot;Acquisition Date&quot;)'"/>
<xsl:with-param name="row" select="'2c'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100600'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 2c] DATE (RP-100600,99RPH,&quot;Acquisition Date&quot;)'"/>
<xsl:with-param name="row" select="'2c'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Date'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100600'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'RP-100600' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 2d] TEXT (RP-100601,99RPH,"Acquisition Date Alias")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH']) &gt; 0             and count(date[concept/@cv = 'RP-100600' and concept/@csd = '99RPH']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 2d] TEXT (RP-100601,99RPH,&quot;Acquisition Date Alias&quot;)'"/>
<xsl:with-param name="row" select="'2d'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Date Alias'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100601'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 2d] TEXT (RP-100601,99RPH,&quot;Acquisition Date Alias&quot;)'"/>
<xsl:with-param name="row" select="'2d'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Date Alias'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100601'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100601' and concept/@csd = '99RPH']"/>
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 3] CODE (RP-100503,99RPH,"Measurement Object Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = 'RP-100042' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) = 0             and count(../code[concept/@cv = 'RP-100053' and concept/@csd = '99RPH' and value/@cv = 'R-0038D' and value/@csd = 'SRT']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 3] CODE (RP-100503,99RPH,&quot;Measurement Object Type&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100503'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7601'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 3] CODE (RP-100503,99RPH,&quot;Measurement Object Type&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100503'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7601'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100503' and concept/@csd = '99RPH']"/>	
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0007a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0007a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0007a">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0007b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0007b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0007b">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0007c</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0007c</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0007c">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0007d</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0007d</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0007d">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 8] CODE (RP-100150,99RPH,"Discarded")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 8] CODE (RP-100150,99RPH,&quot;Discarded&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Discarded'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100150'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100150' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 9] DATETIME (RP-100920,99RPH,"Observation Creation DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 9] DATETIME (RP-100920,99RPH,&quot;Observation Creation DateTime&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation Creation DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100920'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-100920' and concept/@csd = '99RPH']"/>		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 9a] TEXT (RP-100006,99RPH,"Person Observer#s Login Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 9a] TEXT (RP-100006,99RPH,&quot;Person Observer#s Login Name&quot;)'"/>
<xsl:with-param name="row" select="'9a'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Login Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100006'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100006' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 10] DATETIME (RP-100921,99RPH,"Observation Modification DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 10] DATETIME (RP-100921,99RPH,&quot;Observation Modification DateTime&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation Modification DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100921'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-100921' and concept/@csd = '99RPH']"/>				
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 10a] TEXT (RP-100012,99RPH,"Last Modifying Person Observer#s Login Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 10a] TEXT (RP-100012,99RPH,&quot;Last Modifying Person Observer#s Login Name&quot;)'"/>
<xsl:with-param name="row" select="'10a'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Last Modifying Person Observer#s Login Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100012' and concept/@csd = '99RPH']"/>   

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 11] NUM (RP-100140,99RPH,"Product of Short and Long Axes")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and (value/@cv = 'RP-100104' or value/@cv = 'RP-100106') and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 11] NUM (RP-100140,99RPH,&quot;Product of Short and Long Axes&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Product of Short and Long Axes'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100140'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_RPH_0007ROW11'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 11] NUM (RP-100140,99RPH,&quot;Product of Short and Long Axes&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Product of Short and Long Axes'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100140'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_RPH_0007ROW11'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100140' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,"Measurement Object")/[Row 12] NUM (RP-100141,99RPH,"Product of Short and Long and Normal Axes")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100106' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 12] NUM (RP-100141,99RPH,&quot;Product of Short and Long and Normal Axes&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Product of Short and Long and Normal Axes'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100141'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_RPH_0007ROW12'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007 RadPharmMeasurementObjects/[Row 1] CONTAINER (RP-100502,99RPH,&quot;Measurement Object&quot;)/[Row 12] NUM (RP-100141,99RPH,&quot;Product of Short and Long and Normal Axes&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Product of Short and Long and Normal Axes'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100141'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_RPH_0007ROW12'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100141' and concept/@csd = '99RPH']"/>	

		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0007a">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0007a</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0007a (RadPharmSimpleMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100103' and value/@csd = '99RPH']) &gt; 0                    or count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100104' and value/@csd = '99RPH']) &gt; 0              or count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100105' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Simple Measurement'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Simple Measurement'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-101002' and concept/@csd = '99RPH']">    

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 2] NUM CID RPH_7017</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100103' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 2] NUM CID RPH_7017'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'RPH_7017'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 2] NUM CID RPH_7017'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'RPH_7017'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'G-A22A' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121206' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = 'G-A220' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-D785' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'M-02550' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A185' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A186' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A193' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A194' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A195' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A196' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121207' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 2] NUM CID RPH_7017/[Row 3] SCOORD (121112,DCM,"Source of Measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 2] NUM CID RPH_7017/[Row 3] SCOORD (121112,DCM,&quot;Source of Measurement&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source of Measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121112'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121112' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 2] NUM CID RPH_7017/[Row 3] SCOORD (121112,DCM,"Source of Measurement")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 2] NUM CID RPH_7017/[Row 3] SCOORD (121112,DCM,&quot;Source of Measurement&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
				</xsl:for-each>
</xsl:for-each>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 5] NUM (G-A185,SRT,"Long Axis")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100104' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 5] NUM (G-A185,SRT,&quot;Long Axis&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Long Axis'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A185'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 5] NUM (G-A185,SRT,&quot;Long Axis&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Long Axis'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A185'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'G-A185' and concept/@csd = 'SRT']">    
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 5] NUM (G-A185,SRT,"Long Axis")/[Row 6] SCOORD (121112,DCM,"Source of Measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 5] NUM (G-A185,SRT,&quot;Long Axis&quot;)/[Row 6] SCOORD (121112,DCM,&quot;Source of Measurement&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source of Measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121112'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121112' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 5] NUM (G-A185,SRT,"Long Axis")/[Row 6] SCOORD (121112,DCM,"Source of Measurement")/[Row 7] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 5] NUM (G-A185,SRT,&quot;Long Axis&quot;)/[Row 6] SCOORD (121112,DCM,&quot;Source of Measurement&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>		
				</xsl:for-each>
			</xsl:for-each>
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 8] NUM (G-A186,SRT,"Short Axis")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100104' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 8] NUM (G-A186,SRT,&quot;Short Axis&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Short Axis'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A186'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 8] NUM (G-A186,SRT,&quot;Short Axis&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Short Axis'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A186'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'G-A186' and concept/@csd = 'SRT']">    
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 8] NUM (G-A186,SRT,"Short Axis")/[Row 9] SCOORD (121112,DCM,"Source of Measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 8] NUM (G-A186,SRT,&quot;Short Axis&quot;)/[Row 9] SCOORD (121112,DCM,&quot;Source of Measurement&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source of Measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121112'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121112' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 8] NUM (G-A186,SRT,"Short Axis")/[Row 9] SCOORD (121112,DCM,"Source of Measurement")/[Row 10] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 8] NUM (G-A186,SRT,&quot;Short Axis&quot;)/[Row 9] SCOORD (121112,DCM,&quot;Source of Measurement&quot;)/[Row 10] IMAGE *'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>		
				</xsl:for-each>
			</xsl:for-each>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 11] NUM (RP-100105,99RPH,"Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100105' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 11] NUM (RP-100105,99RPH,&quot;Angle&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Angle'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100105'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'degrees'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 11] NUM (RP-100105,99RPH,&quot;Angle&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Angle'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100105'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'degrees'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100105' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 11] NUM (RP-100105,99RPH,"Angle")/[Row 12] SCOORD (RP-100120,99RPH,"Angle Line Segment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 11] NUM (RP-100105,99RPH,&quot;Angle&quot;)/[Row 12] SCOORD (RP-100120,99RPH,&quot;Angle Line Segment&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Angle Line Segment'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100120'"/>
<xsl:with-param name="vmmin" select="'2'"/>
<xsl:with-param name="vmmax" select="'2'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'MULTIPOINT'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = 'RP-100120' and concept/@csd = '99RPH']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 11] NUM (RP-100105,99RPH,"Angle")/[Row 12] SCOORD (RP-100120,99RPH,"Angle Line Segment")/[Row 13] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 11] NUM (RP-100105,99RPH,&quot;Angle&quot;)/[Row 12] SCOORD (RP-100120,99RPH,&quot;Angle Line Segment&quot;)/[Row 13] IMAGE *'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>		
				</xsl:for-each>
			</xsl:for-each>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,"Simple Measurement")/[Row 14] CODE (RP-101012,99RPH,"Automation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007a RadPharmSimpleMeasurements/[Row 1] CONTAINER (RP-101002,99RPH,&quot;Simple Measurement&quot;)/[Row 14] CODE (RP-101012,99RPH,&quot;Automation&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Automation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7041'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-101012' and concept/@csd = '99RPH']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0007b">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0007b</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0007b (RadPharmSubRegionsAndMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = '111041' and value/@csd = 'DCM']) &gt; 0              or count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'G-D705' and value/@csd = 'SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101003'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101003'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-101003' and concept/@csd = '99RPH']">    
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Sub-region'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100102'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100102' and concept/@csd = '99RPH']">		
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 2] CODE (RP-100034,99RPH,"Include Flag")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 2] CODE (RP-100034,99RPH,&quot;Include Flag&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Include Flag'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100034'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100034' and concept/@csd = '99RPH']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 3] CODE (122554,DCM,"Segmentation Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 3] CODE (122554,DCM,&quot;Segmentation Method&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Segmentation Method'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122554'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7040'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '122554' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 3] CODE (122554,DCM,"Segmentation Method")/[Row 3a] TEXT (RP-100926,99RPH,"Algorithm UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = '122554' and concept/@csd = 'DCM' and value/@cv = 'G-D221' and value/@csd = 'SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 3] CODE (122554,DCM,&quot;Segmentation Method&quot;)/[Row 3a] TEXT (RP-100926,99RPH,&quot;Algorithm UID&quot;)'"/>
<xsl:with-param name="row" select="'3a'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100926'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 3] CODE (122554,DCM,&quot;Segmentation Method&quot;)/[Row 3a] TEXT (RP-100926,99RPH,&quot;Algorithm UID&quot;)'"/>
<xsl:with-param name="row" select="'3a'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100926'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100926' and concept/@csd = '99RPH']"/>
				</xsl:for-each>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 4] SCOORD (111041,DCM,"Outline")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../../code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = '111041' and value/@csd = 'DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 4] SCOORD (111041,DCM,&quot;Outline&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111041'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'ELLIPSE_OR_POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'4'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 4] SCOORD (111041,DCM,&quot;Outline&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111041'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'ELLIPSE_OR_POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'4'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111041' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 4] SCOORD (111041,DCM,"Outline")/[Row 4a] CODE (RP-100899,99RPH,"Closed Curve Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 4] SCOORD (111041,DCM,&quot;Outline&quot;)/[Row 4a] CODE (RP-100899,99RPH,&quot;Closed Curve Type&quot;)'"/>
<xsl:with-param name="row" select="'4a'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Closed Curve Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100899'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7070'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100899' and concept/@csd = '99RPH']"/>   
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 4] SCOORD (111041,DCM,"Outline")/[Row 4b] CODE (RP-100897,99RPH,"Closed Polygon Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 4] SCOORD (111041,DCM,&quot;Outline&quot;)/[Row 4b] CODE (RP-100897,99RPH,&quot;Closed Polygon Type&quot;)'"/>
<xsl:with-param name="row" select="'4b'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Closed Polygon Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100897'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7071'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100897' and concept/@csd = '99RPH']"/>   
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 4] SCOORD (111041,DCM,"Outline")/[Row 5] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 4] SCOORD (111041,DCM,&quot;Outline&quot;)/[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>		
				</xsl:for-each>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 1b] CONTAINER (RP-100102,99RPH,"Image Sub-region")/[Row 6] IMAGE (RP-100100,99RPH,"Region Raster")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../../code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'G-D705' and value/@csd = 'SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 6] IMAGE (RP-100100,99RPH,&quot;Region Raster&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Region Raster'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 1b] CONTAINER (RP-100102,99RPH,&quot;Image Sub-region&quot;)/[Row 6] IMAGE (RP-100100,99RPH,&quot;Region Raster&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Region Raster'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = 'RP-100100' and concept/@csd = '99RPH']"/>
			    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0009">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0009">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region")/[Row 9] CODE (RP-100503,99RPH,"Measurement Object Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,&quot;Image Region&quot;)/[Row 9] CODE (RP-100503,99RPH,&quot;Measurement Object Type&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object Type'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100503'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="'Biorthogonal Line Segments'"/>
<xsl:with-param name="csdValue" select="'99RPH'"/>
<xsl:with-param name="cvValue" select="'RP-100104'"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100503' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_RPH_0007a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_RPH_0007a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_RPH_0007a">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="''"/>
</xsl:call-template>
</xsl:if>  
			<xsl:if test="count(container[concept/@cv = 'RP-101002' and concept/@csd = '99RPH']/code[concept/@cv = 'RP101012' and concept/@csd = '99RPH' and value/@cv = 'G-D231' and value/@csd = 'SRT']) &gt; 0">
<xsl:text>Error: Template RPH_0007b RadPharmSubRegionsAndMeasurements/[Row 1a] CONTAINER (RP-101003,99RPH,"Image Region"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Row 10 Automation is required to be present and have a value of Automated</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0007c">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0007c</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0007c (RadPharmTextAnnotation)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,"Text Annotation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100106' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,&quot;Text Annotation&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Text Annotation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,&quot;Text Annotation&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Text Annotation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-100106' and concept/@csd = '99RPH']">    
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,"Text Annotation")/[Row 1b] SCOORD (121055,DCM,"Path")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,&quot;Text Annotation&quot;)/[Row 1b] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'MULTIPOINT'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121055' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,"Text Annotation")/[Row 1b] SCOORD (121055,DCM,"Path")/[Row 2] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,&quot;Text Annotation&quot;)/[Row 1b] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 2] IMAGE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>		
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,"Text Annotation")/[Row 3] TEXT (RP-100106,99RPH,"Text Annotation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007c RadPharmTextAnnotation/[Row 1a] CONTAINER (RP-100106,99RPH,&quot;Text Annotation&quot;)/[Row 3] TEXT (RP-100106,99RPH,&quot;Text Annotation&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Text Annotation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100106' and concept/@csd = '99RPH']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0007d">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0007d</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0007d (RadPharmMeasurementsDerivedFromOtherMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,"Derived Measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'RP-100503' and concept/@csd = '99RPH' and value/@cv = 'RP-100111' and value/@csd = '99RPH']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,&quot;Derived Measurement&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derived Measurement'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101004'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,&quot;Derived Measurement&quot;)'"/>
<xsl:with-param name="row" select="'1a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derived Measurement'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101004'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-101004' and concept/@csd = '99RPH']">    
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,"Derived Measurement")/[Row 1b] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,&quot;Derived Measurement&quot;)/[Row 1b] NUM *'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']">    
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,"Derived Measurement")/[Row 1b] NUM */[Row 2] UIDREF (RP-100112,99RPH,"Source Measurement Object UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0007d RadPharmMeasurementsDerivedFromOtherMeasurements/[Row 1a] CONTAINER (RP-101004,99RPH,&quot;Derived Measurement&quot;)/[Row 1b] NUM */[Row 2] UIDREF (RP-100112,99RPH,&quot;Source Measurement Object UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source Measurement Object UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100112'"/>
<xsl:with-param name="vmmin" select="'2'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100112' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0009">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0009</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0009 (RadPharmRegionMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 1] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 1] NUM *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/>   
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 2] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 2] NUM *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']">    
		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 2] NUM */[Row 3] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 2] NUM */[Row 3] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7473'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 4] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 4] NUM *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']">    
		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 4] NUM */[Row 5] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 4] NUM */[Row 5] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7474'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 6] NUM (RP-100410,99RPH,"Pixel Count")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 6] NUM (RP-100410,99RPH,&quot;Pixel Count&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Count'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100410'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RP-100410' and concept/@csd = '99RPH']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']">   
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM */[Row 8] CODE (121401,DCM,"Derivation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv = '121401' and concept/@csd = 'DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM */[Row 8] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7030'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM */[Row 8] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7030'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121401' and concept/@csd = 'DCM']"/>    
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM */[Row 9] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0009 RadPharmRegionMeasurements/[Row 7] NUM */[Row 9] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7473_7474'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0010">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0010</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0010 (RadPharmClinicalTrialResultsImageLibraryEntry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 2] NUM (111026,DCM,"Horizontal Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 2] NUM (111026,DCM,&quot;Horizontal Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Horizontal Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111026'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111026' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 2] NUM (111026,DCM,"Horizontal Pixel Spacing")/[Row 2a] UIDREF (RP-100403,99RPH,"Measurement Object UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 2] NUM (111026,DCM,&quot;Horizontal Pixel Spacing&quot;)/[Row 2a] UIDREF (RP-100403,99RPH,&quot;Measurement Object UID&quot;)'"/>
<xsl:with-param name="row" select="'2a'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100403'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100403' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 3] NUM (111066,DCM,"Vertical Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 3] NUM (111066,DCM,&quot;Vertical Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Vertical Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111066'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111066' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 3] NUM (111066,DCM,"Vertical Pixel Spacing")/[Row 3a] UIDREF (RP-100403,99RPH,"Measurement Object UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 3] NUM (111066,DCM,&quot;Vertical Pixel Spacing&quot;)/[Row 3a] UIDREF (RP-100403,99RPH,&quot;Measurement Object UID&quot;)'"/>
<xsl:with-param name="row" select="'3a'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Object UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100403'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100403' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 4] NUM (RID12405,RADLEX,"Reconstruction Interval")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 4] NUM (RID12405,RADLEX,&quot;Reconstruction Interval&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reconstruction Interval'"/>
<xsl:with-param name="csdConceptName" select="'RADLEX'"/>
<xsl:with-param name="cvConceptName" select="'RID12405'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RID12405' and concept/@csd = 'RADLEX']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 5] NUM (RID12636,RADLEX,"Slice Thickness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 5] NUM (RID12636,RADLEX,&quot;Slice Thickness&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Slice Thickness'"/>
<xsl:with-param name="csdConceptName" select="'RADLEX'"/>
<xsl:with-param name="cvConceptName" select="'RID12636'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'RID12636' and concept/@csd = 'RADLEX']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (RP-100881,99RPH,"Message Digest")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (RP-100881,99RPH,&quot;Message Digest&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Message Digest'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100881'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100881' and concept/@csd = '99RPH']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (RP-100881,99RPH,"Message Digest")/[Row 7] CODE (RP-100882,99RPH,"Message Digest Algorithm")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (RP-100881,99RPH,&quot;Message Digest&quot;)/[Row 7] CODE (RP-100882,99RPH,&quot;Message Digest Algorithm&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Message Digest Algorithm'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100882'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7060'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100882' and concept/@csd = '99RPH']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (RP-100881,99RPH,"Message Digest")/[Row 8] CODE (RP-100886,99RPH,"Message Digest Scope")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (RP-100881,99RPH,&quot;Message Digest&quot;)/[Row 8] CODE (RP-100886,99RPH,&quot;Message Digest Scope&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Message Digest Scope'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100886'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="'Entire file'"/>
<xsl:with-param name="csdValue" select="'99RPH'"/>
<xsl:with-param name="cvValue" select="'RP-100887'"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100886' and concept/@csd = '99RPH']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 9] TEXT (RP-101090,99RPH,"Input URL")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0010 RadPharmClinicalTrialResultsImageLibraryEntry/[Row 1] IMAGE */[Row 9] TEXT (RP-101090,99RPH,&quot;Input URL&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Input URL'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101090'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-101090' and concept/@csd = '99RPH']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_RPH_0020">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">RPH_0020</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_RPH_0020 (RadPharmAuditTrailEntry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		
			
			
		

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 1] CODE (RP-100090,99RPH,"Completed")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 1] CODE (RP-100090,99RPH,&quot;Completed&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Completed'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100090'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'RPH_7230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100090' and concept/@csd = '99RPH']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,"Creation Information")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,&quot;Creation Information&quot;)'"/>
<xsl:with-param name="row" select="'2a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Creation Information'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-101010' and concept/@csd = '99RPH']">		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,"Creation Information")/[Row 2b] DATETIME (RP-100920,99RPH,"Observation Creation DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,&quot;Creation Information&quot;)/[Row 2b] DATETIME (RP-100920,99RPH,&quot;Observation Creation DateTime&quot;)'"/>
<xsl:with-param name="row" select="'2b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation Creation DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100920'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-100920' and concept/@csd = '99RPH']"/>		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,"Creation Information")/[Row 3] TEXT (RP-100006,99RPH,"Person Observer#s Login Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,&quot;Creation Information&quot;)/[Row 3] TEXT (RP-100006,99RPH,&quot;Person Observer#s Login Name&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Login Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100006'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100006' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,"Creation Information")/[Row 4] UIDREF (RP-100082,99RPH,"Worklist Sub-task UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 2a] CONTAINER (RP-101010,99RPH,&quot;Creation Information&quot;)/[Row 4] UIDREF (RP-100082,99RPH,&quot;Worklist Sub-task UID&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100082'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100082' and concept/@csd = '99RPH']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,"Modification Information")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,&quot;Modification Information&quot;)'"/>
<xsl:with-param name="row" select="'5a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Modification Information'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'RP-101011' and concept/@csd = '99RPH']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,"Modification Information")/[Row 5b] DATETIME (RP-100921,99RPH,"Observation Modification DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,&quot;Modification Information&quot;)/[Row 5b] DATETIME (RP-100921,99RPH,&quot;Observation Modification DateTime&quot;)'"/>
<xsl:with-param name="row" select="'5b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation Modification DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100921'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-100921' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,"Modification Information")/[Row 6] TEXT (RP-100006,99RPH,"Person Observer#s Login Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,&quot;Modification Information&quot;)/[Row 6] TEXT (RP-100006,99RPH,&quot;Person Observer#s Login Name&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Login Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100006'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100006' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,"Modification Information")/[Row 7] UIDREF (RP-100082,99RPH,"Worklist Sub-task UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,&quot;Modification Information&quot;)/[Row 7] UIDREF (RP-100082,99RPH,&quot;Worklist Sub-task UID&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100082'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100082' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,"Modification Information")/[Row 8] CODE (RP-100058,99RPH,"Edit Reason")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,&quot;Modification Information&quot;)/[Row 8] CODE (RP-100058,99RPH,&quot;Edit Reason&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Edit Reason'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100058' and concept/@csd = '99RPH']">		
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,"Modification Information")/[Row 8] CODE (RP-100058,99RPH,"Edit Reason")/[Row 9] TEXT (RP-100923,99RPH,"Edit Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 5a] CONTAINER (RP-101011,99RPH,&quot;Modification Information&quot;)/[Row 8] CODE (RP-100058,99RPH,&quot;Edit Reason&quot;)/[Row 9] TEXT (RP-100923,99RPH,&quot;Edit Comment&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Edit Comment'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100923'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100923' and concept/@csd = '99RPH']"/>		
			</xsl:for-each>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,"Additional Observation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,&quot;Additional Observation&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Additional Observation'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100922'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="'Yes'"/>
<xsl:with-param name="csdValue" select="'SRT'"/>
<xsl:with-param name="cvValue" select="'R-0038D'"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100922' and concept/@csd = '99RPH']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,"Additional Observation")/[Row 10b] DATETIME (RP-101014,99RPH,"Observation Addition DateTime")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,&quot;Additional Observation&quot;)/[Row 10b] DATETIME (RP-101014,99RPH,&quot;Observation Addition DateTime&quot;)'"/>
<xsl:with-param name="row" select="'10b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observation Addition DateTime'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-101014'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = 'RP-101014' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,"Additional Observation")/[Row 11] TEXT (RP-100006,99RPH,"Person Observer#s Login Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,&quot;Additional Observation&quot;)/[Row 11] TEXT (RP-100006,99RPH,&quot;Person Observer#s Login Name&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Login Name'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100006'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100006' and concept/@csd = '99RPH']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,"Additional Observation")/[Row 12] UIDREF (RP-100082,99RPH,"Worklist Sub-task UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,&quot;Additional Observation&quot;)/[Row 12] UIDREF (RP-100082,99RPH,&quot;Worklist Sub-task UID&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Worklist Sub-task UID'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100082'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = 'RP-100082' and concept/@csd = '99RPH']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,"Additional Observation")/[Row 13] CODE (RP-100058,99RPH,"Edit Reason")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,&quot;Additional Observation&quot;)/[Row 13] CODE (RP-100058,99RPH,&quot;Edit Reason&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Edit Reason'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'RP-100058' and concept/@csd = '99RPH']">		
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,"Additional Observation")/[Row 13] CODE (RP-100058,99RPH,"Edit Reason")/[Row 14] TEXT (RP-100923,99RPH,"Edit Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template RPH_0020 RadPharmAuditTrailEntry/[Row 10] CODE (RP-100922,99RPH,&quot;Additional Observation&quot;)/[Row 13] CODE (RP-100058,99RPH,&quot;Edit Reason&quot;)/[Row 14] TEXT (RP-100923,99RPH,&quot;Edit Comment&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Edit Comment'"/>
<xsl:with-param name="csdConceptName" select="'99RPH'"/>
<xsl:with-param name="cvConceptName" select="'RP-100923'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'RP-100923' and concept/@csd = '99RPH']"/>	
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_300">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">300</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_300 (Measurement)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']">
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 2] CODE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 2] CODE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 3] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 3] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 4] CODE (121401,DCM,"Derivation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 4] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121401' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 5] CODE (G-C0E3,SRT,"Finding Site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 5] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E3' and concept/@csd = 'SRT']">
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 5] CODE (G-C0E3,SRT,"Finding Site")/[Row 6] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 5] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 6] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 5] CODE (G-C0E3,SRT,"Finding Site")/[Row 7] CODE (G-A1F8,SRT,"Topographical modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 5] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 7] CODE (G-A1F8,SRT,&quot;Topographical modifier&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Topographical modifier'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A1F8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-A1F8' and concept/@csd = 'SRT']"/>
    		</xsl:for-each>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_310</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_310</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_310">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 9] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 9] NUM *'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/> 
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 10] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 10] NUM *'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_315</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_315</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121420' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121421' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121424' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121422' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121423' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_315">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 12] TEXT CID 228</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121420' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121421' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121424' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121422' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121423' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 12] TEXT CID 228'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="'228'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 12] TEXT CID 228'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="'228'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[(name() = 'text' and concept/@cv = '121420' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121421' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121424' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121422' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121423' and concept/@csd = 'DCM')]"/>	
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_320</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_320</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_320">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_321</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_321</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_321">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1000">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 16] TEXT (121050,DCM,"Equivalent Meaning of Concept Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 16] TEXT (121050,DCM,&quot;Equivalent Meaning of Concept Name&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Equivalent Meaning of Concept Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121050'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121050' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 300 Measurement/[Row 1] NUM */[Row 18] COMPOSITE (126100,DCM,"Real World Value Map used for measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 300 Measurement/[Row 1] NUM */[Row 18] COMPOSITE (126100,DCM,&quot;Real World Value Map used for measurement&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Real World Value Map used for measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '126100' and concept/@csd = 'DCM']"/>	

        </xsl:for-each>
    </xsl:template>
<xsl:template name="TID_310">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">310</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_310 (MeasurementProperties)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 310 MeasurementProperties/[Row 1] CODE (121402,DCM,"Normality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 310 MeasurementProperties/[Row 1] CODE (121402,DCM,&quot;Normality&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Normality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121402'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'222'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121402' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_311</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_311</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_311">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
        
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_312</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_312</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_312">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
        
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 310 MeasurementProperties/[Row 4] CODE (121403,DCM,"Level of Significance")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 310 MeasurementProperties/[Row 4] CODE (121403,DCM,&quot;Level of Significance&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Level of Significance'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121403'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'220'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121403' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 310 MeasurementProperties/[Row 5] NUM CID 225</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 310 MeasurementProperties/[Row 5] NUM CID 225'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'225'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'R-00363' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00364' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00362' and concept/@csd = 'SRT')]"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 310 MeasurementProperties/[Row 6] CODE (121404,DCM,"Selection Status")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 310 MeasurementProperties/[Row 6] CODE (121404,DCM,&quot;Selection Status&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Selection Status'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121404'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'224'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121404' and concept/@csd = 'DCM']"/>
    </xsl:template>
<xsl:template name="TID_311">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">311</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_311 (MeasurementStatisticalProperties)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 311 MeasurementStatisticalProperties/[Row 1] NUM CID 221</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 311 MeasurementStatisticalProperties/[Row 1] NUM CID 221'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'221'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'R-00337' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00338' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00346' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00387' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00317' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00319' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00377' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00397' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00347' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-00388' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121414' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121417' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121415' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121416' and concept/@csd = 'DCM')]"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 311 MeasurementStatisticalProperties/[Row 2] TEXT (121405,DCM,"Population description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 311 MeasurementStatisticalProperties/[Row 2] TEXT (121405,DCM,&quot;Population description&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Population description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121405'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121405' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 311 MeasurementStatisticalProperties/[Row 3] TEXT (121406,DCM,"Reference Authority")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121406' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 311 MeasurementStatisticalProperties/[Row 3] TEXT (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 311 MeasurementStatisticalProperties/[Row 3] TEXT (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121406' and concept/@csd = 'DCM']"/>	
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 311 MeasurementStatisticalProperties/[Row 4] CODE (121406,DCM,"Reference Authority")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121406' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 311 MeasurementStatisticalProperties/[Row 4] CODE (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 311 MeasurementStatisticalProperties/[Row 4] CODE (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121406' and concept/@csd = 'DCM']"/>	
    </xsl:template>
<xsl:template name="TID_312">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">312</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_312 (NormalRangeProperties)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 312 NormalRangeProperties/[Row 1] NUM CID 223</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 312 NormalRangeProperties/[Row 1] NUM CID 223'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'223'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'R-0038B' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'R-10041' and concept/@csd = 'SRT')]"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 312 NormalRangeProperties/[Row 2] TEXT (121407,DCM,"Normal Range description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 312 NormalRangeProperties/[Row 2] TEXT (121407,DCM,&quot;Normal Range description&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Normal Range description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121407'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121407' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 312 NormalRangeProperties/[Row 3] TEXT (121408,DCM,"Normal Range Authority")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121408' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 312 NormalRangeProperties/[Row 3] TEXT (121408,DCM,&quot;Normal Range Authority&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Normal Range Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121408'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 312 NormalRangeProperties/[Row 3] TEXT (121408,DCM,&quot;Normal Range Authority&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Normal Range Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121408'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121408' and concept/@csd = 'DCM']"/> 
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 312 NormalRangeProperties/[Row 4] CODE (121408,DCM,"Normal Range Authority")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121408' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 312 NormalRangeProperties/[Row 4] CODE (121408,DCM,&quot;Normal Range Authority&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Normal Range Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121408'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 312 NormalRangeProperties/[Row 4] CODE (121408,DCM,&quot;Normal Range Authority&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Normal Range Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121408'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121408' and concept/@csd = 'DCM']"/> 
    </xsl:template>
<xsl:template name="TID_315">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">315</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_315 (EquationOrTable)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 315 EquationOrTable/[Row 1] CODE CID 228</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 315 EquationOrTable/[Row 1] CODE CID 228'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="'228'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'code' and concept/@cv = '121420' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121421' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121424' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121422' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121423' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 315 EquationOrTable/[Row 1] CODE CID 228/[Row 2] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 315 EquationOrTable/[Row 1] CODE CID 228/[Row 2] NUM *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 315 EquationOrTable/[Row 1] CODE CID 228/[Row 3] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 315 EquationOrTable/[Row 1] CODE CID 228/[Row 3] NUM *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/>
</xsl:for-each>
    </xsl:template>
<xsl:template name="TID_320">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">320</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_320 (ImageOrSpatialCoordinates)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 320 ImageOrSpatialCoordinates/[Row 1] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference) = 0 and count(scoord) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 1] IMAGE *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 1] IMAGE *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 320 ImageOrSpatialCoordinates/[Row 2] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image) = 0 and count(scoord) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 2] IMAGE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 2] IMAGE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference) = 0 and count(image) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord']"> 
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD */[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD */[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD */[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD */[Row 5] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD */[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 320 ImageOrSpatialCoordinates/[Row 3] SCOORD */[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
        </xsl:for-each>
    </xsl:template>
<xsl:template name="TID_321">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">321</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_321 (WaveformOrTemporalCoordinates)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 321 WaveformOrTemporalCoordinates/[Row 1] WAVEFORM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference) = 0 and count(tcoord) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 1] WAVEFORM *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 1] WAVEFORM *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'waveform']"/> 
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 321 WaveformOrTemporalCoordinates/[Row 2] WAVEFORM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(waveform) = 0 and count(tcoord) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 2] WAVEFORM *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 2] WAVEFORM *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'waveform']"/> 
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference) = 0 and count(waveform) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'tcoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'tcoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'tcoord']"> 
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD */[Row 4] WAVEFORM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD */[Row 4] WAVEFORM *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD */[Row 4] WAVEFORM *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'waveform']"/> 
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD */[Row 5] WAVEFORM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(waveform) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD */[Row 5] WAVEFORM *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 321 WaveformOrTemporalCoordinates/[Row 3] TCOORD */[Row 5] WAVEFORM *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'waveform']"/> 
        </xsl:for-each>
    </xsl:template>
<xsl:template name="TID_1000">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1000</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1000 (Quotation)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1000 Quotation/[Row 1] CODE (121001,DCM,"Quotation Mode")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1000 Quotation/[Row 1] CODE (121001,DCM,&quot;Quotation Mode&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Quotation Mode'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121001'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'PMP_1000A'"/>
<xsl:with-param name="valueSetBDE" select="'E'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121001' and concept/@csd = 'DCM']">
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1000 Quotation/[Row 2] COMPOSITE (121002,DCM,"Quoted Source")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1000 Quotation/[Row 2] COMPOSITE (121002,DCM,&quot;Quoted Source&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Quoted Source'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '121002' and concept/@csd = 'DCM']">
			
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1001">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1001">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1001</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1001 (ObservationContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1005">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_1002">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1002</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1002 (ObserverContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1002 ObserverContext/[Row 1] CODE (121005,DCM,"Observer Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1002 ObserverContext/[Row 1] CODE (121005,DCM,&quot;Observer Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Observer Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121005'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'270'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121005' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(code[concept/@cv='121005' and concept/@csd='DCM']) = 0 and count(pname[concept/@cv='121008' and concept/@csd='DCM']) &gt; 0) or count(code[concept/@cv='121005' and concept/@csd='DCM' and value/@cv='121006' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_1003">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121005' and concept/@csd='DCM' and value/@cv='121007' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_1004">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_1003">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1003</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1003 (PersonObserverIdentifyingAttributes)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1003 PersonObserverIdentifyingAttributes/[Row 1] PNAME (121008,DCM,"Person Observer Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1003 PersonObserverIdentifyingAttributes/[Row 1] PNAME (121008,DCM,&quot;Person Observer Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'pname'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121008'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'pname' and concept/@cv = '121008' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1003 PersonObserverIdentifyingAttributes/[Row 2] TEXT (121009,DCM,"Person Observer#s Organization Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1003 PersonObserverIdentifyingAttributes/[Row 2] TEXT (121009,DCM,&quot;Person Observer#s Organization Name&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Organization Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121009' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1003 PersonObserverIdentifyingAttributes/[Row 3] CODE (121010,DCM,"Person Observer#s Role in the Organization")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1003 PersonObserverIdentifyingAttributes/[Row 3] CODE (121010,DCM,&quot;Person Observer#s Role in the Organization&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Role in the Organization'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7452'"/>
<xsl:with-param name="valueSetBDE" select="'B'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121010' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1003 PersonObserverIdentifyingAttributes/[Row 4] CODE (121011,DCM,"Person Observer#s Role in this Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1003 PersonObserverIdentifyingAttributes/[Row 4] CODE (121011,DCM,&quot;Person Observer#s Role in this Procedure&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Observer#s Role in this Procedure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7453'"/>
<xsl:with-param name="valueSetBDE" select="'B'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121011' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1004">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1004</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1004 (DeviceObserverIdentifyingAttributes)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 1] UIDREF (121012,DCM,"Device Observer UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 1] UIDREF (121012,DCM,&quot;Device Observer UID&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121012' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 2] TEXT (121013,DCM,"Device Observer Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 2] TEXT (121013,DCM,&quot;Device Observer Name&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121013'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121013' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 3] TEXT (121014,DCM,"Device Observer Manufacturer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 3] TEXT (121014,DCM,&quot;Device Observer Manufacturer&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer Manufacturer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121014'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121014' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 4] TEXT (121015,DCM,"Device Observer Model Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 4] TEXT (121015,DCM,&quot;Device Observer Model Name&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer Model Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121015'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121015' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 5] TEXT (121016,DCM,"Device Observer Serial Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 5] TEXT (121016,DCM,&quot;Device Observer Serial Number&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer Serial Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121016'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121016' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 6] TEXT (121017,DCM,"Device Observer Physical Location During Observation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 6] TEXT (121017,DCM,&quot;Device Observer Physical Location During Observation&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer Physical Location During Observation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121017'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121017' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1004 DeviceObserverIdentifyingAttributes/[Row 7] CODE (113876,DCM,"Device Role in Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1004 DeviceObserverIdentifyingAttributes/[Row 7] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Role in Procedure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113876'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7445'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113876' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1005">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1005</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1005 (ProcedureContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 1] UIDREF (121018,DCM,"Procedure Study Instance UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 1] UIDREF (121018,DCM,&quot;Procedure Study Instance UID&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Study Instance UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121018' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 2] UIDREF (121019,DCM,"Procedure Study Component UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 2] UIDREF (121019,DCM,&quot;Procedure Study Component UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Study Component UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121019' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 3] TEXT (121020,DCM,"Placer Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 3] TEXT (121020,DCM,&quot;Placer Number&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Placer Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121020'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121020' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 3] TEXT (121020,DCM,"Placer Number")/[Row 4] TEXT (110190,DCM,"Issuer of Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 3] TEXT (121020,DCM,&quot;Placer Number&quot;)/[Row 4] TEXT (110190,DCM,&quot;Issuer of Identifier&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Issuer of Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110190'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '110190' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 5] TEXT (121021,DCM,"Filler Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 5] TEXT (121021,DCM,&quot;Filler Number&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Filler Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121021'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121021' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 5] TEXT (121021,DCM,"Filler Number")/[Row 6] TEXT (110190,DCM,"Issuer of Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 5] TEXT (121021,DCM,&quot;Filler Number&quot;)/[Row 6] TEXT (110190,DCM,&quot;Issuer of Identifier&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Issuer of Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110190'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '110190' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 7] TEXT (121022,DCM,"Accession Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 7] TEXT (121022,DCM,&quot;Accession Number&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accession Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121022'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121022' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 7] TEXT (121022,DCM,"Accession Number")/[Row 8] TEXT (110190,DCM,"Issuer of Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 7] TEXT (121022,DCM,&quot;Accession Number&quot;)/[Row 8] TEXT (110190,DCM,&quot;Issuer of Identifier&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Issuer of Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110190'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '110190' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1005 ProcedureContext/[Row 9] CODE (121023,DCM,"Procedure Code")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1005 ProcedureContext/[Row 9] CODE (121023,DCM,&quot;Procedure Code&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Code'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121023'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121023' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1006">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1006</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1006 (SubjectContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1006 SubjectContext/[Row 1] CODE (121024,DCM,"Subject Class")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1006 SubjectContext/[Row 1] CODE (121024,DCM,&quot;Subject Class&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Class'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121024'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'271'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121024' and concept/@csd = 'DCM']"/>  
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1007">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1008</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1008</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1008">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1009">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1010">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_1007">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1007</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1007 (SubjectContextPatient)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 1] UIDREF (121028,DCM,"Subject UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 1] UIDREF (121028,DCM,&quot;Subject UID&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121028' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 2] PNAME (121029,DCM,"Subject Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 2] PNAME (121029,DCM,&quot;Subject Name&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'pname'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121029'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'pname' and concept/@cv = '121029' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 3] CODE (121030,DCM,"Subject ID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 3] CODE (121030,DCM,&quot;Subject ID&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject ID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121030' and concept/@csd = 'DCM']"/>   
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 4] DATE (121031,DCM,"Subject Birth Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 4] DATE (121031,DCM,&quot;Subject Birth Date&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Birth Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '121031' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 5] CODE (121032,DCM,"Subject Sex")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 5] CODE (121032,DCM,&quot;Subject Sex&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Sex'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121032'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7455'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121032' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 6] NUM (121033,DCM,"Subject Age")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 6] NUM (121033,DCM,&quot;Subject Age&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Age'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121033'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'7456'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '121033' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 7] CODE (121034,DCM,"Subject Species")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 7] CODE (121034,DCM,&quot;Subject Species&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Species'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121034'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7454'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121034' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1007 SubjectContextPatient/[Row 8] CODE (121035,DCM,"Subject Breed")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1007 SubjectContextPatient/[Row 8] CODE (121035,DCM,&quot;Subject Breed&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Breed'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121035'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7480'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121035' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1008">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1008</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1008 (SubjectContextFetus)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1008 SubjectContextFetus/[Row 1] PNAME (121036,DCM,"Mother of fetus")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 1] PNAME (121036,DCM,&quot;Mother of fetus&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'pname'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Mother of fetus'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'pname' and concept/@cv = '121036' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1008 SubjectContextFetus/[Row 2] UIDREF (121028,DCM,"Subject UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 2] UIDREF (121028,DCM,&quot;Subject UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121028' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1008 SubjectContextFetus/[Row 3] TEXT (121030,DCM,"Subject ID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='11951-1' and concept/@csd='LN']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 3] TEXT (121030,DCM,&quot;Subject ID&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject ID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 3] TEXT (121030,DCM,&quot;Subject ID&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject ID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121030' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1008 SubjectContextFetus/[Row 4] TEXT (11951-1,LN,"Fetus ID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121030' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 4] TEXT (11951-1,LN,&quot;Fetus ID&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fetus ID'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'11951-1'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 4] TEXT (11951-1,LN,&quot;Fetus ID&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fetus ID'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'11951-1'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '11951-1' and concept/@csd = 'LN']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1008 SubjectContextFetus/[Row 5] NUM (11878-6,LN,"Number of Fetuses")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1008 SubjectContextFetus/[Row 5] NUM (11878-6,LN,&quot;Number of Fetuses&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of Fetuses'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'11878-6'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '11878-6' and concept/@csd = 'LN']"/>
	</xsl:template>
<xsl:template name="TID_1009">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1009</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1009 (SubjectContextSpecimen)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1009 SubjectContextSpecimen/[Row 1] UIDREF (121039,DCM,"Specimen UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1009 SubjectContextSpecimen/[Row 1] UIDREF (121039,DCM,&quot;Specimen UID&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Specimen UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121039' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1009 SubjectContextSpecimen/[Row 2] TEXT (121040,DCM,"Specimen Accession Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1009 SubjectContextSpecimen/[Row 2] TEXT (121040,DCM,&quot;Specimen Accession Number&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Specimen Accession Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121040' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1007">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1009 SubjectContextSpecimen/[Row 4] TEXT (121041,DCM,"Specimen Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1009 SubjectContextSpecimen/[Row 4] TEXT (121041,DCM,&quot;Specimen Identifier&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Specimen Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121041'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121041' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1009 SubjectContextSpecimen/[Row 5] CODE (121042,DCM,"Specimen Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1009 SubjectContextSpecimen/[Row 5] CODE (121042,DCM,&quot;Specimen Type&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Specimen Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121042'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121042' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1009 SubjectContextSpecimen/[Row 6] TEXT (121043,DCM,"Slide Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1009 SubjectContextSpecimen/[Row 6] TEXT (121043,DCM,&quot;Slide Identifier&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Slide Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121043'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121043' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1009 SubjectContextSpecimen/[Row 7] UIDREF (121044,DCM,"Slide UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1009 SubjectContextSpecimen/[Row 7] UIDREF (121044,DCM,&quot;Slide UID&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Slide UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121044'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121044' and concept/@csd = 'DCM']"/>	
	</xsl:template>
<xsl:template name="TID_1010">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1010</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1010 (SubjectContextDevice)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1010 SubjectContextDevice/[Row 1] TEXT (121193,DCM,"Device Subject Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1010 SubjectContextDevice/[Row 1] TEXT (121193,DCM,&quot;Device Subject Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Subject Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121193'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121193' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1010 SubjectContextDevice/[Row 2] UIDREF (121198,DCM,"Device Subject UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1010 SubjectContextDevice/[Row 2] UIDREF (121198,DCM,&quot;Device Subject UID&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Subject UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121198'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121198' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1010 SubjectContextDevice/[Row 3] TEXT (121194,DCM,"Device Subject Manufacturer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1010 SubjectContextDevice/[Row 3] TEXT (121194,DCM,&quot;Device Subject Manufacturer&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Subject Manufacturer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121194'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121194' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1010 SubjectContextDevice/[Row 4] TEXT (121195,DCM,"Device Subject Model Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1010 SubjectContextDevice/[Row 4] TEXT (121195,DCM,&quot;Device Subject Model Name&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Subject Model Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121195'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121195' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1010 SubjectContextDevice/[Row 5] TEXT (121196,DCM,"Device Subject Serial Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1010 SubjectContextDevice/[Row 5] TEXT (121196,DCM,&quot;Device Subject Serial Number&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Subject Serial Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121196'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121196' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1010 SubjectContextDevice/[Row 6] TEXT (121197,DCM,"Device Subject Physical Location during observation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1010 SubjectContextDevice/[Row 6] TEXT (121197,DCM,&quot;Device Subject Physical Location during observation&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Subject Physical Location during observation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121197'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121197' and concept/@csd = 'DCM']"/>	
	</xsl:template>
<xsl:template name="TID_1020">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1020</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1020 (PersonParticipant)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		
			
		
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,"Person Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,&quot;Person Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'pname'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113870'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'pname' and concept/@cv = '113870' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,"Person Name")/[Row 2] CODE (113875,DCM,"Person Role in Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,&quot;Person Name&quot;)/[Row 2] CODE (113875,DCM,&quot;Person Role in Procedure&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Role in Procedure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113875'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113875' and concept/@csd = 'DCM']"/>		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,"Person Name")/[Row 3] TEXT (113871,DCM,"Person ID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,&quot;Person Name&quot;)/[Row 3] TEXT (113871,DCM,&quot;Person ID&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person ID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113871'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113871' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,"Person Name")/[Row 4] TEXT (113872,DCM,"Person ID Issuer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,&quot;Person Name&quot;)/[Row 4] TEXT (113872,DCM,&quot;Person ID Issuer&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person ID Issuer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113872'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113872' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,"Person Name")/[Row 5] TEXT (113873,DCM,"Organization Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,&quot;Person Name&quot;)/[Row 5] TEXT (113873,DCM,&quot;Organization Name&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Organization Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113873'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113873' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,"Person Name")/[Row 6] CODE (113874,DCM,"Person Role in Organization")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1020 PersonParticipant/[Row 1] PNAME (113870,DCM,&quot;Person Name&quot;)/[Row 6] CODE (113874,DCM,&quot;Person Role in Organization&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Person Role in Organization'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113874'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7452'"/>
<xsl:with-param name="valueSetBDE" select="'B'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113874' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1021">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1021</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1021 (DeviceParticipant)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		
			
		
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,"Device Role in Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Role in Procedure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113876'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'2'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113876' and concept/@csd = 'DCM']">		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,"Device Role in Procedure")/[Row 2] TEXT (113877,DCM,"Device Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)/[Row 2] TEXT (113877,DCM,&quot;Device Name&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113877'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113877' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,"Device Role in Procedure")/[Row 3] TEXT (113878,DCM,"Device Manufacturer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)/[Row 3] TEXT (113878,DCM,&quot;Device Manufacturer&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Manufacturer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113878'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113878' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,"Device Role in Procedure")/[Row 4] TEXT (113879,DCM,"Device Model Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)/[Row 4] TEXT (113879,DCM,&quot;Device Model Name&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Model Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113879'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113879' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,"Device Role in Procedure")/[Row 5] TEXT (113880,DCM,"Device Serial Number")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)/[Row 5] TEXT (113880,DCM,&quot;Device Serial Number&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Serial Number'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113880'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113880' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,"Device Role in Procedure")/[Row 6] UIDREF (121012,DCM,"Device Observer UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1021 DeviceParticipant/[Row 1] CODE (113876,DCM,&quot;Device Role in Procedure&quot;)/[Row 6] UIDREF (121012,DCM,&quot;Device Observer UID&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Device Observer UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121012' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1201">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1201</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1201 (LanguageOfValue)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1201 LanguageOfValue/[Row 1] CODE (121047,DCM,"Language of Value")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1201 LanguageOfValue/[Row 1] CODE (121047,DCM,&quot;Language of Value&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Language of Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121047'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'5000'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121047' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1201 LanguageOfValue/[Row 1] CODE (121047,DCM,"Language of Value")/[Row 2] CODE (121046,DCM,"Country of Language")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1201 LanguageOfValue/[Row 1] CODE (121047,DCM,&quot;Language of Value&quot;)/[Row 2] CODE (121046,DCM,&quot;Country of Language&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Country of Language'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121046'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'5001'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121046' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1204">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1204</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1204 (LanguageOfContentItemAndDescendants)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1204 LanguageOfContentItemAndDescendants/[Row 1] CODE (121049,DCM,"Language of Content Item and Descendants")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1204 LanguageOfContentItemAndDescendants/[Row 1] CODE (121049,DCM,&quot;Language of Content Item and Descendants&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Language of Content Item and Descendants'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121049'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'5000'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121049' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1204 LanguageOfContentItemAndDescendants/[Row 1] CODE (121049,DCM,"Language of Content Item and Descendants")/[Row 2] CODE (121046,DCM,"Country of Language")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1204 LanguageOfContentItemAndDescendants/[Row 1] CODE (121049,DCM,&quot;Language of Content Item and Descendants&quot;)/[Row 2] CODE (121046,DCM,&quot;Country of Language&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Country of Language'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121046'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'5001'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121046' and concept/@csd = 'DCM']"/>
		</xsl:for-each>	
	</xsl:template>
<xsl:template name="TID_1210">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1210</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1210 (EquivalentMeaningOfConceptName)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1210 EquivalentMeaningOfConceptName/[Row 1] TEXT (121050,DCM,"Equivalent Meaning of Concept Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121050' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1210 EquivalentMeaningOfConceptName/[Row 1] TEXT (121050,DCM,&quot;Equivalent Meaning of Concept Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS  CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Equivalent Meaning of Concept Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121050'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1210 EquivalentMeaningOfConceptName/[Row 1] TEXT (121050,DCM,&quot;Equivalent Meaning of Concept Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS  CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Equivalent Meaning of Concept Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121050'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121050' and concept/@csd = 'DCM']"> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1201</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1201</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1201">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1210 EquivalentMeaningOfConceptName/[Row 3] CODE (121050,DCM,"Equivalent Meaning of Concept Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121050' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1210 EquivalentMeaningOfConceptName/[Row 3] CODE (121050,DCM,&quot;Equivalent Meaning of Concept Name&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS  CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Equivalent Meaning of Concept Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121050'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1210 EquivalentMeaningOfConceptName/[Row 3] CODE (121050,DCM,&quot;Equivalent Meaning of Concept Name&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS  CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Equivalent Meaning of Concept Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121050'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121050' and concept/@csd = 'DCM']">	 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1201</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1201</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1201">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>	
	</xsl:template>
<xsl:template name="TID_1400M">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1400M</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1400M (LinearMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'7470'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'7460'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'G-A22A' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121211' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121206' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = 'G-A220' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-D785' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'M-02550' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A185' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A186' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A193' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A194' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A195' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A196' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A197' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'M-02560' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A198' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121207' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,"Path")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord[concept/@cv = '121230' and concept/@csd = 'DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE_CIRCLE_ELLIPSE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE_CIRCLE_ELLIPSE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121055' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,"Path")/[Row 3] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,"Path")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
			</xsl:for-each>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,"Path Vertex")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord[concept/@cv = '121055' and concept/@csd = 'DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path Vertex'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121230'"/>
<xsl:with-param name="vmmin" select="'2'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POINT'"/>
<xsl:with-param name="numpointsmin" select="'1'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path Vertex'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121230'"/>
<xsl:with-param name="vmmin" select="'2'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POINT'"/>
<xsl:with-param name="numpointsmin" select="'1'"/>
<xsl:with-param name="numpointsmax" select="'1'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121230' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,"Path Vertex")/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,"Path Vertex")/[Row 7] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400M LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>  
			</xsl:for-each>
</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1400IFM">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1400IFM</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1400IFM (LinearMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'7470'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'7460'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'G-A22A' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121211' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121206' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = 'G-A220' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-D785' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'M-02550' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A185' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A186' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A193' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A194' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A195' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A196' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A197' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'M-02560' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A198' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121207' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,"Path")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord[concept/@cv = '121230' and concept/@csd = 'DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE_CIRCLE_ELLIPSE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE_CIRCLE_ELLIPSE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121055' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,"Path")/[Row 3] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,"Path")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
			</xsl:for-each>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,"Path Vertex")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord[concept/@cv = '121055' and concept/@csd = 'DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path Vertex'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121230'"/>
<xsl:with-param name="vmmin" select="'2'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POINT'"/>
<xsl:with-param name="numpointsmin" select="'1'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path Vertex'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121230'"/>
<xsl:with-param name="vmmin" select="'2'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POINT'"/>
<xsl:with-param name="numpointsmin" select="'1'"/>
<xsl:with-param name="numpointsmax" select="'1'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121230' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,"Path Vertex")/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,"Path Vertex")/[Row 7] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1400IFM LinearMeasurementTemplate/[Row 1] NUM CID 7470/[Row 5] SCOORD (121230,DCM,&quot;Path Vertex&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>  
			</xsl:for-each>
</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1400CN">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1400CN</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1400CN (LinearMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1401M">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1401M</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1401M (AreaMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'7471'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'7461'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'G-A166' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = 'G-A16A' and concept/@csd = 'SRT')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,"Path")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'G-A16A' and concept/@csd = 'SRT'])&gt;0 and count(image)=0 and count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'NOT_MULTIPOINT'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Path'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'NOT_MULTIPOINT'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121055' and concept/@csd = 'DCM']"> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,"Path")/[Row 3] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,"Path")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 2] SCOORD (121055,DCM,&quot;Path&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
			</xsl:for-each>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 5] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'G-A16A' and concept/@csd = 'SRT'])&gt;0 and count(scoord)=0 and count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv = 'G-A16A' and concept/@csd = 'SRT'])&gt;0 and count(scoord)=0 and count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 7] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1401M AreaMeasurementTemplate/[Row 1] NUM CID 7471/[Row 7] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7473'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1401IF">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1401IF</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1401IF (AreaMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1401CN">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1401CN</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1401CN (AreaMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1402M">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1402M</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1402M (VolumeMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'7472'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'7462'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = 'G-D705' and concept/@csd = 'SRT') or (name() = 'num' and concept/@cv = '121216' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121218' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121217' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121222' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121221' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121220' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '121219' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,"Perimeter Outline")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,&quot;Perimeter Outline&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Perimeter Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121057'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'NOT_MULTIPOINT'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,&quot;Perimeter Outline&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Perimeter Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121057'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'NOT_MULTIPOINT'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '121057' and concept/@csd = 'DCM']"> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,"Perimeter Outline")/[Row 3] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,&quot;Perimeter Outline&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,&quot;Perimeter Outline&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,"Perimeter Outline")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,&quot;Perimeter Outline&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 2] SCOORD (121057,DCM,&quot;Perimeter Outline&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
			</xsl:for-each>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 5] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord)=0 and count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 5] IMAGE *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord)=0 and count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 7] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1402M VolumeMeasurementTemplate/[Row 1] NUM CID 7472/[Row 7] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7474'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1402IF">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1402IF</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1402IF (VolumeMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1402CN">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1402CN</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1402CN (VolumeMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1404IF">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1404IF</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1404IF (NumericMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_1404CN">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1404CN</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1404CN (NumericMeasurementTemplate)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_2000">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">2000</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_2000 (BasicDiagnosticImagingReport)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_2000 (BasicDiagnosticImagingReport)</xsl:text>
<xsl:value-of select="$newline"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2000 BasicDiagnosticImagingReport/[Row 1] CONTAINER CID 7000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2000 BasicDiagnosticImagingReport/[Row 1] CONTAINER CID 7000'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="'7000'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'container' and concept/@cv = '18745-0' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11540-2' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11538-6' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11539-4' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18747-6' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18748-4' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11522-0' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18760-9' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11541-0' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18755-9' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18756-7' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18757-5' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11525-3' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18758-3' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11528-7' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18750-0' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '11524-0' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18752-6' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18754-2' and concept/@csd = 'LN') or (name() = 'container' and concept/@cv = '18782-3' and concept/@csd = 'LN')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2000 BasicDiagnosticImagingReport/[Row 1] CONTAINER CID 7000/[Row 2] CODE (121058,DCM,"Procedure reported")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2000 BasicDiagnosticImagingReport/[Row 1] CONTAINER CID 7000/[Row 2] CODE (121058,DCM,&quot;Procedure reported&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure reported'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121058' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1210</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1210</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1210">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1001">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2000 BasicDiagnosticImagingReport/[Row 1] CONTAINER CID 7000/[Row 6] CONTAINER CID 7001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2000 BasicDiagnosticImagingReport/[Row 1] CONTAINER CID 7000/[Row 6] CONTAINER CID 7001'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="'7001'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'container' and concept/@cv = '121060' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121062' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121064' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121066' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121068' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121070' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121072' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121074' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121076' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121078' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121109' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121110' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121113' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121111' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '121180' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1001">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_2002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_2002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_2002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
</xsl:for-each>
</xsl:for-each>	
	<xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_2001IF">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">2001IF</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_2001IF (BasicDiagnosticImagingReportObservations)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2001IF BasicDiagnosticImagingReportObservations/[Row 1] IMAGE CID 7003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2001IF BasicDiagnosticImagingReportObservations/[Row 1] IMAGE CID 7003'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="'7003'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2001IF BasicDiagnosticImagingReportObservations/[Row 1] IMAGE CID 7003'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="'7003'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[(name() = 'image' and concept/@cv = '121079' and concept/@csd = 'DCM') or (name() = 'image' and concept/@cv = '121080' and concept/@csd = 'DCM') or (name() = 'image' and concept/@cv = '121112' and concept/@csd = 'DCM')]"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400IFM</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400IFM</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_1400IFM">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1401IF">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1402IF">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1404IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1404IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1404IF">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_2001CN">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">2001CN</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_2001CN (BasicDiagnosticImagingReportObservations)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2001CN BasicDiagnosticImagingReportObservations/[Row 1] IMAGE CID 7003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2001CN BasicDiagnosticImagingReportObservations/[Row 1] IMAGE CID 7003'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="'7003'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2001CN BasicDiagnosticImagingReportObservations/[Row 1] IMAGE CID 7003'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="'7003'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[(name() = 'image' and concept/@cv = '121079' and concept/@csd = 'DCM') or (name() = 'image' and concept/@cv = '121080' and concept/@csd = 'DCM') or (name() = 'image' and concept/@cv = '121112' and concept/@csd = 'DCM')]"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1400CN">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1401CN">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1402CN">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1404CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1404CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1404CN">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_2002">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">2002</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_2002 (ReportNarrative)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2002 ReportNarrative/[Row 1] CODE CID 7002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2002 ReportNarrative/[Row 1] CODE CID 7002'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="'7002'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'code' and concept/@cv = '121060' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121062' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121065' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121069' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121071' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121073' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121075' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121077' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = 'DD-60002' and concept/@csd = 'SRT') or (name() = 'code' and concept/@cv = '121110' and concept/@csd = 'DCM') or (name() = 'code' and concept/@cv = '121111' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_2001IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_2001IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_2001IF">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
</xsl:for-each>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2002 ReportNarrative/[Row 3] TEXT CID 7002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2002 ReportNarrative/[Row 3] TEXT CID 7002'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="'7002'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'text' and concept/@cv = '121060' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121062' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121065' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121069' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121071' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121073' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121075' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121077' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = 'DD-60002' and concept/@csd = 'SRT') or (name() = 'text' and concept/@cv = '121110' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121111' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_2001IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_2001IF</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_2001IF">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
</xsl:for-each>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_2001CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_2001CN</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_2001CN">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_2010">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">2010</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_2010 (KeyObjectSelection)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_2010 (KeyObjectSelection)</xsl:text>
<xsl:value-of select="$newline"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="'7010_WithTCE'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'container' and concept/@cv = '113000' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113001' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113002' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113003' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113004' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113005' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113006' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113007' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113008' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113009' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113010' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113013' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113018' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113020' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113021' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113030' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113031' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113032' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113033' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113034' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113035' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113036' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113037' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113038' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '113039' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = 'TCE001' and concept/@csd = 'IHERADTF')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 2] CODE (113011,DCM,"Document Title Modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 2] CODE (113011,DCM,&quot;Document Title Modifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Document Title Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113011' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 3] CODE CID 7011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='113001' and concept/@csd='DCM']) &gt; 0 or count(../code[concept/@cv='113010' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 3] CODE CID 7011'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="'7011'"/>
<xsl:with-param name="cmConceptName" select="'Document Title Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 3] CODE CID 7011'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="'7011'"/>
<xsl:with-param name="cmConceptName" select="'Document Title Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113011' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 4] CODE CID 7012</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='113013' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 4] CODE CID 7012'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="'7012'"/>
<xsl:with-param name="cmConceptName" select="'Document Title Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 4] CODE CID 7012'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="'7012'"/>
<xsl:with-param name="cmConceptName" select="'Document Title Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113011' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 7] TEXT (113012,DCM,"Key Object Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 7] TEXT (113012,DCM,&quot;Key Object Description&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Key Object Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113012' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 8] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(waveform) = 0 and count(composite) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 8] IMAGE *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 8] IMAGE *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
<xsl:if test="count(image/concept) &gt; 0">
<xsl:text>Error: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Row 8 Purpose of Reference (Concept) is forbidden for IMAGE content item</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 9] WAVEFORM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image) = 0 and count(composite) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 9] WAVEFORM *'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 9] WAVEFORM *'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'waveform'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'waveform']"/>
<xsl:if test="count(waveform/concept) &gt; 0">
<xsl:text>Error: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Row 9 Purpose of Reference (Concept) is forbidden for WAVEFORM content item</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 10] COMPOSITE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image) = 0 and count(waveform) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 10] COMPOSITE *'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE/[Row 10] COMPOSITE *'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'composite']"/>
<xsl:if test="count(composite/concept) &gt; 0">
<xsl:text>Error: Template 2010 KeyObjectSelection/[Row 1] CONTAINER CID 7010_WithTCE: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Row 10 Purpose of Reference (Concept) is forbidden for COMPOSITE content item</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
</xsl:for-each>	
	<xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_4000">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4000</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4000 (MammographyCADDocumentRoot)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_4000 (MammographyCADDocumentRoot)</xsl:text>
<xsl:value-of select="$newline"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,"Mammography CAD Report")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,&quot;Mammography CAD Report&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Mammography CAD Report'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111036' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,"Mammography CAD Report")/[Row 3] CONTAINER (111028,DCM,"Image Library")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,&quot;Mammography CAD Report&quot;)/[Row 3] CONTAINER (111028,DCM,&quot;Image Library&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Library'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111028' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4020Mammo</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4020Mammo</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4020Mammo">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>	
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4001">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,"Mammography CAD Report")/[Row 6] CODE (111064,DCM,"Summary of Detections")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,&quot;Mammography CAD Report&quot;)/[Row 6] CODE (111064,DCM,&quot;Summary of Detections&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Summary of Detections'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111064'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6042'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111064' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4015MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4015MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='111064' and concept/@csd='DCM' and value/@cv='111225' and value/@csd='DCM']) = 0">
<xsl:call-template name="TID_4015MammoParameters">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,"Mammography CAD Report")/[Row 8] CODE (111065,DCM,"Summary of Analyses")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4000 MammographyCADDocumentRoot/[Row 1] CONTAINER (111036,DCM,&quot;Mammography CAD Report&quot;)/[Row 8] CODE (111065,DCM,&quot;Summary of Analyses&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Summary of Analyses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111065'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6042'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111065' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4016MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4016MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='111065' and concept/@csd='DCM' and value/@cv='111225' and value/@csd='DCM']) = 0">
<xsl:call-template name="TID_4016MammoParameters">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
			</xsl:for-each>

		</xsl:for-each>
	<xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_4001">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4001</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4001 (MammographyCADOverallImpressionRecommendation)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4001 MammographyCADOverallImpressionRecommendation/[Row 1] CODE (111017,DCM,"CAD Processing and Findings Summary")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4001 MammographyCADOverallImpressionRecommendation/[Row 1] CODE (111017,DCM,&quot;CAD Processing and Findings Summary&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CAD Processing and Findings Summary'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111017'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6047'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111017' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4003">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4002">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4002</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4002 (MammographyCADImpressionRecommendationBody)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 1] CODE (111005,DCM,"Assessment Category")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111023' and concept/@csd='DCM']) = 0                   and count(text[concept/@cv='111033' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111053' and concept/@csd='DCM']) = 0                   and count( num[concept/@cv='111055' and concept/@csd='DCM']) = 0                   and count(date[concept/@cv='111054' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 1] CODE (111005,DCM,&quot;Assessment Category&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Assessment Category'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111005'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6026'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 1] CODE (111005,DCM,&quot;Assessment Category&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Assessment Category'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111005'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6026'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111005' and concept/@csd = 'DCM']"> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 1] CODE (111005,DCM,"Assessment Category")/[Row 2] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 1] CODE (111005,DCM,&quot;Assessment Category&quot;)/[Row 2] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 3] CODE (111023,DCM,"Differential Diagnosis/Impression")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM']) = 0                   and count(text[concept/@cv='111033' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111053' and concept/@csd='DCM']) = 0                   and count( num[concept/@cv='111055' and concept/@csd='DCM']) = 0                   and count(date[concept/@cv='111054' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 3] CODE (111023,DCM,&quot;Differential Diagnosis/Impression&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Differential Diagnosis/Impression'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111023'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6002'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 3] CODE (111023,DCM,&quot;Differential Diagnosis/Impression&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Differential Diagnosis/Impression'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111023'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6002'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111023' and concept/@csd = 'DCM']"> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 3] CODE (111023,DCM,"Differential Diagnosis/Impression")/[Row 4] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 3] CODE (111023,DCM,&quot;Differential Diagnosis/Impression&quot;)/[Row 4] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 5] TEXT (111033,DCM,"Impression Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111023' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111053' and concept/@csd='DCM']) = 0                   and count( num[concept/@cv='111055' and concept/@csd='DCM']) = 0                   and count(date[concept/@cv='111054' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 5] TEXT (111033,DCM,&quot;Impression Description&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Impression Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111033'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 5] TEXT (111033,DCM,&quot;Impression Description&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Impression Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111033'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111033' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 6] CODE (111053,DCM,"Recommended Follow-up")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111023' and concept/@csd='DCM']) = 0                   and count(text[concept/@cv='111033' and concept/@csd='DCM']) = 0                   and count( num[concept/@cv='111055' and concept/@csd='DCM']) = 0                   and count(date[concept/@cv='111054' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 6] CODE (111053,DCM,&quot;Recommended Follow-up&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended Follow-up'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111053'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6028'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 6] CODE (111053,DCM,&quot;Recommended Follow-up&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended Follow-up'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111053'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6028'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111053' and concept/@csd = 'DCM']"> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 6] CODE (111053,DCM,"Recommended Follow-up")/[Row 7] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 6] CODE (111053,DCM,&quot;Recommended Follow-up&quot;)/[Row 7] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 8] NUM (111055,DCM,"Recommended Follow-up Interval")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111023' and concept/@csd='DCM']) = 0                   and count(text[concept/@cv='111033' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111053' and concept/@csd='DCM']) = 0                   and count(date[concept/@cv='111054' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 8] NUM (111055,DCM,&quot;Recommended Follow-up Interval&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended Follow-up Interval'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'6046'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 8] NUM (111055,DCM,&quot;Recommended Follow-up Interval&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended Follow-up Interval'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111055'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'6046'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111055' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 9] DATE (111054,DCM,"Recommended Follow-up Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111023' and concept/@csd='DCM']) = 0                   and count(text[concept/@cv='111033' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111053' and concept/@csd='DCM']) = 0                   and count( num[concept/@cv='111055' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 9] DATE (111054,DCM,&quot;Recommended Follow-up Date&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended Follow-up Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111054'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 9] DATE (111054,DCM,&quot;Recommended Follow-up Date&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended Follow-up Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111054'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111054' and concept/@csd = 'DCM']"/> 

		<xsl:if test="count(num[concept/@cv='111055' and concept/@csd='DCM'])&gt;0 and number(date[concept/@cv='111054' and concept/@csd='DCM']/value)&gt;0">
<xsl:text>Error: Template 4002 MammographyCADImpressionRecommendationBody: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Recommended Follow-up Interval and Date are both present when only one should be</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 10] NUM (111013,DCM,"Certainty of impression")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM']) = 0                   and count(code[concept/@cv='111023' and concept/@csd='DCM']) = 0                   and count(text[concept/@cv='111033' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 10] NUM (111013,DCM,&quot;Certainty of impression&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Certainty of impression'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111013'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 10] NUM (111013,DCM,&quot;Certainty of impression&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Certainty of impression'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111013'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111013' and concept/@csd = 'DCM']"/> 
		<xsl:if test="count(num[concept/@cv='111013' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111013' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4002 MammographyCADImpressionRecommendationBody: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of impression cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='111013' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111013' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4002 MammographyCADImpressionRecommendationBody: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of impression cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111005' and concept/@csd='DCM'])&gt;0                    or count(code[concept/@cv='111023' and concept/@csd='DCM'])&gt;0                    or count(text[concept/@cv='111033' and concept/@csd='DCM'])&gt;0                    or count(code[concept/@cv='111053' and concept/@csd='DCM'])&gt;0                    or count( num[concept/@cv='111055' and concept/@csd='DCM'])&gt;0                    or count(date[concept/@cv='111054' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_4019">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>			
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'6142'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = '112017' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112018' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112019' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112058' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112191' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112192' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112193' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112194' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112195' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112196' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112197' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112198' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112199' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112200' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112201' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142/[Row 13] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142/[Row 13] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142/[Row 14] CODE (121401,DCM,"Derivation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142/[Row 14] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6140'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121401' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142/[Row 15] TEXT (112034,DCM,"Calculation Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4002 MammographyCADImpressionRecommendationBody/[Row 12] NUM CID 6142/[Row 15] TEXT (112034,DCM,&quot;Calculation Description&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calculation Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112034'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112034' and concept/@csd = 'DCM']"/>
</xsl:for-each>

	</xsl:template>
<xsl:template name="TID_4003">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4003</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4003 (MammographyCADIndividualImpressionRecommendation)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4003 MammographyCADIndividualImpressionRecommendation/[Row 1] CONTAINER (111034,DCM,"Individual Impression/Recommendation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4003 MammographyCADIndividualImpressionRecommendation/[Row 1] CONTAINER (111034,DCM,&quot;Individual Impression/Recommendation&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Individual Impression/Recommendation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111034'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111034' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4003 MammographyCADIndividualImpressionRecommendation/[Row 1] CONTAINER (111034,DCM,"Individual Impression/Recommendation")/[Row 2] CODE (111056,DCM,"Rendering Intent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4003 MammographyCADIndividualImpressionRecommendation/[Row 1] CONTAINER (111034,DCM,&quot;Individual Impression/Recommendation&quot;)/[Row 2] CODE (111056,DCM,&quot;Rendering Intent&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Rendering Intent'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111056'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6034'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111056' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111059' and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_4004">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111015' and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_4006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>  
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4004">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4004</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4004 (MammographyCADCompositeFeature)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4004 MammographyCADCompositeFeature/[Row 1] CODE (111015,DCM,"Composite Feature")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4004 MammographyCADCompositeFeature/[Row 1] CODE (111015,DCM,&quot;Composite Feature&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Composite Feature'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111015'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6016'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111015' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4004 MammographyCADCompositeFeature/[Row 1] CODE (111015,DCM,"Composite Feature")/[Row 2] CODE (111056,DCM,"Rendering Intent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4004 MammographyCADCompositeFeature/[Row 1] CODE (111015,DCM,&quot;Composite Feature&quot;)/[Row 2] CODE (111056,DCM,&quot;Rendering Intent&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Rendering Intent'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111056'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6034'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111056' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4005">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(code[concept/@cv='111015' and concept/@csd='DCM']) = 1 and count(code[concept/@cv='111059' and concept/@csd='DCM']) = 1)                    or (count(code[concept/@cv='111015' and concept/@csd='DCM']) = 2 and count(code[concept/@cv='111059' and concept/@csd='DCM']) = 0)">
<xsl:call-template name="TID_4004">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(code[concept/@cv='111015' and concept/@csd='DCM']) = 1 and count(code[concept/@cv='111059' and concept/@csd='DCM']) = 1)                    or (count(code[concept/@cv='111015' and concept/@csd='DCM']) = 0 and count(code[concept/@cv='111059' and concept/@csd='DCM']) = 2)">
<xsl:call-template name="TID_4006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4022</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4022</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4022">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4005">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4005</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4005 (MammographyCADCompositeFeatureBody )</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4005 MammographyCADCompositeFeatureBody /[Row 1] CODE (111016,DCM,"Composite Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4005 MammographyCADCompositeFeatureBody /[Row 1] CODE (111016,DCM,&quot;Composite Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Composite Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111016'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6035'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111016' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(code[concept/@cv='111016' and concept/@csd='DCM' and not (value/@cv='111155' and value/@csd='DCM')])&gt;0       and count(../code[(value/@cv='F-01792' and value/@csd='SRT') or (value/@cv='F-01793' and value/@csd='SRT')])&gt;0">
<xsl:text>Error: Template 4005 MammographyCADCompositeFeatureBody : </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: Composite Type is not Target content items are related contra-laterally for asymettric breast tissue</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4005 MammographyCADCompositeFeatureBody /[Row 2] CODE (111057,DCM,"Scope of Feature")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4005 MammographyCADCompositeFeatureBody /[Row 2] CODE (111057,DCM,&quot;Scope of Feature&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Scope of Feature'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111057'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6036'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111057' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111016' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_4019">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>			
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4005 MammographyCADCompositeFeatureBody /[Row 4] NUM (111011,DCM,"Certainty of Feature")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4005 MammographyCADCompositeFeatureBody /[Row 4] NUM (111011,DCM,&quot;Certainty of Feature&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Certainty of Feature'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111011' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='111011' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111011' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4005 MammographyCADCompositeFeatureBody : </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of Feature cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='111011' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111011' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4005 MammographyCADCompositeFeatureBody : </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of Feature cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4005 MammographyCADCompositeFeatureBody /[Row 5] NUM (111047,DCM,"Probability of cancer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111102' and value/@csd='DCM'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4005 MammographyCADCompositeFeatureBody /[Row 5] NUM (111047,DCM,&quot;Probability of cancer&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Probability of cancer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111047'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="''"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4005 MammographyCADCompositeFeatureBody /[Row 5] NUM (111047,DCM,&quot;Probability of cancer&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Probability of cancer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111047'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="''"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111047' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='111047' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111047' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4005 MammographyCADCompositeFeatureBody : </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Probability of cancer cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='111047' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111047' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4005 MammographyCADCompositeFeatureBody : </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Probability of cancer cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4005 MammographyCADCompositeFeatureBody /[Row 6] CODE (111042,DCM,"Pathology")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4005 MammographyCADCompositeFeatureBody /[Row 6] CODE (111042,DCM,&quot;Pathology&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pathology'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111042'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6030'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111042' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1400M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1401M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1402M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4021INFM</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4021INFM</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4021INFM">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>

		
		
	</xsl:template>
<xsl:template name="TID_4006">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4006</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4006 (MammographyCADSingleImageFinding)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Single Image Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111059'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6014'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111059' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 2] CODE (111056,DCM,"Rendering Intent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 2] CODE (111056,DCM,&quot;Rendering Intent&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Rendering Intent'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111056'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6034'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111056' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 2] CODE (111056,DCM,"Rendering Intent")/[Row 3] NUM (111071,DCM,"CAD Operating Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111151' and value/@csd='DCM'])&gt;0 and count(//num[concept/@cv='111072' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 2] CODE (111056,DCM,&quot;Rendering Intent&quot;)/[Row 3] NUM (111071,DCM,&quot;CAD Operating Point&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CAD Operating Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'range: 1:n'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{1:n}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 2] CODE (111056,DCM,&quot;Rendering Intent&quot;)/[Row 3] NUM (111071,DCM,&quot;CAD Operating Point&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CAD Operating Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'range: 1:n'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{1:n}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111071' and concept/@csd = 'DCM']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4108</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4108">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4019">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>		
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 6] NUM (111012,DCM,"Certainty of Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 6] NUM (111012,DCM,&quot;Certainty of Finding&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Certainty of Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111012' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='111012' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111012' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of Finding cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='111012' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111012' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of Finding cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 7] NUM (111047,DCM,"Probability of cancer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01710' and value/@csd='SRT'])=0                   and count(../code[value/@cv='111100'  and value/@csd='DCM'])=0                   and count(../code[value/@cv='T-04100' and value/@csd='SRT'])=0                   and count(../code[value/@cv='111099'  and value/@csd='DCM'])=0                   and count(../code[value/@cv='111101'  and value/@csd='DCM'])=0                   and count(../code[value/@cv='111102'  and value/@csd='DCM'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 7] NUM (111047,DCM,&quot;Probability of cancer&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Probability of cancer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111047'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 7] NUM (111047,DCM,&quot;Probability of cancer&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Probability of cancer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111047'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111047' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='111047' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111047' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Probability of cancer cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='111047' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111047' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Probability of cancer cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4021HP</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4021HP</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01710' and value/@csd='SRT'])=0                   and count(../code[value/@cv='111100'  and value/@csd='DCM'])=0                   and count(../code[value/@cv='111101'  and value/@csd='DCM'])=0">
<xsl:call-template name="TID_4021HP">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01710' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="TID_4007">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 10] CODE (111059,DCM,"Single Image Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01710' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 10] CODE (111059,DCM,&quot;Single Image Finding&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Single Image Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111059'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 10] CODE (111059,DCM,&quot;Single Image Finding&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Single Image Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111059'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111059' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4008</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4008</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111100' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_4008">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4009</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01776' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="TID_4009">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4010</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01775' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="TID_4010">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4011</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01796' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="TID_4011">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 15] CODE (111297,DCM,"Nipple Characteristic")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='T-04100' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 15] CODE (111297,DCM,&quot;Nipple Characteristic&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Nipple Characteristic'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111297'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6039'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 15] CODE (111297,DCM,&quot;Nipple Characteristic&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Nipple Characteristic'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111297'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6039'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111297' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4012</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4012</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111102' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_4012">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4013</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4013</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111099' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_4013">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 18] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = '111101' and concept/@csd = 'DCM'])&gt;0 and count(scoord[concept/@cv = '111030' and concept/@csd = 'DCM'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 18] IMAGE *'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 18] IMAGE *'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 19] SCOORD (111030,DCM,"Image Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv = '111101' and concept/@csd = 'DCM'])&gt;0 and count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 19] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 19] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111030' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 19] SCOORD (111030,DCM,"Image Region")/[Row 20] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 19] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 20] IMAGE *'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4014MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4014MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111101' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_4014MammoParameters">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 22] NUM CID 6142</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 22] NUM CID 6142'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'6142'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'num' and concept/@cv = '112017' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112018' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112019' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112058' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112191' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112192' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112193' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112194' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112195' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112196' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112197' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112198' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112199' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112200' and concept/@csd = 'DCM') or (name() = 'num' and concept/@cv = '112201' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 22] NUM CID 6142/[Row 23] CODE (121401,DCM,"Derivation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../num[concept/@cv='111038' and concept/@csd='DCM'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 22] NUM CID 6142/[Row 23] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6140'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 22] NUM CID 6142/[Row 23] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6140'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121401' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,"Single Image Finding")/[Row 22] NUM CID 6142/[Row 24] TEXT (112034,DCM,"Calculation Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../num[concept/@cv='111038' and concept/@csd='DCM'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 22] NUM CID 6142/[Row 24] TEXT (112034,DCM,&quot;Calculation Description&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calculation Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112034'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4006 MammographyCADSingleImageFinding/[Row 1] CODE (111059,DCM,&quot;Single Image Finding&quot;)/[Row 22] NUM CID 6142/[Row 24] TEXT (112034,DCM,&quot;Calculation Description&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calculation Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112034'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112034' and concept/@csd = 'DCM']"/>
</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='F-01775' and value/@csd='SRT'])&gt;0">
<xsl:call-template name="TID_4006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4022</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4022</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4022">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if> 
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4007">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4007</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4007 (BreastComposition)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4007 BreastComposition/[Row 1] CODE (F-01710,SRT,"Breast composition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111046' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4007 BreastComposition/[Row 1] CODE (F-01710,SRT,&quot;Breast composition&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Breast composition'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-01710'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6000'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4007 BreastComposition/[Row 1] CODE (F-01710,SRT,&quot;Breast composition&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Breast composition'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-01710'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6000'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-01710' and concept/@csd = 'SRT']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4007 BreastComposition/[Row 2] NUM (111046,DCM,"Percent Fibroglandular Tissue")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='F-01710' and concept/@csd='SRT']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4007 BreastComposition/[Row 2] NUM (111046,DCM,&quot;Percent Fibroglandular Tissue&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Percent Fibroglandular Tissue'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111046'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4007 BreastComposition/[Row 2] NUM (111046,DCM,&quot;Percent Fibroglandular Tissue&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Percent Fibroglandular Tissue'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111046'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111046' and concept/@csd = 'DCM']"/> 
		<xsl:if test="count(num[concept/@cv='111046' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111046' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4007 BreastComposition: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Percent Fibroglandular Tissue cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='111046' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111046' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4007 BreastComposition: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Percent Fibroglandular Tissue cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_4008">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4008</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4008 (BreastGeometry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4008 BreastGeometry/[Row 1] SCOORD (111007,DCM,"Breast Outline Including Pectoral Muscle Tissue")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4008 BreastGeometry/[Row 1] SCOORD (111007,DCM,&quot;Breast Outline Including Pectoral Muscle Tissue&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Breast Outline Including Pectoral Muscle Tissue'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111007' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4008 BreastGeometry/[Row 1] SCOORD (111007,DCM,"Breast Outline Including Pectoral Muscle Tissue")/[Row 2] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4008 BreastGeometry/[Row 1] SCOORD (111007,DCM,&quot;Breast Outline Including Pectoral Muscle Tissue&quot;)/[Row 2] IMAGE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/> 
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4008 BreastGeometry/[Row 3] SCOORD (111045,DCM,"Pectoral Muscle Outline")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4008 BreastGeometry/[Row 3] SCOORD (111045,DCM,&quot;Pectoral Muscle Outline&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pectoral Muscle Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111045'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111045' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4008 BreastGeometry/[Row 3] SCOORD (111045,DCM,"Pectoral Muscle Outline")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4008 BreastGeometry/[Row 3] SCOORD (111045,DCM,&quot;Pectoral Muscle Outline&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/> 
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4009">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4009</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4009 (MammographyCADIndividualCalcification)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4009 MammographyCADIndividualCalcification/[Row 1] CODE (111009,DCM,"Calcification Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4009 MammographyCADIndividualCalcification/[Row 1] CODE (111009,DCM,&quot;Calcification Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calcification Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4009 MammographyCADIndividualCalcification/[Row 1] CODE (111009,DCM,&quot;Calcification Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calcification Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111009' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111009' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_1400M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111009' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_1401M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1402M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_4010">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4010</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4010 (MammographyCADCalcificationCluster)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4010 MammographyCADCalcificationCluster/[Row 1] CODE (111009,DCM,"Calcification Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111008' and concept/@csd='DCM']) = 0                  and count(num[concept/@cv='111038'  and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4010 MammographyCADCalcificationCluster/[Row 1] CODE (111009,DCM,&quot;Calcification Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calcification Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4010 MammographyCADCalcificationCluster/[Row 1] CODE (111009,DCM,&quot;Calcification Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calcification Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111009' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4010 MammographyCADCalcificationCluster/[Row 2] CODE (111008,DCM,"Calcification Distribution")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111009' and concept/@csd='DCM']) = 0                  and count(num[concept/@cv='111038'  and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4010 MammographyCADCalcificationCluster/[Row 2] CODE (111008,DCM,&quot;Calcification Distribution&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calcification Distribution'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111008'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6012'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4010 MammographyCADCalcificationCluster/[Row 2] CODE (111008,DCM,&quot;Calcification Distribution&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calcification Distribution'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111008'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6012'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111008' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4010 MammographyCADCalcificationCluster/[Row 3] NUM (111038,DCM,"Number of calcifications")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111009' and concept/@csd='DCM']) = 0                  and count(code[concept/@cv='111008' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4010 MammographyCADCalcificationCluster/[Row 3] NUM (111038,DCM,&quot;Number of calcifications&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of calcifications'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111038'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4010 MammographyCADCalcificationCluster/[Row 3] NUM (111038,DCM,&quot;Number of calcifications&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of calcifications'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111038'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111038' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111009' and concept/@csd='DCM']) = 0            and count(code[concept/@cv='111008' and concept/@csd='DCM']) = 0                  and count(num[concept/@cv='111038'  and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_1400M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111009' and concept/@csd='DCM']) = 0            and count(code[concept/@cv='111008' and concept/@csd='DCM']) = 0                  and count(num[concept/@cv='111038'  and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_1401M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num/scoord[concept/@cv='121057' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_1402M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_4011">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4011</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4011 (MammographyCADDensity)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4011 MammographyCADDensity/[Row 1] CODE (111035,DCM,"Lesion Density")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='M-020F9' and concept/@csd='SRT']) = 0                  and count(code[concept/@cv='111037' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4011 MammographyCADDensity/[Row 1] CODE (111035,DCM,&quot;Lesion Density&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Lesion Density'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111035'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6008'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4011 MammographyCADDensity/[Row 1] CODE (111035,DCM,&quot;Lesion Density&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Lesion Density'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111035'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6008'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111035' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4011 MammographyCADDensity/[Row 2] CODE (M-020F9,SRT,"Shape")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111035' and concept/@csd='DCM']) = 0                  and count(code[concept/@cv='111037' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4011 MammographyCADDensity/[Row 2] CODE (M-020F9,SRT,&quot;Shape&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Shape'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'M-020F9'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6004'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4011 MammographyCADDensity/[Row 2] CODE (M-020F9,SRT,&quot;Shape&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Shape'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'M-020F9'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6004'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'M-020F9' and concept/@csd = 'SRT']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4011 MammographyCADDensity/[Row 3] CODE (111037,DCM,"Margins")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111035' and concept/@csd='DCM']) = 0                  and count(code[concept/@cv='M-020F9' and concept/@csd='SRT']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0            and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4011 MammographyCADDensity/[Row 3] CODE (111037,DCM,&quot;Margins&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Margins'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111037'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6006'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4011 MammographyCADDensity/[Row 3] CODE (111037,DCM,&quot;Margins&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Margins'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111037'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6006'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111037' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111035' and concept/@csd='DCM']) = 0                  and count(code[concept/@cv='M-020F9' and concept/@csd='SRT']) = 0            and count(code[concept/@cv='111037' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121056' and concept/@csd='DCM']) = 0                  and count(num/image[concept/@cv='121214'  and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_1400M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111035' and concept/@csd='DCM']) = 0                  and count(code[concept/@cv='M-020F9' and concept/@csd='SRT']) = 0            and count(code[concept/@cv='111037' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121055' and concept/@csd='DCM']) = 0                  and count(num/scoord[concept/@cv='121230' and concept/@csd='DCM']) = 0">
<xsl:call-template name="TID_1401M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num/scoord[concept/@cv='121057' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="TID_1402M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'T'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
	</xsl:template>
<xsl:template name="TID_4012">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4012</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4012 (MammographyCADNonLesion)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4012 MammographyCADNonLesion/[Row 1] CODE (111039,DCM,"Object type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4012 MammographyCADNonLesion/[Row 1] CODE (111039,DCM,&quot;Object type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Object type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6040'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111039' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1400M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1401M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1402M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_4013">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4013</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4013 (MammographySelectedRegion)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4013 MammographySelectedRegion/[Row 1] TEXT (111058,DCM,"Selected Region Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4013 MammographySelectedRegion/[Row 1] TEXT (111058,DCM,&quot;Selected Region Description&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Selected Region Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111058' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1400M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1400M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1401M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1401M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1402M</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1402M">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_4014MammoParameters">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4014MammoParameters</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4014MammoParameters (CADImageQualityMammo)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,"Quality Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,&quot;Quality Finding&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Quality Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111052'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6041'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111052' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,"Quality Finding")/[Row 2] CODE (111050,DCM,"Quality Assessment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,&quot;Quality Finding&quot;)/[Row 2] CODE (111050,DCM,&quot;Quality Assessment&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Quality Assessment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111050'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6044'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111050' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,"Quality Finding")/[Row 3] CODE (111051,DCM,"Quality Control Standard")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='111050' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,&quot;Quality Finding&quot;)/[Row 3] CODE (111051,DCM,&quot;Quality Control Standard&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Quality Control Standard'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111051'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6045'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,&quot;Quality Finding&quot;)/[Row 3] CODE (111051,DCM,&quot;Quality Control Standard&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Quality Control Standard'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111051'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6045'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111051' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,"Quality Finding")/[Row 4] NUM (111029,DCM,"Image Quality Rating")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,&quot;Quality Finding&quot;)/[Row 4] NUM (111029,DCM,&quot;Image Quality Rating&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Quality Rating'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111029'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'range:0:100'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{0:100}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111029' and concept/@csd = 'DCM']"/>
			<xsl:if test="count(num[concept/@cv='111029' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111029' and concept/@csd='DCM']/value)&lt;0">
<xsl:text>Error: Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,"Quality Finding"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of Feature cannot be less than 0%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
			<xsl:if test="count(num[concept/@cv='111029' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111029' and concept/@csd='DCM']/value)&gt;100">
<xsl:text>Error: Template 4014MammoParameters CADImageQualityMammo/[Row 1] CODE (111052,DCM,"Quality Finding"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of Certainty of Feature cannot be greater than 100%</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4015MammoParameters">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4015MammoParameters</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4015MammoParameters (CADDetectionsPerformedMammo)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4015MammoParameters CADDetectionsPerformedMammo/[Row 1] CONTAINER (111063,DCM,"Successful Detections")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111222' and value/@csd='DCM'])&gt;0 or count(../code[value/@cv='111223' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4015MammoParameters CADDetectionsPerformedMammo/[Row 1] CONTAINER (111063,DCM,&quot;Successful Detections&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Successful Detections'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111063'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4015MammoParameters CADDetectionsPerformedMammo/[Row 1] CONTAINER (111063,DCM,&quot;Successful Detections&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Successful Detections'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111063'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111063' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4017MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4017MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4017MammoParameters">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4015MammoParameters CADDetectionsPerformedMammo/[Row 3] CONTAINER (111025,DCM,"Failed  Detections")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111224' and value/@csd='DCM'])&gt;0 or count(../code[value/@cv='111223' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4015MammoParameters CADDetectionsPerformedMammo/[Row 3] CONTAINER (111025,DCM,&quot;Failed  Detections&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Failed  Detections'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111025'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4015MammoParameters CADDetectionsPerformedMammo/[Row 3] CONTAINER (111025,DCM,&quot;Failed  Detections&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Failed  Detections'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111025'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111025' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4017MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4017MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4017MammoParameters">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4016MammoParameters">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4016MammoParameters</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4016MammoParameters (CADAnalyses PerformedMammo)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4016MammoParameters CADAnalyses PerformedMammo/[Row 1] CONTAINER (111062,DCM,"Successful Analyses")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111222' and value/@csd='DCM'])&gt;0 or count(../code[value/@cv='111223' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4016MammoParameters CADAnalyses PerformedMammo/[Row 1] CONTAINER (111062,DCM,&quot;Successful Analyses&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Successful Analyses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111062'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4016MammoParameters CADAnalyses PerformedMammo/[Row 1] CONTAINER (111062,DCM,&quot;Successful Analyses&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Successful Analyses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111062'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111062' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4018MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4018MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4018MammoParameters">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4016MammoParameters CADAnalyses PerformedMammo/[Row 3] CONTAINER (111024,DCM,"Failed  Analyses")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[value/@cv='111224' and value/@csd='DCM'])&gt;0 or count(../code[value/@cv='111223' and value/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4016MammoParameters CADAnalyses PerformedMammo/[Row 3] CONTAINER (111024,DCM,&quot;Failed  Analyses&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Failed  Analyses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111024'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4016MammoParameters CADAnalyses PerformedMammo/[Row 3] CONTAINER (111024,DCM,&quot;Failed  Analyses&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Failed  Analyses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111024'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111024' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4018MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4018MammoParameters</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4018MammoParameters">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4017MammoParameters">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4017MammoParameters</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4017MammoParameters (CADDetectionsPerformedMammo)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Detection Performed'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111022'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6014'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111022' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4019">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")/[Row 3] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0 and count(uidref)=0 and count(scoord)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(uidref)=0 and count(scoord)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")/[Row 5] UIDREF (112002,DCM,"Series Instance UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(reference)=0 and count(scoord)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 5] UIDREF (112002,DCM,&quot;Series Instance UID&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Series Instance UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 5] UIDREF (112002,DCM,&quot;Series Instance UID&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Series Instance UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112002' and concept/@csd = 'DCM']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")/[Row 6] SCOORD (111030,DCM,"Image Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(reference)=0 and count(uidref)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111030' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")/[Row 6] SCOORD (111030,DCM,"Image Region")/[Row 7] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,"Detection Performed")/[Row 6] SCOORD (111030,DCM,"Image Region")/[Row 8] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 8] IMAGE *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4017MammoParameters CADDetectionsPerformedMammo/[Row 1] CODE (111022,DCM,&quot;Detection Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 8] IMAGE *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4023</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4023</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4023">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>		
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4018MammoParameters">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4018MammoParameters</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4018MammoParameters (CADAnalysisPerformedMammo)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Analysis Performed'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111004'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6043'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111004' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4019</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4019">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>		
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")/[Row 3] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0 and count(uidref)=0 and count(scoord)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 3] IMAGE *'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(uidref)=0 and count(scoord)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")/[Row 5] UIDREF (112002,DCM,"Series Instance UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(reference)=0 and count(scoord)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 5] UIDREF (112002,DCM,&quot;Series Instance UID&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Series Instance UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 5] UIDREF (112002,DCM,&quot;Series Instance UID&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Series Instance UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112002' and concept/@csd = 'DCM']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")/[Row 6] SCOORD (111030,DCM,"Image Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0 and count(reference)=0 and count(uidref)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111030' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")/[Row 6] SCOORD (111030,DCM,"Image Region")/[Row 7] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 7] IMAGE *'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,"Analysis Performed")/[Row 6] SCOORD (111030,DCM,"Image Region")/[Row 8] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(reference)=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 8] IMAGE *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4018MammoParameters CADAnalysisPerformedMammo/[Row 1] CODE (111004,DCM,&quot;Analysis Performed&quot;)/[Row 6] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 8] IMAGE *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="'T'"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4023</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4023</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4023">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>		
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4019">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4019</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4019 (CADAlgorithmIdentification)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4019 CADAlgorithmIdentification/[Row 1] TEXT (111001,DCM,"Algorithm Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4019 CADAlgorithmIdentification/[Row 1] TEXT (111001,DCM,&quot;Algorithm Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111001'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111001' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4019 CADAlgorithmIdentification/[Row 2] TEXT (111003,DCM,"Algorithm Version")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4019 CADAlgorithmIdentification/[Row 2] TEXT (111003,DCM,&quot;Algorithm Version&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm Version'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111003'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111003' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4019 CADAlgorithmIdentification/[Row 3] TEXT (111002,DCM,"Algorithm Parameters")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4019 CADAlgorithmIdentification/[Row 3] TEXT (111002,DCM,&quot;Algorithm Parameters&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Algorithm Parameters'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111002' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_4020Mammo">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4020Mammo</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4020Mammo (CADImageLibraryEntry_MammoParameters)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']">	
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 2] CODE (111027,DCM,"Image Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 2] CODE (111027,DCM,&quot;Image Laterality&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Laterality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111027'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111027' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,"Image View")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,&quot;Image View&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4014'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111031' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,"Image View")/[Row 4] CODE (111032,DCM,"Image View Modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,&quot;Image View&quot;)/[Row 4] CODE (111032,DCM,&quot;Image View Modifier&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111032'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111032' and concept/@csd = 'DCM']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 5] TEXT (111044,DCM,"Patient Orientation Row")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 5] TEXT (111044,DCM,&quot;Patient Orientation Row&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Row'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111044'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111044' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 6] TEXT (111043,DCM,"Patient Orientation Column")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 6] TEXT (111043,DCM,&quot;Patient Orientation Column&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Column'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111043'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111043' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 7] DATE (111060,DCM,"Study Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 7] DATE (111060,DCM,&quot;Study Date&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111060'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111060' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 8] TIME (111061,DCM,"Study Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 8] TIME (111061,DCM,&quot;Study Time&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111061'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111061' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 9] DATE (111018,DCM,"Content Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 9] DATE (111018,DCM,&quot;Content Date&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Content Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111018' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 10] TIME (111019,DCM,"Content Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 10] TIME (111019,DCM,&quot;Content Time&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Content Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111019' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 11] NUM (111026,DCM,"Horizontal Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 11] NUM (111026,DCM,&quot;Horizontal Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Horizontal Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111026'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_4020ROW1112'"/>
<xsl:with-param name="unitsBDE" select="'E'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111026' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 12] NUM (111066,DCM,"Vertical Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 12] NUM (111066,DCM,&quot;Vertical Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Vertical Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111066'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_4020ROW1112'"/>
<xsl:with-param name="unitsBDE" select="'E'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111066' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 13] NUM (112011,DCM,"Positioner Primary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 13] NUM (112011,DCM,&quot;Positioner Primary Angle&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'degrees'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112011' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 14] NUM (112012,DCM,"Positioner Secondary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 14] NUM (112012,DCM,&quot;Positioner Secondary Angle&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'degrees'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112012' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 15] NUM (112226,DCM,"Spacing between slices")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 15] NUM (112226,DCM,&quot;Spacing between slices&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Spacing between slices'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112226'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112226' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 16] NUM (112225,DCM,"Slice Thickness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 16] NUM (112225,DCM,&quot;Slice Thickness&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Slice Thickness'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112225'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112225' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 17] UIDREF (112227,DCM,"Frame of Reference UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 17] UIDREF (112227,DCM,&quot;Frame of Reference UID&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Frame of Reference UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112227'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112227' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 18] NUM (110901,DCM,"Image Position (Patient) X")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 18] NUM (110901,DCM,&quot;Image Position (Patient) X&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient) X'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110901'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110901' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 19] NUM (110902,DCM,"Image Position (Patient) Y")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 19] NUM (110902,DCM,&quot;Image Position (Patient) Y&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient) Y'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110902'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110902' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 20] NUM (110903,DCM,"Image Position (Patient) Z")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 20] NUM (110903,DCM,&quot;Image Position (Patient) Z&quot;)'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient) Z'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110903'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110903' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 21] NUM (110904,DCM,"Image Orientation (Patient) Row X")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 21] NUM (110904,DCM,&quot;Image Orientation (Patient) Row X&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Row X'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110904'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110904' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 22] NUM (110905,DCM,"Image Orientation (Patient) Row Y")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 22] NUM (110905,DCM,&quot;Image Orientation (Patient) Row Y&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Row Y'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110905'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110905' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 23] NUM (110906,DCM,"Image Orientation (Patient) Row Z")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 23] NUM (110906,DCM,&quot;Image Orientation (Patient) Row Z&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Row Z'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110906'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110906' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 24] NUM (110907,DCM,"Image Orientation (Patient) Column  X")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 24] NUM (110907,DCM,&quot;Image Orientation (Patient) Column  X&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Column  X'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110907' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 25] NUM (110908,DCM,"Image Orientation (Patient) Column  Y")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 25] NUM (110908,DCM,&quot;Image Orientation (Patient) Column  Y&quot;)'"/>
<xsl:with-param name="row" select="'25'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Column  Y'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110908'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110908' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 26] NUM (110909,DCM,"Image Orientation (Patient) Column  Z")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 26] NUM (110909,DCM,&quot;Image Orientation (Patient) Column  Z&quot;)'"/>
<xsl:with-param name="row" select="'26'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Column  Z'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110909'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110909' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 27] NUM (110910,DCM,"Pixel Data Rows")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 27] NUM (110910,DCM,&quot;Pixel Data Rows&quot;)'"/>
<xsl:with-param name="row" select="'27'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Data Rows'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110910'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pixels'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pixels}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110910' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 27] NUM (110911,DCM,"Pixel Data Columns")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020Mammo CADImageLibraryEntry_MammoParameters/[Row 1] IMAGE */[Row 27] NUM (110911,DCM,&quot;Pixel Data Columns&quot;)'"/>
<xsl:with-param name="row" select="'27'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Data Columns'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110911'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pixels'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pixels}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110911' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4020">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4020</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4020 (CADImageLibraryEntry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 2] CODE (111027,DCM,"Image Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 2] CODE (111027,DCM,&quot;Image Laterality&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Laterality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111027'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111027' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,"Image View")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,&quot;Image View&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111031' and concept/@csd = 'DCM']">
				
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,"Image View")/[Row 4] CODE (111032,DCM,"Image View Modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 3] CODE (111031,DCM,&quot;Image View&quot;)/[Row 4] CODE (111032,DCM,&quot;Image View Modifier&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111032'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111032' and concept/@csd = 'DCM']">
					
				</xsl:for-each>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 5] TEXT (111044,DCM,"Patient Orientation Row")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 5] TEXT (111044,DCM,&quot;Patient Orientation Row&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Row'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111044'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111044' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (111043,DCM,"Patient Orientation Column")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 6] TEXT (111043,DCM,&quot;Patient Orientation Column&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Column'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111043'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111043' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 7] DATE (111060,DCM,"Study Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 7] DATE (111060,DCM,&quot;Study Date&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111060'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111060' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 8] TIME (111061,DCM,"Study Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 8] TIME (111061,DCM,&quot;Study Time&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111061'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111061' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 9] DATE (111018,DCM,"Content Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 9] DATE (111018,DCM,&quot;Content Date&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Content Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111018' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 10] TIME (111019,DCM,"Content Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 10] TIME (111019,DCM,&quot;Content Time&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Content Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111019' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 11] NUM (111026,DCM,"Horizontal Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 11] NUM (111026,DCM,&quot;Horizontal Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Horizontal Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111026'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_4020ROW1112'"/>
<xsl:with-param name="unitsBDE" select="'E'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111026' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 12] NUM (111066,DCM,"Vertical Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 12] NUM (111066,DCM,&quot;Vertical Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Vertical Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111066'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_4020ROW1112'"/>
<xsl:with-param name="unitsBDE" select="'E'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111066' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 13] NUM (112011,DCM,"Positioner Primary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 13] NUM (112011,DCM,&quot;Positioner Primary Angle&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112011' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 14] NUM (112012,DCM,"Positioner Secondary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 14] NUM (112012,DCM,&quot;Positioner Secondary Angle&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112012' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 15] NUM (112226,DCM,"Spacing between slices")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 15] NUM (112226,DCM,&quot;Spacing between slices&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Spacing between slices'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112226'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112226' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 16] NUM (112225,DCM,"Slice Thickness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 16] NUM (112225,DCM,&quot;Slice Thickness&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Slice Thickness'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112225'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112225' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 17] UIDREF (112227,DCM,"Frame of Reference UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 17] UIDREF (112227,DCM,&quot;Frame of Reference UID&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Frame of Reference UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112227'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112227' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 18] NUM (110901,DCM,"Image Position (Patient) X")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 18] NUM (110901,DCM,&quot;Image Position (Patient) X&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient) X'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110901'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110901' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 19] NUM (110902,DCM,"Image Position (Patient) Y")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 19] NUM (110902,DCM,&quot;Image Position (Patient) Y&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient) Y'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110902'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110902' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 20] NUM (110903,DCM,"Image Position (Patient) Z")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 20] NUM (110903,DCM,&quot;Image Position (Patient) Z&quot;)'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient) Z'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110903'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110903' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 21] NUM (110904,DCM,"Image Orientation (Patient) Row X")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 21] NUM (110904,DCM,&quot;Image Orientation (Patient) Row X&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Row X'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110904'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110904' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 22] NUM (110905,DCM,"Image Orientation (Patient) Row Y")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 22] NUM (110905,DCM,&quot;Image Orientation (Patient) Row Y&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Row Y'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110905'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110905' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 23] NUM (110906,DCM,"Image Orientation (Patient) Row Z")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 23] NUM (110906,DCM,&quot;Image Orientation (Patient) Row Z&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Row Z'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110906'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110906' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 24] NUM (110907,DCM,"Image Orientation (Patient) Column X")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 24] NUM (110907,DCM,&quot;Image Orientation (Patient) Column X&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Column X'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110907' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 25] NUM (110908,DCM,"Image Orientation (Patient) Column Y")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 25] NUM (110908,DCM,&quot;Image Orientation (Patient) Column Y&quot;)'"/>
<xsl:with-param name="row" select="'25'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Column Y'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110908'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110908' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 26] NUM (110909,DCM,"Image Orientation (Patient) Column Z")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 26] NUM (110909,DCM,&quot;Image Orientation (Patient) Column Z&quot;)'"/>
<xsl:with-param name="row" select="'26'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient) Column Z'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110909'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110909' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 27] NUM (110910,DCM,"Pixel Data Rows")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 27] NUM (110910,DCM,&quot;Pixel Data Rows&quot;)'"/>
<xsl:with-param name="row" select="'27'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Data Rows'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110910'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pixels'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pixels}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110910' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 28] NUM (110911,DCM,"Pixel Data Columns")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4020 CADImageLibraryEntry/[Row 1] IMAGE */[Row 28] NUM (110911,DCM,&quot;Pixel Data Columns&quot;)'"/>
<xsl:with-param name="row" select="'28'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Data Columns'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110911'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pixels'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pixels}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110911' and concept/@csd = 'DCM']">
				
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4021HP">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4021HP</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4021HP (MammographyCADGeometry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021HP MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,"Center")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021HP MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,&quot;Center&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Center'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POINT'"/>
<xsl:with-param name="numpointsmin" select="'1'"/>
<xsl:with-param name="numpointsmax" select="'1'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111010' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021HP MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,"Center")/[Row 2] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021HP MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,&quot;Center&quot;)/[Row 2] IMAGE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021HP MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,"Outline")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021HP MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,&quot;Outline&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111041'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE_CIRCLE_ELLIPSE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111041' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021HP MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,"Outline")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021HP MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,&quot;Outline&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021HP MammographyCADGeometry/[Row 5] SCOORD CID 6166</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021HP MammographyCADGeometry/[Row 5] SCOORD CID 6166'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="'6166'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'scoord' and concept/@cv = '113661' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113662' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113663' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113664' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113665' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113666' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = 'G-A185' and concept/@csd = 'SRT') or (name() = 'scoord' and concept/@cv = 'G-A186' and concept/@csd = 'SRT') or (name() = 'scoord' and concept/@cv = '113669' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113670' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113671' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021HP MammographyCADGeometry/[Row 5] SCOORD CID 6166/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021HP MammographyCADGeometry/[Row 5] SCOORD CID 6166/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4021INFM">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4021INFM</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4021INFM (MammographyCADGeometry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021INFM MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,"Center")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021INFM MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,&quot;Center&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Center'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POINT'"/>
<xsl:with-param name="numpointsmin" select="'1'"/>
<xsl:with-param name="numpointsmax" select="'1'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111010' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021INFM MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,"Center")/[Row 2] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021INFM MammographyCADGeometry/[Row 1] SCOORD (111010,DCM,&quot;Center&quot;)/[Row 2] IMAGE *'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021INFM MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,"Outline")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021INFM MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,&quot;Outline&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Outline'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111041'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="'POLYLINE_CIRCLE_ELLIPSE'"/>
<xsl:with-param name="numpointsmin" select="'2'"/>
<xsl:with-param name="numpointsmax" select="'n'"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111041' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021INFM MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,"Outline")/[Row 4] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021INFM MammographyCADGeometry/[Row 3] SCOORD (111041,DCM,&quot;Outline&quot;)/[Row 4] IMAGE *'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021INFM MammographyCADGeometry/[Row 5] SCOORD CID 6166</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021INFM MammographyCADGeometry/[Row 5] SCOORD CID 6166'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="'6166'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'scoord' and concept/@cv = '113661' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113662' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113663' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113664' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113665' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113666' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = 'G-A185' and concept/@csd = 'SRT') or (name() = 'scoord' and concept/@cv = 'G-A186' and concept/@csd = 'SRT') or (name() = 'scoord' and concept/@cv = '113669' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113670' and concept/@csd = 'DCM') or (name() = 'scoord' and concept/@cv = '113671' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4021INFM MammographyCADGeometry/[Row 5] SCOORD CID 6166/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4021INFM MammographyCADGeometry/[Row 5] SCOORD CID 6166/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4022">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4022</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4022 (CADObservationContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4022 CADObservationContext/[Row 1] COMPOSITE (111040,DCM,"Original Source")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4022 CADObservationContext/[Row 1] COMPOSITE (111040,DCM,&quot;Original Source&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Original Source'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '111040' and concept/@csd = 'DCM']"> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1001">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_4023">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4023</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4023 (CADOperatingPoints)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 1] NUM (111072,DCM,"Maximum CAD Operating Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 1] NUM (111072,DCM,&quot;Maximum CAD Operating Point&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Maximum CAD Operating Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111072'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="'PMP_4023ROW1'"/>
<xsl:with-param name="unitsBDE" select="'D'"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111072' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 2] NUM (111092,DCM,"Recommended CAD Operating Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 2] NUM (111092,DCM,&quot;Recommended CAD Operating Point&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Recommended CAD Operating Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111092'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'range:0:n'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{0:n}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111092' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Operating Point Table'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111093'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111093' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")/[Row 4] CODE (122698,DCM,"X-Concept")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)/[Row 4] CODE (122698,DCM,&quot;X-Concept&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Concept'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122698'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6048'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '122698' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")/[Row 5] CODE (122699,DCM,"Y-Concept")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)/[Row 5] CODE (122699,DCM,&quot;Y-Concept&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Y-Concept'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122699'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6048'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '122699' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")/[Row 6] NUM (111071,DCM,"CAD Operating Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)/[Row 6] NUM (111071,DCM,&quot;CAD Operating Point&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CAD Operating Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'range:0:n'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{0:n}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111071' and concept/@csd = 'DCM']"> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")/[Row 6] NUM (111071,DCM,"CAD Operating Point")/[Row 7] TEXT (111081,DCM,"CAD Operating Point Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)/[Row 6] NUM (111071,DCM,&quot;CAD Operating Point&quot;)/[Row 7] TEXT (111081,DCM,&quot;CAD Operating Point Description&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CAD Operating Point Description'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111081'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111081' and concept/@csd = 'DCM']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")/[Row 6] NUM (111071,DCM,"CAD Operating Point")/[Row 8] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)/[Row 6] NUM (111071,DCM,&quot;CAD Operating Point&quot;)/[Row 8] NUM *'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,"Operating Point Table")/[Row 6] NUM (111071,DCM,"CAD Operating Point")/[Row 9] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4023 CADOperatingPoints/[Row 3] CONTAINER (111093,DCM,&quot;Operating Point Table&quot;)/[Row 6] NUM (111071,DCM,&quot;CAD Operating Point&quot;)/[Row 9] NUM *'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/> 
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_4108">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">4108</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_4108 (TrackingIdentifier )</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4108 TrackingIdentifier /[Row 1] TEXT (112039,DCM,"Tracking Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(uidref[concept/@cv='112040' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4108 TrackingIdentifier /[Row 1] TEXT (112039,DCM,&quot;Tracking Identifier&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4108 TrackingIdentifier /[Row 1] TEXT (112039,DCM,&quot;Tracking Identifier&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112039' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 4108 TrackingIdentifier /[Row 2] UIDREF (112040,DCM,"Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='112039' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4108 TrackingIdentifier /[Row 2] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 4108 TrackingIdentifier /[Row 2] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112040' and concept/@csd = 'DCM']"/> 
	</xsl:template>
<xsl:template name="TID_1410">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1410</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1410 (PlanarROIMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Group'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'125007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '125007' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 1b] TEXT (C67447,NCIt,"Activity Session")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 1b] TEXT (C67447,NCIt,&quot;Activity Session&quot;)'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Activity Session'"/>
<xsl:with-param name="csdConceptName" select="'NCIt'"/>
<xsl:with-param name="cvConceptName" select="'C67447'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'C67447' and concept/@csd = 'NCIt']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 2] TEXT (112039,DCM,"Tracking Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 2] TEXT (112039,DCM,&quot;Tracking Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112039' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 3] UIDREF (112040,DCM,"Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 3] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112040' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 3b] CODE (121071,DCM,"Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 3b] CODE (121071,DCM,&quot;Finding&quot;)'"/>
<xsl:with-param name="row" select="'3b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121071' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1502</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1502</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1502">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 5] SCOORD (111030,DCM,"Image Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image[concept/@cv='121214' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111030' and concept/@csd = 'DCM']"> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 5] SCOORD (111030,DCM,"Image Region")/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 7] IMAGE (121214,DCM,"Referenced Segmentation Frame")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord[concept/@cv='111030' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 7] IMAGE (121214,DCM,&quot;Referenced Segmentation Frame&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Referenced Segmentation Frame'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121214'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 7] IMAGE (121214,DCM,&quot;Referenced Segmentation Frame&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Referenced Segmentation Frame'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121214'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121214' and concept/@csd = 'DCM']"> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 8] IMAGE (121233,DCM,"Source image for segmentation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image[concept/@cv='121214' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 8] IMAGE (121233,DCM,&quot;Source image for segmentation&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source image for segmentation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121233'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 8] IMAGE (121233,DCM,&quot;Source image for segmentation&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source image for segmentation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121233'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121233' and concept/@csd = 'DCM']"> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 9] IMAGE (121200,DCM,"Illustration of ROI")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 9] IMAGE (121200,DCM,&quot;Illustration of ROI&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Illustration of ROI'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121200'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121200' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 10] COMPOSITE (126100,DCM,"Real World Value Map used for measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1410 PlanarROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 10] COMPOSITE (126100,DCM,&quot;Real World Value Map used for measurement&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Real World Value Map used for measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '126100' and concept/@csd = 'DCM']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1419</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1419</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1419">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			
				 
				 
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1411">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1411</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1411 (VolumetricROIMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Group'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'125007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '125007' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 1b] TEXT (C67447,NCIt,"Activity Session")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 1b] TEXT (C67447,NCIt,&quot;Activity Session&quot;)'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Activity Session'"/>
<xsl:with-param name="csdConceptName" select="'NCIt'"/>
<xsl:with-param name="cvConceptName" select="'C67447'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'C67447' and concept/@csd = 'NCIt']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 2] TEXT (112039,DCM,"Tracking Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 2] TEXT (112039,DCM,&quot;Tracking Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112039' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 3] UIDREF (112040,DCM,"Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 3] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112040' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 3b] CODE (121071,DCM,"Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 3b] CODE (121071,DCM,&quot;Finding&quot;)'"/>
<xsl:with-param name="row" select="'3b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121071' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1502</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1502</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1502">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 5] SCOORD (111030,DCM,"Image Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image   [concept/@cv='121191' and concept/@csd='DCM']) = 0                and count(scoord3d[concept/@cv='121231' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] SCOORD (111030,DCM,&quot;Image Region&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord' and concept/@cv = '111030' and concept/@csd = 'DCM']"> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 5] SCOORD (111030,DCM,"Image Region")/[Row 6] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] SCOORD (111030,DCM,&quot;Image Region&quot;)/[Row 6] IMAGE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'SELECTED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 7] IMAGE (121191,DCM,"Referenced Segment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord  [concept/@cv='111030' and concept/@csd='DCM']) = 0                and count(scoord3d[concept/@cv='121231' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 7] IMAGE (121191,DCM,&quot;Referenced Segment&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Referenced Segment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121191'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 7] IMAGE (121191,DCM,&quot;Referenced Segment&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Referenced Segment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121191'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121191' and concept/@csd = 'DCM']"> 
			</xsl:for-each>
			
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 10] SCOORD3D (121231,DCM,"Volume Surface")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(scoord[concept/@cv='111030' and concept/@csd='DCM']) = 0                and count(image [concept/@cv='121191' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 10] SCOORD3D (121231,DCM,&quot;Volume Surface&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord3d'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Volume Surface'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121231'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 10] SCOORD3D (121231,DCM,&quot;Volume Surface&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'scoord3d'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Volume Surface'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121231'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'scoord3d' and concept/@cv = '121231' and concept/@csd = 'DCM']"> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 11] IMAGE (121233,DCM,"Source image for segmentation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(uidref[concept/@cv='121232' and concept/@csd='DCM']) = 0               and (count(image [concept/@cv='121191' and concept/@csd='DCM']) &gt; 0                 or count(image [concept/@cv='121231' and concept/@csd='DCM']) &gt; 0)">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 11] IMAGE (121233,DCM,&quot;Source image for segmentation&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source image for segmentation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121233'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 11] IMAGE (121233,DCM,&quot;Source image for segmentation&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source image for segmentation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121233'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121233' and concept/@csd = 'DCM']"> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 12] UIDREF (121232,DCM,"Source series for image segmentation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(image   [concept/@cv='121233' and concept/@csd='DCM']) = 0               and (count(image   [concept/@cv='121191' and concept/@csd='DCM']) &gt; 0                 or count(scoord3d[concept/@cv='121231' and concept/@csd='DCM']) &gt; 0)">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 12] UIDREF (121232,DCM,&quot;Source series for image segmentation&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source series for image segmentation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121232'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 12] UIDREF (121232,DCM,&quot;Source series for image segmentation&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source series for image segmentation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121232'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '121232' and concept/@csd = 'DCM']"> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 13] IMAGE (121200,DCM,"Illustration of ROI")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 13] IMAGE (121200,DCM,&quot;Illustration of ROI&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Illustration of ROI'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121200'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121200' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 14] COMPOSITE (126100,DCM,"Real World Value Map used for measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1411 VolumetricROIMeasurements/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 14] COMPOSITE (126100,DCM,&quot;Real World Value Map used for measurement&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Real World Value Map used for measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '126100' and concept/@csd = 'DCM']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1419</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1419</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1419">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			
				 
				 
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1419">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1419</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1419 (ROIMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 1] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 1] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 2] CODE (G-C0E3,SRT,"Finding Site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 2] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E3' and concept/@csd = 'SRT']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 2] CODE (G-C0E3,SRT,"Finding Site")/[Row 3] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 2] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 3] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 2] CODE (G-C0E3,SRT,"Finding Site")/[Row 4] CODE (G-A1F8,SRT,"Topographical modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 2] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 4] CODE (G-A1F8,SRT,&quot;Topographical modifier&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Topographical modifier'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A1F8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-A1F8' and concept/@csd = 'SRT']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM *'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 6] CODE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 6] CODE *'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 7] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 7] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 8] CODE (121401,DCM,"Derivation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 8] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121401' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 9] CODE (G-C0E3,SRT,"Finding Site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 9] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E3' and concept/@csd = 'SRT']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 9] CODE (G-C0E3,SRT,"Finding Site")/[Row 10] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 9] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 10] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 9] CODE (G-C0E3,SRT,"Finding Site")/[Row 11] CODE (G-A1F8,SRT,"Topographical modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 9] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 11] CODE (G-A1F8,SRT,&quot;Topographical modifier&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Topographical modifier'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A1F8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-A1F8' and concept/@csd = 'SRT']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_310</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_310</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_310">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 13] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 13] NUM *'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 14] NUM *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 14] NUM *'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'T'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_315</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_315</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121420' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121421' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121424' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121422' and concept/@csd='DCM']) &gt; 0              or count(code[concept/@cv='121423' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_315">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	  
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 16] TEXT CID 228</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121420' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121421' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121424' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121422' and concept/@csd='DCM']) &gt; 0              or count(text[concept/@cv='121423' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 16] TEXT CID 228'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="'228'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 16] TEXT CID 228'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="'228'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[(name() = 'text' and concept/@cv = '121420' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121421' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121424' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121422' and concept/@csd = 'DCM') or (name() = 'text' and concept/@cv = '121423' and concept/@csd = 'DCM')]"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1000</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1000">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 18] TEXT *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 18] TEXT *'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1419 ROIMeasurements/[Row 5] NUM */[Row 19] COMPOSITE (126100,DCM,"Real World Value Map used for measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1419 ROIMeasurements/[Row 5] NUM */[Row 19] COMPOSITE (126100,DCM,&quot;Real World Value Map used for measurement&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Real World Value Map used for measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '126100' and concept/@csd = 'DCM']"/>	
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1420">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1420</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1420 (MeasurementsDerivedFromMultipleROIMeasurements)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1420 MeasurementsDerivedFromMultipleROIMeasurements/[Row 1] NUM CID 7465</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1420 MeasurementsDerivedFromMultipleROIMeasurements/[Row 1] NUM CID 7465'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="'7465'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:text>Internal Error: </xsl:text>Template 1420 MeasurementsDerivedFromMultipleROIMeasurements/[Row 1] NUM CID 7465<xsl:text>: Concept Name CID is empty or missing - </xsl:text>7465<xsl:value-of select="$newline"/>
	</xsl:template>
<xsl:template name="TID_10001">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10001</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10001 (ProjectionXRayRadiationDose)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_10001 (ProjectionXRayRadiationDose)</xsl:text>
<xsl:value-of select="$newline"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Radiation Dose Report'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113701'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113701' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 2] CODE (121058,DCM,"Procedure reported")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 2] CODE (121058,DCM,&quot;Procedure reported&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure reported'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'PMP_10001'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121058' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 2] CODE (121058,DCM,"Procedure reported")/[Row 3] CODE (G-C0E8,SRT,"Has Intent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 2] CODE (121058,DCM,&quot;Procedure reported&quot;)/[Row 3] CODE (G-C0E8,SRT,&quot;Has Intent&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Has Intent'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'3629'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E8' and concept/@csd = 'SRT']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 4] CODE (122142,DCM,"Acquisition Device Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 4] CODE (122142,DCM,&quot;Acquisition Device Type&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Device Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122142'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10032'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '122142' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 6] CODE (113705,DCM,"Scope of Accumulation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 6] CODE (113705,DCM,&quot;Scope of Accumulation&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Scope of Accumulation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113705'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10000'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113705' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 6] CODE (113705,DCM,"Scope of Accumulation")/[Row 7] UIDREF CID 10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 6] CODE (113705,DCM,&quot;Scope of Accumulation&quot;)/[Row 7] UIDREF CID 10001'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="'10001'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'uidref' and concept/@cv = '110180' and concept/@csd = 'DCM') or (name() = 'uidref' and concept/@cv = '112002' and concept/@csd = 'DCM') or (name() = 'uidref' and concept/@cv = '121126' and concept/@csd = 'DCM') or (name() = 'uidref' and concept/@cv = '113853' and concept/@csd = 'DCM')]"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 8] CODE (113945,DCM,"X-Ray Detector Data Available")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 8] CODE (113945,DCM,&quot;X-Ray Detector Data Available&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Detector Data Available'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113945'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113945' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 9] CODE (113943,DCM,"X-Ray Source Data Available")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 9] CODE (113943,DCM,&quot;X-Ray Source Data Available&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Source Data Available'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113943'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113943' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 10] CODE (113944,DCM,"X-Ray Mechanical Data Available")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 10] CODE (113944,DCM,&quot;X-Ray Mechanical Data Available&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Mechanical Data Available'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113944'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113944' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_10002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'2'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_10003">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 15] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 15] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 16] IMAGE (121342,DCM,"Dose Image")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 16] IMAGE (121342,DCM,&quot;Dose Image&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Image'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121342'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '121342' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1020">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 18] CODE (113854,DCM,"Source of Dose Information")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10001 ProjectionXRayRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 18] CODE (113854,DCM,&quot;Source of Dose Information&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source of Dose Information'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113854'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10020'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113854' and concept/@csd = 'DCM']"/>
		</xsl:for-each>	
	<xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_10002">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10002</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10002 (AccumulatedXRayDoseData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accumulated X-Ray Dose Data'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113702'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'2'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113702' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 2] CODE (113764,DCM,"Acquisition Plane")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 2] CODE (113764,DCM,&quot;Acquisition Plane&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Plane'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113764'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'PMP_10002A'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113764' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122505'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '122505' and concept/@csd = 'DCM']">	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")/[Row 4] CODE (113794,DCM,"Dose Measurement Device")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)/[Row 4] CODE (113794,DCM,&quot;Dose Measurement Device&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Measurement Device'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113794'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113794' and concept/@csd = 'DCM']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")/[Row 5] DATETIME (113723,DCM,"Calibration Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)/[Row 5] DATETIME (113723,DCM,&quot;Calibration Date&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113723'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = '113723' and concept/@csd = 'DCM']"/>		
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")/[Row 6] NUM (122322,DCM,"Calibration Factor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)/[Row 6] NUM (122322,DCM,&quot;Calibration Factor&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration Factor'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122322'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '122322' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='122322' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='122322' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Calibration Factor is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")/[Row 7] NUM (113763,DCM,"Calibration Uncertainty")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)/[Row 7] NUM (113763,DCM,&quot;Calibration Uncertainty&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration Uncertainty'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113763'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Percent'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'%'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113763' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113763' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113763' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Calibration Uncertainty is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")/[Row 8] TEXT (113724,DCM,"Calibration Responsible Party")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)/[Row 8] TEXT (113724,DCM,&quot;Calibration Responsible Party&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration Responsible Party'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113724'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113724' and concept/@csd = 'DCM']"/>		
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,"Accumulated X-Ray Dose Data")/[Row 3] CONTAINER (122505,DCM,"Calibration")/[Row 9] TEXT (113720,DCM,"Calibration Protocol")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10002 AccumulatedXRayDoseData/[Row 1] CONTAINER (113702,DCM,&quot;Accumulated X-Ray Dose Data&quot;)/[Row 3] CONTAINER (122505,DCM,&quot;Calibration&quot;)/[Row 9] TEXT (113720,DCM,&quot;Calibration Protocol&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Calibration Protocol'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113720'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113720' and concept/@csd = 'DCM']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='122142' and concept/@csd='DCM' and value/@cv='113957' and value/@csd='DCM']) &gt; 0             or (count(../code[concept/@cv='121058' and concept/@csd='DCM' and value/@cv='113704' and value/@csd='DCM']) &gt; 0             and count(../code[concept/@cv='122142' and concept/@csd='DCM']) = 0             )">
<xsl:call-template name="TID_10004">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='121058' and concept/@csd='DCM' and value/@cv='P5-40010' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="TID_10005">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='122142' and concept/@csd='DCM' and value/@cv='113958' and value/@csd='DCM']) &gt; 0             or  count(../code[concept/@cv='122142' and concept/@csd='DCM' and value/@cv='113957' and value/@csd='DCM']) &gt; 0             or (count(../code[concept/@cv='121058' and concept/@csd='DCM' and value/@cv='113704' and value/@csd='DCM']) &gt; 0             and count(../code[concept/@cv='122142' and concept/@csd='DCM']) = 0             )">
<xsl:call-template name="TID_10007">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='122142' and concept/@csd='DCM' and value/@cv='113959' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_10006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1021">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_10003">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10003</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10003 (IrradiationEventXRayData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Event X-Ray Data'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113706'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113706' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 2] CODE (113764,DCM,"Acquisition Plane")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 2] CODE (113764,DCM,&quot;Acquisition Plane&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Plane'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113764'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10003'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113764' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 3] UIDREF (113769,DCM,"Irradiation Event UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 3] UIDREF (113769,DCM,&quot;Irradiation Event UID&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Event UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113769'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '113769' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 4] TEXT (113605,DCM,"Irradiation Event Label")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 4] TEXT (113605,DCM,&quot;Irradiation Event Label&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Event Label'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113605'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113605' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 4] TEXT (113605,DCM,"Irradiation Event Label")/[Row 5] CODE (113606,DCM,"Label Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 4] TEXT (113605,DCM,&quot;Irradiation Event Label&quot;)/[Row 5] CODE (113606,DCM,&quot;Label Type&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Label Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113606'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113606' and concept/@csd = 'DCM']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 6] DATETIME (111526,DCM,"DateTime Started")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 6] DATETIME (111526,DCM,&quot;DateTime Started&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DateTime Started'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111526'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = '111526' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 7] CODE (113721,DCM,"Irradiation Event Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 7] CODE (113721,DCM,&quot;Irradiation Event Type&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Event Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113721'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10002'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113721' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 8] TEXT (125203,DCM,"Acquisition Protocol")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 8] TEXT (125203,DCM,&quot;Acquisition Protocol&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Protocol'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'125203'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '125203' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 9] CODE (T-D0005,SRT,"Anatomical structure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 9] CODE (T-D0005,SRT,&quot;Anatomical structure&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Anatomical structure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'T-D0005'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4009'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'T-D0005' and concept/@csd = 'SRT']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 9] CODE (T-D0005,SRT,"Anatomical structure")/[Row 10] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 9] CODE (T-D0005,SRT,&quot;Anatomical structure&quot;)/[Row 10] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 11] CODE (111031,DCM,"Image View")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 11] CODE (111031,DCM,&quot;Image View&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4010_4014'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111031' and concept/@csd = 'DCM']">	 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 11] CODE (111031,DCM,"Image View")/[Row 12] CODE (111032,DCM,"Image View Modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 11] CODE (111031,DCM,&quot;Image View&quot;)/[Row 12] CODE (111032,DCM,&quot;Image View Modifier&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111032'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4011_4015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111032' and concept/@csd = 'DCM']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 13] CODE (113946,DCM,"Projection Eponymous Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 13] CODE (113946,DCM,&quot;Projection Eponymous Name&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Projection Eponymous Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113946'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4012'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113946' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 14] CODE (113745,DCM,"Patient Table Relationship")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 14] CODE (113745,DCM,&quot;Patient Table Relationship&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Table Relationship'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113745'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'21'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113745' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 15] CODE (113743,DCM,"Patient Orientation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 15] CODE (113743,DCM,&quot;Patient Orientation&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113743'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'19'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113743' and concept/@csd = 'DCM']">  
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 15] CODE (113743,DCM,"Patient Orientation")/[Row 16] CODE (113744,DCM,"Patient Orientation Modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 15] CODE (113743,DCM,&quot;Patient Orientation&quot;)/[Row 16] CODE (113744,DCM,&quot;Patient Orientation Modifier&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113744'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'20'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113744' and concept/@csd = 'DCM']"/> 
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 17] CODE (123014,DCM,"Target Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 17] CODE (123014,DCM,&quot;Target Region&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Target Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123014'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4031'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '123014' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 18] NUM (122130,DCM,"Dose Area Product")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='121058' and concept/@csd='DCM' and value/@cv='113704'   and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 18] NUM (122130,DCM,&quot;Dose Area Product&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Area Product'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122130'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy.m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy.m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 18] NUM (122130,DCM,&quot;Dose Area Product&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Area Product'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'122130'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy.m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy.m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '122130' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='122130' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='122130' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Dose Area Product is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 19] NUM (111634,DCM,"Half Value Layer")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 19] NUM (111634,DCM,&quot;Half Value Layer&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Half Value Layer'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111634'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111634' and concept/@csd = 'DCM']"/>
			<xsl:if test="count(num[concept/@cv='111634' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111634' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Half Value Layer is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 20] NUM (111638,DCM,"Patient Equivalent Thickness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 20] NUM (111638,DCM,&quot;Patient Equivalent Thickness&quot;)'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Equivalent Thickness'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111638'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111638' and concept/@csd = 'DCM']"/>
			<xsl:if test="count(num[concept/@cv='111638' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111638' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Patient Equivalent Thickness is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 21] NUM (111636,DCM,"Entrance Exposure at RP")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='121058' and concept/@csd='DCM' and value/@cv='P5-40010' and value/@csd='SRT']) &gt; 0             and (count(//code[concept/@cv='113945' and concept/@csd='DCM']) = 0               or count(//code[concept/@cv='113945' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0              )             and (count(//code[concept/@cv='113943' and concept/@csd='DCM']) = 0               or count(//code[concept/@cv='113943' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0              )              ">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 21] NUM (111636,DCM,&quot;Entrance Exposure at RP&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Entrance Exposure at RP'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111636'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 21] NUM (111636,DCM,&quot;Entrance Exposure at RP&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Entrance Exposure at RP'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111636'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111636' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='111636' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111636' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Entrance Exposure at RP is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 22] TEXT (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='111636' and concept/@csd='DCM']) &gt; 0             and count(code[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 22] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 22] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 23] CODE (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='111636' and concept/@csd='DCM']) &gt; 0             and count(text[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 23] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 23] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_4007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_4007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_4007">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,"Irradiation Event X-Ray Data")/[Row 25] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003 IrradiationEventXRayData/[Row 1] CONTAINER (113706,DCM,&quot;Irradiation Event X-Ray Data&quot;)/[Row 25] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'25'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1020">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10003a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10003a</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113945' and concept/@csd='DCM']) = 0           or count(//code[concept/@cv='113945' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="TID_10003a">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10003b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10003b</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113943' and concept/@csd='DCM']) = 0           or count(//code[concept/@cv='113943' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="TID_10003b">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10003c</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10003c</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113944' and concept/@csd='DCM']) = 0           or count(//code[concept/@cv='113944' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="TID_10003c">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>	
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_10003a">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10003a</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10003a (IrradiationEventXRayDetectorData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003a IrradiationEventXRayDetectorData/[Row 1] NUM (113845,DCM,"Exposure Index")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003a IrradiationEventXRayDetectorData/[Row 1] NUM (113845,DCM,&quot;Exposure Index&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure Index'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113845'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113845' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003a IrradiationEventXRayDetectorData/[Row 2] NUM (113846,DCM,"Target Exposure Index")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003a IrradiationEventXRayDetectorData/[Row 2] NUM (113846,DCM,&quot;Target Exposure Index&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Target Exposure Index'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113846'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113846' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003a IrradiationEventXRayDetectorData/[Row 3] NUM (113847,DCM,"Deviation Index")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003a IrradiationEventXRayDetectorData/[Row 3] NUM (113847,DCM,&quot;Deviation Index&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Deviation Index'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113847'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113847' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113876' and concept/@csd='DCM' and value/@cv='113942' and value/@csd='DCM'])">
<xsl:call-template name="TID_1021">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003a IrradiationEventXRayDetectorData/[Row 5] IMAGE (113795,DCM,"Acquired Image")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003a IrradiationEventXRayDetectorData/[Row 5] IMAGE (113795,DCM,&quot;Acquired Image&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquired Image'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113795'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image' and concept/@cv = '113795' and concept/@csd = 'DCM']"/> 
	</xsl:template>
<xsl:template name="TID_10003b">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10003b</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10003b (IrradiationEventXRaySourceData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 1] NUM (113738,DCM,"Dose (RP)")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='121058' and concept/@csd='DCM' and  value/@cv='113704'   and value/@csd='DCM']) &gt; 0                 and count(//code[concept/@cv='113854' and concept/@csd='DCM' and (value/@cv!='113858' or value/@csd!='DCM')]) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 1] NUM (113738,DCM,&quot;Dose (RP)&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose (RP)'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113738'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 1] NUM (113738,DCM,&quot;Dose (RP)&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose (RP)'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113738'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113738' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113738' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113738' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Dose (RP) is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 2] TEXT (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='111636' and concept/@csd='DCM']) &gt; 0             and count(code[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 2] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 2] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 3] CODE (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='111636' and concept/@csd='DCM']) &gt; 0             and count(text[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 3] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 3] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 4] NUM (111631,DCM,"Average Glandular Dose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='121058' and concept/@csd='DCM' and value/@cv='P5-40010' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 4] NUM (111631,DCM,&quot;Average Glandular Dose&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Average Glandular Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111631'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 4] NUM (111631,DCM,&quot;Average Glandular Dose&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Average Glandular Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111631'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111631' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='111631' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111631' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Average Glandular Dose is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 5] CODE (113732,DCM,"Fluoro Mode")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113721' and concept/@csd='DCM' and value/@cv='P5-06000' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 5] CODE (113732,DCM,&quot;Fluoro Mode&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fluoro Mode'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113732'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10004'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 5] CODE (113732,DCM,&quot;Fluoro Mode&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fluoro Mode'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113732'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10004'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113732' and concept/@csd = 'DCM']"/>	

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 6] NUM (113791,DCM,"Pulse Rate")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113732' and concept/@csd='DCM' and value/@cv='113631' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 6] NUM (113791,DCM,&quot;Pulse Rate&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pulse Rate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113791'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pulse/s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pulse}/s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 6] NUM (113791,DCM,&quot;Pulse Rate&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pulse Rate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113791'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pulse/s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pulse}/s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113791' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113791' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113791' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Pulse Rate is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 7] NUM (113768,DCM,"Number of Pulses")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113732' and concept/@csd='DCM']) = 0            or count(code[concept/@cv='113732' and concept/@csd='DCM' and value/@cv='113631' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 7] NUM (113768,DCM,&quot;Number of Pulses&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of Pulses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113768'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 7] NUM (113768,DCM,&quot;Number of Pulses&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of Pulses'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113768'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113768' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 7] NUM (113768,DCM,"Number of Pulses")/[Row 8] CODE (121401,DCM,"Derivation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 7] NUM (113768,DCM,&quot;Number of Pulses&quot;)/[Row 8] CODE (121401,DCM,&quot;Derivation&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derivation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121401'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'PMP_10003A'"/>
<xsl:with-param name="valueSetBDE" select="'E'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121401' and concept/@csd = 'DCM']"/> 
		</xsl:for-each>
		<xsl:if test="count(num[concept/@cv='113768' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113768' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Number of Pulses is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 9] NUM (113793,DCM,"Pulse Width")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 9] NUM (113793,DCM,&quot;Pulse Width&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pulse Width'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113793'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'ms'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'ms'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113793' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113793' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113793' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Pulse Width is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 10] NUM (113742,DCM,"Irradiation Duration")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 10] NUM (113742,DCM,&quot;Irradiation Duration&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Duration'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113742'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113742' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113742' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113742' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Irradiation Duration is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 11] NUM (113733,DCM,"KVP")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 11] NUM (113733,DCM,&quot;KVP&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'KVP'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113733'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'kV'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'kV'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113733' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113733' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113733' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for KVP is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 12] NUM (113734,DCM,"X-Ray Tube Current")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113736' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 12] NUM (113734,DCM,&quot;X-Ray Tube Current&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Tube Current'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113734'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mA'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mA'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 12] NUM (113734,DCM,&quot;X-Ray Tube Current&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Tube Current'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113734'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mA'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mA'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113734' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113734' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113734' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for X-Ray Tube Current is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 13] NUM (113767,DCM,"Average X-Ray Tube Current")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 13] NUM (113767,DCM,&quot;Average X-Ray Tube Current&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Average X-Ray Tube Current'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113767'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mA'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mA'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113767' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113767' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113767' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Average X-Ray Tube Current is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 14] NUM (113824,DCM,"Exposure Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113736' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 14] NUM (113824,DCM,&quot;Exposure Time&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113824'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'ms'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'ms'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 14] NUM (113824,DCM,&quot;Exposure Time&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113824'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'ms'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'ms'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113824' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113824' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113824' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Exposure Time is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="count(num[concept/@cv='113824' and concept/@csd='DCM'])=0 and count(num[concept/@cv='113735' and concept/@csd='DCM'])&gt;0">
<xsl:text>Error: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: (113735,DCM,'Exposure Time') is present but should not be used ... it has been replaced by (113824,DCM,'Exposure Time')</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 15] NUM (113736,DCM,"Exposure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113734' and concept/@csd='DCM']) = 0           and count(num[concept/@cv='113824' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 15] NUM (113736,DCM,&quot;Exposure&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113736'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'uA.s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'uA.s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 15] NUM (113736,DCM,&quot;Exposure&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113736'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'uA.s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'uA.s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113736' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113736' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113736' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Exposure is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 16] NUM (113766,DCM,"Focal Spot Size")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 16] NUM (113766,DCM,&quot;Focal Spot Size&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Focal Spot Size'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113766'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113766' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113766' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113766' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Focal Spot Size is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 17] CODE (111632,DCM,"Anode Target Material")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 17] CODE (111632,DCM,&quot;Anode Target Material&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Anode Target Material'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111632'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10016'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111632' and concept/@csd = 'DCM']"/> 

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,"X-Ray Filters")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,&quot;X-Ray Filters&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Filters'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113771'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113771' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,"X-Ray Filters")/[Row 19] CODE (113772,DCM,"X-Ray Filter Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,&quot;X-Ray Filters&quot;)/[Row 19] CODE (113772,DCM,&quot;X-Ray Filter Type&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Filter Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113772'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10007'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113772' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,"X-Ray Filters")/[Row 20] CODE (113757,DCM,"X-Ray Filter Material")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,&quot;X-Ray Filters&quot;)/[Row 20] CODE (113757,DCM,&quot;X-Ray Filter Material&quot;)'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Filter Material'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113757'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10006'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113757' and concept/@csd = 'DCM']"/> 
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,"X-Ray Filters")/[Row 21] NUM (113758,DCM,"X-Ray Filter Thickness Minimum")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,&quot;X-Ray Filters&quot;)/[Row 21] NUM (113758,DCM,&quot;X-Ray Filter Thickness Minimum&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Filter Thickness Minimum'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113758'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113758' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,"X-Ray Filters")/[Row 22] NUM (113773,DCM,"X-Ray Filter Thickness Maximum")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 18] CONTAINER (113771,DCM,&quot;X-Ray Filters&quot;)/[Row 22] NUM (113773,DCM,&quot;X-Ray Filter Thickness Maximum&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Filter Thickness Maximum'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113773'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113773' and concept/@csd = 'DCM']"/>
		</xsl:for-each>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 23] NUM (113790,DCM,"Collimated Field Area")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 23] NUM (113790,DCM,&quot;Collimated Field Area&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Collimated Field Area'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113790'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113790' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113790' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113790' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Collimated Field Area is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 24] NUM (113788,DCM,"Collimated Field Height")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 24] NUM (113788,DCM,&quot;Collimated Field Height&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Collimated Field Height'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113788'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113788' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113788' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113788' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Collimated Field Height is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 25] NUM (113789,DCM,"Collimated Field Width")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 25] NUM (113789,DCM,&quot;Collimated Field Width&quot;)'"/>
<xsl:with-param name="row" select="'25'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Collimated Field Width'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113789'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113789' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113789' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113789' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003b IrradiationEventXRaySourceData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Collimated Field Width is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003b IrradiationEventXRaySourceData/[Row 26] CODE (111635,DCM,"X-Ray Grid")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003b IrradiationEventXRaySourceData/[Row 26] CODE (111635,DCM,&quot;X-Ray Grid&quot;)'"/>
<xsl:with-param name="row" select="'26'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Grid'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111635'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10017'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111635' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113876' and concept/@csd='DCM' and value/@cv='113859' and value/@csd='DCM'])">
<xsl:call-template name="TID_1021">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_10003c">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10003c</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10003c (IrradiationEventXRayMechanicalData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 1] CODE (113956,DCM,"CR/DR Mechanical Configuration")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 1] CODE (113956,DCM,&quot;CR/DR Mechanical Configuration&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CR/DR Mechanical Configuration'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113956'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10031'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113956' and concept/@csd = 'DCM']"/> 

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 2] NUM (112011,DCM,"Positioner Primary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113770' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 2] NUM (112011,DCM,&quot;Positioner Primary Angle&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 2] NUM (112011,DCM,&quot;Positioner Primary Angle&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112011' and concept/@csd = 'DCM']"/> 

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 3] NUM (112012,DCM,"Positioner Secondary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113770' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 3] NUM (112012,DCM,&quot;Positioner Secondary Angle&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 3] NUM (112012,DCM,&quot;Positioner Secondary Angle&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112012' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 4] NUM (113739,DCM,"Positioner Primary End Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113721' and concept/@csd='DCM' and value/@cv='113613' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 4] NUM (113739,DCM,&quot;Positioner Primary End Angle&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary End Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113739'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 4] NUM (113739,DCM,&quot;Positioner Primary End Angle&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary End Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113739'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113739' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 5] NUM (113740,DCM,"Positioner Secondary End Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113721' and concept/@csd='DCM' and value/@cv='113613' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 5] NUM (113740,DCM,&quot;Positioner Secondary End Angle&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary End Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113740'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 5] NUM (113740,DCM,&quot;Positioner Secondary End Angle&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary End Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113740'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113740' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 6] NUM (113770,DCM,"Column Angulation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='112011' and concept/@csd='DCM']) = 0                 and count(num[concept/@cv='112012' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 6] NUM (113770,DCM,&quot;Column Angulation&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Column Angulation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113770'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 6] NUM (113770,DCM,&quot;Column Angulation&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Column Angulation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113770'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113770' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 7] NUM (113754,DCM,"Table Head Tilt Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 7] NUM (113754,DCM,&quot;Table Head Tilt Angle&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Table Head Tilt Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113754'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113754' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 8] NUM (113755,DCM,"Table Horizontal Rotation Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 8] NUM (113755,DCM,&quot;Table Horizontal Rotation Angle&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Table Horizontal Rotation Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113755'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113755' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 9] NUM (113756,DCM,"Table Cradle Tilt Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 9] NUM (113756,DCM,&quot;Table Cradle Tilt Angle&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Table Cradle Tilt Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113756'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'°'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'deg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113756' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 10] NUM (111633,DCM,"Compression Thickness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 10] NUM (111633,DCM,&quot;Compression Thickness&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Compression Thickness'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111633'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111633' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='111633' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='111633' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003c IrradiationEventXRayMechanicalData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Compression Thickness is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11a] NUM (113748,DCM,"Distance Source to Isocenter")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11a] NUM (113748,DCM,&quot;Distance Source to Isocenter&quot;)'"/>
<xsl:with-param name="row" select="'11a'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Distance Source to Isocenter'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113748'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113748' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113748' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113748' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003c IrradiationEventXRayMechanicalData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Distance Source to Isocenter is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11b] NUM (113737,DCM,"Distance Source to Reference Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11b] NUM (113737,DCM,&quot;Distance Source to Reference Point&quot;)'"/>
<xsl:with-param name="row" select="'11b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Distance Source to Reference Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113737'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113737' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113737' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113737' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003c IrradiationEventXRayMechanicalData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Distance Source to Reference Point is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11c] NUM (113750,DCM,"Distance Source to Detector")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11c] NUM (113750,DCM,&quot;Distance Source to Detector&quot;)'"/>
<xsl:with-param name="row" select="'11c'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Distance Source to Detector'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113750'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113750' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113750' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113750' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003c IrradiationEventXRayMechanicalData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Distance Source to Detector is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11d] NUM (113751,DCM,"Table Longitudinal Position")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11d] NUM (113751,DCM,&quot;Table Longitudinal Position&quot;)'"/>
<xsl:with-param name="row" select="'11d'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Table Longitudinal Position'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113751'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113751' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11e] NUM (113752,DCM,"Table Lateral Position")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11e] NUM (113752,DCM,&quot;Table Lateral Position&quot;)'"/>
<xsl:with-param name="row" select="'11e'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Table Lateral Position'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113752'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113752' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11f] NUM (113753,DCM,"Table Height Position")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11f] NUM (113753,DCM,&quot;Table Height Position&quot;)'"/>
<xsl:with-param name="row" select="'11f'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Table Height Position'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113753'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113753' and concept/@csd = 'DCM']"/>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10003c IrradiationEventXRayMechanicalData/[Row 11g] NUM (113792,DCM,"Distance Source to Table Plane")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10003c IrradiationEventXRayMechanicalData/[Row 11g] NUM (113792,DCM,&quot;Distance Source to Table Plane&quot;)'"/>
<xsl:with-param name="row" select="'11g'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Distance Source to Table Plane'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113792'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113792' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113792' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113792' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10003c IrradiationEventXRayMechanicalData: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Distance Source to Table Plane is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
	</xsl:template>
<xsl:template name="TID_10004">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10004</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10004 (AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 3] NUM (113726,DCM,"Fluoro Dose Area Product Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113721' and concept/@csd='DCM' and  value/@cv='P5-06000' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 3] NUM (113726,DCM,&quot;Fluoro Dose Area Product Total&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fluoro Dose Area Product Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113726'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy.m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy.m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 3] NUM (113726,DCM,&quot;Fluoro Dose Area Product Total&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fluoro Dose Area Product Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113726'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy.m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy.m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113726' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113726' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113726' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Fluoro Dose Area Product Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 4] NUM (113728,DCM,"Fluoro Dose (RP) Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113721' and concept/@csd='DCM' and  value/@cv='P5-06000' and value/@csd='SRT']) &gt; 0                and count(//code[concept/@cv='113854' and concept/@csd='DCM' and (value/@cv!='113858' or value/@csd!='DCM')]) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 4] NUM (113728,DCM,&quot;Fluoro Dose (RP) Total&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fluoro Dose (RP) Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113728'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 4] NUM (113728,DCM,&quot;Fluoro Dose (RP) Total&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Fluoro Dose (RP) Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113728'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113728' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113728' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113728' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Fluoro Dose (RP) Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 5] NUM (113730,DCM,"Total Fluoro Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113721' and concept/@csd='DCM' and  value/@cv='P5-06000' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 5] NUM (113730,DCM,&quot;Total Fluoro Time&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Fluoro Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113730'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 5] NUM (113730,DCM,&quot;Total Fluoro Time&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Fluoro Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113730'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113730' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113730' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113730' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Total Fluoro Time is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 6] NUM (113727,DCM,"Acquisition Dose Area Product Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 6] NUM (113727,DCM,&quot;Acquisition Dose Area Product Total&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Dose Area Product Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113727'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy.m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy.m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113727' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113727' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113727' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Acquisition Dose Area Product Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 7] NUM (113729,DCM,"Acquisition Dose (RP) Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113854' and concept/@csd='DCM' and (value/@cv!='113858' or value/@csd!='DCM')]) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 7] NUM (113729,DCM,&quot;Acquisition Dose (RP) Total&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Dose (RP) Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113729'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 7] NUM (113729,DCM,&quot;Acquisition Dose (RP) Total&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Dose (RP) Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113729'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113729' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113729' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113729' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Acquisition Dose (RP) Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 8] NUM (113855,DCM,"Total Acquisition Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 8] NUM (113855,DCM,&quot;Total Acquisition Time&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Acquisition Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113855'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113855' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113855' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113855' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Total Acquisition Time is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 9] NUM (113737,DCM,"Distance Source to Reference Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 9] NUM (113737,DCM,&quot;Distance Source to Reference Point&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Distance Source to Reference Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113737'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113737' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113737' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113737' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Distance Source to Reference Point is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 10] NUM (113731,DCM,"Total Number of Radiographic Frames")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 10] NUM (113731,DCM,&quot;Total Number of Radiographic Frames&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Number of Radiographic Frames'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113731'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113731' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 11] CODE (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113725' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113728' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113729' and concept/@csd='DCM']) &gt; 0)              and count(text[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 11] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 11] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 12] TEXT (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113725' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113728' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113729' and concept/@csd='DCM']) &gt; 0)              and count(code[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 12] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10004 AccumulatedFluoroscopyAndAcquisitionProjectionXRayDose/[Row 12] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	

	</xsl:template>
<xsl:template name="TID_10005">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10005</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10005 (AccumulatedMammographyXRayDose)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10005 AccumulatedMammographyXRayDose/[Row 1] NUM (111637,DCM,"Accumulated Average Glandular Dose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10005 AccumulatedMammographyXRayDose/[Row 1] NUM (111637,DCM,&quot;Accumulated Average Glandular Dose&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accumulated Average Glandular Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111637'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'2'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111637' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10005 AccumulatedMammographyXRayDose/[Row 1] NUM (111637,DCM,"Accumulated Average Glandular Dose")/[Row 2] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10005 AccumulatedMammographyXRayDose/[Row 1] NUM (111637,DCM,&quot;Accumulated Average Glandular Dose&quot;)/[Row 2] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'6022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>		
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_10006">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10006</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10006 (AccumulatedCassetteBasedProjectionRadiographyDose)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10006 AccumulatedCassetteBasedProjectionRadiographyDose/[Row 1] CODE (113947,DCM,"Detector Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113945' and concept/@csd='DCM']) = 0               or count(//code[concept/@cv='113945' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10006 AccumulatedCassetteBasedProjectionRadiographyDose/[Row 1] CODE (113947,DCM,&quot;Detector Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Detector Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113947'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10030'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10006 AccumulatedCassetteBasedProjectionRadiographyDose/[Row 1] CODE (113947,DCM,&quot;Detector Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Detector Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113947'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10030'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113947' and concept/@csd = 'DCM']"/> 
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10006 AccumulatedCassetteBasedProjectionRadiographyDose/[Row 2] NUM (113731,DCM,"Total Number of Radiographic Frames")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(//code[concept/@cv='113945' and concept/@csd='DCM']) = 0               or count(//code[concept/@cv='113945' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10006 AccumulatedCassetteBasedProjectionRadiographyDose/[Row 2] NUM (113731,DCM,&quot;Total Number of Radiographic Frames&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Number of Radiographic Frames'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113731'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10006 AccumulatedCassetteBasedProjectionRadiographyDose/[Row 2] NUM (113731,DCM,&quot;Total Number of Radiographic Frames&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Number of Radiographic Frames'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113731'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113731' and concept/@csd = 'DCM']"/> 
	</xsl:template>
<xsl:template name="TID_10007">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10007</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10007 (AccumulatedTotalProjectionRadiographyDose)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 1] NUM (113722,DCM,"Dose Area Product Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 1] NUM (113722,DCM,&quot;Dose Area Product Total&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Area Product Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113722'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy.m2'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy.m2'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113722' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113722' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113722' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10007 AccumulatedTotalProjectionRadiographyDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Dose Area Product Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 2] NUM (113725,DCM,"Dose (RP) Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='122142' and concept/@csd='DCM' and value/@cv='113958' and value/@csd='DCM']) &gt; 0            or count(../code[concept/@cv='113854' and concept/@csd='DCM' and value/@cv='113858' and value/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 2] NUM (113725,DCM,&quot;Dose (RP) Total&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose (RP) Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113725'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 2] NUM (113725,DCM,&quot;Dose (RP) Total&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose (RP) Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113725'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113725' and concept/@csd = 'DCM']"/>	
		<xsl:if test="count(num[concept/@cv='113725' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113725' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10007 AccumulatedTotalProjectionRadiographyDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Dose (RP) Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 3] NUM (113737,DCM,"Distance Source to Reference Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 3] NUM (113737,DCM,&quot;Distance Source to Reference Point&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Distance Source to Reference Point'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113737'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113737' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113737' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113737' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10007 AccumulatedTotalProjectionRadiographyDose: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Distance Source to Reference Point is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 4] NUM (113731,DCM,"Total Number of Radiographic Frames")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 4] NUM (113731,DCM,&quot;Total Number of Radiographic Frames&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Number of Radiographic Frames'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113731'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'no units'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'1'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113731' and concept/@csd = 'DCM']"/>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 5] TEXT (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113725' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113728' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113729' and concept/@csd='DCM']) &gt; 0)              and count(code[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 5] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 5] TEXT (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 6] CODE (113780,DCM,"Reference Point Definition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113725' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113728' and concept/@csd='DCM']) &gt; 0                   or count(num[concept/@cv='113729' and concept/@csd='DCM']) &gt; 0)              and count(text[concept/@cv='113780' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 6] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10007 AccumulatedTotalProjectionRadiographyDose/[Row 6] CODE (113780,DCM,&quot;Reference Point Definition&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Point Definition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113780'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10025'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113780' and concept/@csd = 'DCM']"/>	
	</xsl:template>
<xsl:template name="TID_10011">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10011</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10011 (CTRadiationDose)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_10011 (CTRadiationDose)</xsl:text>
<xsl:value-of select="$newline"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Radiation Dose Report'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113701'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113701' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 2] CODE (121058,DCM,"Procedure reported")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 2] CODE (121058,DCM,&quot;Procedure reported&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure reported'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="'Computed Tomography X-Ray'"/>
<xsl:with-param name="csdValue" select="'SRT'"/>
<xsl:with-param name="cvValue" select="'P5-08000'"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121058' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 2] CODE (121058,DCM,"Procedure reported")/[Row 3] CODE (G-C0E8,SRT,"Has Intent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 2] CODE (121058,DCM,&quot;Procedure reported&quot;)/[Row 3] CODE (G-C0E8,SRT,&quot;Has Intent&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Has Intent'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'3629'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E8' and concept/@csd = 'SRT']"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 5] DATETIME (113809,DCM,"Start of X-Ray Irradiation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 5] DATETIME (113809,DCM,&quot;Start of X-Ray Irradiation&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Start of X-Ray Irradiation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113809'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = '113809' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 6] DATETIME (113810,DCM,"End of X-Ray Irradiation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 6] DATETIME (113810,DCM,&quot;End of X-Ray Irradiation&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'End of X-Ray Irradiation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113810'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = '113810' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 7] CODE (113705,DCM,"Scope of Accumulation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 7] CODE (113705,DCM,&quot;Scope of Accumulation&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Scope of Accumulation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113705'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10000'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113705' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 7] CODE (113705,DCM,"Scope of Accumulation")/[Row 8] UIDREF CID 10001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 7] CODE (113705,DCM,&quot;Scope of Accumulation&quot;)/[Row 8] UIDREF CID 10001'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="'10001'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'uidref' and concept/@cv = '110180' and concept/@csd = 'DCM') or (name() = 'uidref' and concept/@cv = '112002' and concept/@csd = 'DCM') or (name() = 'uidref' and concept/@cv = '121126' and concept/@csd = 'DCM') or (name() = 'uidref' and concept/@cv = '113853' and concept/@csd = 'DCM')]"/>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10012</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10012</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_10012">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10013</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10013</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_10013">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 11] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 11] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,"X-Ray Radiation Dose Report")/[Row 12] CODE (113854,DCM,"Source of Dose Information")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10011 CTRadiationDose/[Row 1] CONTAINER (113701,DCM,&quot;X-Ray Radiation Dose Report&quot;)/[Row 12] CODE (113854,DCM,&quot;Source of Dose Information&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Source of Dose Information'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113854'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10021'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113854' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1020">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	<xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_10012">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10012</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10012 (CTAccumulatedDoseData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Accumulated Dose Data'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113811'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113811' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 2] NUM (113812,DCM,"Total Number of Irradiation Events")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 2] NUM (113812,DCM,&quot;Total Number of Irradiation Events&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total Number of Irradiation Events'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113812'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'events'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{events}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113812' and concept/@csd = 'DCM']"/>
			<xsl:if test="count(num[concept/@cv='113812' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113812' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Total Number of Irradiation Events is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 3] NUM (113813,DCM,"CT Dose Length Product Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 3] NUM (113813,DCM,&quot;CT Dose Length Product Total&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Dose Length Product Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113813'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113813' and concept/@csd = 'DCM']"/>
			<xsl:if test="count(num[concept/@cv='113813' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113813' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for CT Dose Length Product Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Effective Dose Total'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113814'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mSv'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mSv'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113814' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 5] TEXT (121406,DCM,"Reference Authority")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121406' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 5] TEXT (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 5] TEXT (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121406' and concept/@csd = 'DCM']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 6] CODE (121406,DCM,"Reference Authority")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(text[concept/@cv='121406' and concept/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 6] CODE (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 6] CODE (121406,DCM,&quot;Reference Authority&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reference Authority'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121406'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121406' and concept/@csd = 'DCM']"/> 
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 7] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 7] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10011'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 8] TEXT (113815,DCM,"Patient Model")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121406' and concept/@csd='DCM' and value/@cv='113800' and value/@csd='DCM']) &gt; 0                      or count(code[concept/@cv='121406' and concept/@csd='DCM' and value/@cv='113801' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 8] TEXT (113815,DCM,&quot;Patient Model&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Model'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113815'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 8] TEXT (113815,DCM,&quot;Patient Model&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Model'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113815'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113815' and concept/@csd = 'DCM']"/>	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 9] CONTAINER (113816,DCM,"Condition Effective Dose measured")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='121406' and concept/@csd='DCM' and value/@cv='113802' and value/@csd='DCM']) &gt; 0                      or count(code[concept/@cv='121406' and concept/@csd='DCM' and value/@cv='113803' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 9] CONTAINER (113816,DCM,&quot;Condition Effective Dose measured&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Condition Effective Dose measured'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113816'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 9] CONTAINER (113816,DCM,&quot;Condition Effective Dose measured&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Condition Effective Dose measured'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113816'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113816' and concept/@csd = 'DCM']">	
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 9] CONTAINER (113816,DCM,"Condition Effective Dose measured")/[Row 10] TEXT (113817,DCM,"Effective Dose Phantom Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 9] CONTAINER (113816,DCM,&quot;Condition Effective Dose measured&quot;)/[Row 10] TEXT (113817,DCM,&quot;Effective Dose Phantom Type&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Effective Dose Phantom Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113817'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113817' and concept/@csd = 'DCM']"/>
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 4] NUM (113814,DCM,"CT Effective Dose Total")/[Row 9] CONTAINER (113816,DCM,"Condition Effective Dose measured")/[Row 11] TEXT (113818,DCM,"Dosimeter Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 4] NUM (113814,DCM,&quot;CT Effective Dose Total&quot;)/[Row 9] CONTAINER (113816,DCM,&quot;Condition Effective Dose measured&quot;)/[Row 11] TEXT (113818,DCM,&quot;Dosimeter Type&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dosimeter Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113818'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113818' and concept/@csd = 'DCM']"/>
				</xsl:for-each>
			</xsl:for-each>
			<xsl:if test="count(num[concept/@cv='113814' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113814' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for CT Effective Dose Total is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,"CT Accumulated Dose Data")/[Row 12] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10012 CTAccumulatedDoseData/[Row 1] CONTAINER (113811,DCM,&quot;CT Accumulated Dose Data&quot;)/[Row 12] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1021">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_10013">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10013</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10013 (CTIrradiationEventData)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Acquisition'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113819'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113819' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 2] TEXT (125203,DCM,"Acquisition Protocol")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 2] TEXT (125203,DCM,&quot;Acquisition Protocol&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Protocol'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'125203'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '125203' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 3] CODE (123014,DCM,"Target Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 3] CODE (123014,DCM,&quot;Target Region&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Target Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123014'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4030'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '123014' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 4] CODE (113820,DCM,"CT Acquisition Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 4] CODE (113820,DCM,&quot;CT Acquisition Type&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Acquisition Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113820'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10013'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113820' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 4b] CODE (113961,DCM,"Reconstruction Algorithm")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 4b] CODE (113961,DCM,&quot;Reconstruction Algorithm&quot;)'"/>
<xsl:with-param name="row" select="'4b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reconstruction Algorithm'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113961'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10033'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113961' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 5] CODE (G-C32C,SRT,"Procedure Context")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 5] CODE (G-C32C,SRT,&quot;Procedure Context&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Context'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C32C'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10014'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C32C' and concept/@csd = 'SRT']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 6] UIDREF (113769,DCM,"Irradiation Event UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 6] UIDREF (113769,DCM,&quot;Irradiation Event UID&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Event UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113769'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '113769' and concept/@csd = 'DCM']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 6b] TEXT (113605,DCM,"Irradiation Event Label")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 6b] TEXT (113605,DCM,&quot;Irradiation Event Label&quot;)'"/>
<xsl:with-param name="row" select="'6b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Irradiation Event Label'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113605'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113605' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 6b] TEXT (113605,DCM,"Irradiation Event Label")/[Row 6c] CODE (113606,DCM,"Label Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 6b] TEXT (113605,DCM,&quot;Irradiation Event Label&quot;)/[Row 6c] CODE (113606,DCM,&quot;Label Type&quot;)'"/>
<xsl:with-param name="row" select="'6c'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Label Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113606'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113606' and concept/@csd = 'DCM']"/>	
			</xsl:for-each>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Acquisition Parameters'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113822'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113822' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 8] NUM (113824,DCM,"Exposure Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 8] NUM (113824,DCM,&quot;Exposure Time&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113824'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113824' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113824' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113824' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Exposure Time is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10014</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10014</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_10014">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 10] NUM (113826,DCM,"Nominal Single Collimation Width")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 10] NUM (113826,DCM,&quot;Nominal Single Collimation Width&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Nominal Single Collimation Width'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113826'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113826' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113826' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113826' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Nominal Single Collimation Width is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 11] NUM (113827,DCM,"Nominal Total Collimation Width")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 11] NUM (113827,DCM,&quot;Nominal Total Collimation Width&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Nominal Total Collimation Width'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113827'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113827' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113827' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113827' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Nominal Total Collimation Width is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 12] NUM (113828,DCM,"Pitch Factor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../code[concept/@cv='113820' and concept/@csd='DCM' and value/@cv='P5-08001' and value/@csd='SRT']) &gt; 0                      or count(../code[concept/@cv='113820' and concept/@csd='DCM' and value/@cv='113804' and value/@csd='DCM']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 12] NUM (113828,DCM,&quot;Pitch Factor&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pitch Factor'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113828'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'ratio'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{ratio}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 12] NUM (113828,DCM,&quot;Pitch Factor&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pitch Factor'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113828'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'ratio'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{ratio}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113828' and concept/@csd = 'DCM']"/>	
				<xsl:if test="count(num[concept/@cv='113828' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113828' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Pitch Factor is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 13] NUM (113823,DCM,"Number of X-Ray Sources")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 13] NUM (113823,DCM,&quot;Number of X-Ray Sources&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of X-Ray Sources'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113823'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'X-Ray sources'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{X-Ray sources}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113823' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113823' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113823' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Number of X-Ray Sources is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT X-Ray Source Parameters'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113831'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113831' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")/[Row 15] TEXT (113832,DCM,"Identification of the X-Ray Source")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 15] TEXT (113832,DCM,&quot;Identification of the X-Ray Source&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Identification of the X-Ray Source'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113832'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113832' and concept/@csd = 'DCM']"/>
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")/[Row 16] NUM (113733,DCM,"KVP")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 16] NUM (113733,DCM,&quot;KVP&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'KVP'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113733'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'kV'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'kV'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113733' and concept/@csd = 'DCM']"/>
					<xsl:if test="count(num[concept/@cv='113733' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113733' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for KVP is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")/[Row 17] NUM (113833,DCM,"Maximum X-Ray Tube Current")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 17] NUM (113833,DCM,&quot;Maximum X-Ray Tube Current&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Maximum X-Ray Tube Current'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113833'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mA'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mA'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113833' and concept/@csd = 'DCM']"/>
					<xsl:if test="count(num[concept/@cv='113833' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113833' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Maximum X-Ray Tube Current is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")/[Row 18] NUM (113734,DCM,"X-Ray Tube Current")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 18] NUM (113734,DCM,&quot;X-Ray Tube Current&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Tube Current'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113734'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mA'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mA'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113734' and concept/@csd = 'DCM']"/>
					<xsl:if test="count(num[concept/@cv='113734' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113734' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for X-Ray Tube Current is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")/[Row 19] NUM (113834,DCM,"Exposure Time per Rotation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(../../code[concept/@cv='113820' and concept/@csd='DCM' and value/@cv='113805' and value/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 19] NUM (113834,DCM,&quot;Exposure Time per Rotation&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure Time per Rotation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113834'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 19] NUM (113834,DCM,&quot;Exposure Time per Rotation&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposure Time per Rotation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113834'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113834' and concept/@csd = 'DCM']"/>	
					<xsl:if test="count(num[concept/@cv='113834' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113834' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Exposure Time per Rotation is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters")/[Row 20] NUM (113821,DCM,"X-Ray Filter Aluminum Equivalent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 7] CONTAINER (113822,DCM,&quot;CT Acquisition Parameters&quot;)/[Row 14] CONTAINER (113831,DCM,&quot;CT X-Ray Source Parameters&quot;)/[Row 20] NUM (113821,DCM,&quot;X-Ray Filter Aluminum Equivalent&quot;)'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Filter Aluminum Equivalent'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113821'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113821' and concept/@csd = 'DCM']"/>
					<xsl:if test="count(num[concept/@cv='113821' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113821' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 7] CONTAINER (113822,DCM,"CT Acquisition Parameters")/[Row 14] CONTAINER (113831,DCM,"CT X-Ray Source Parameters"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for X-Ray Filter Aluminum Equivalent is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				</xsl:for-each>
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113820' and concept/@csd='DCM' and value/@cv='113805' and value/@csd='DCM']) = 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113829'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113829'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113829' and concept/@csd = 'DCM']">	
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 22] NUM (113830,DCM,"Mean CTDIvol")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 22] NUM (113830,DCM,&quot;Mean CTDIvol&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Mean CTDIvol'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113830'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113830' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113830' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113830' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Mean CTDIvol is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 23] CODE (113835,DCM,"CTDIw Phantom Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 23] CODE (113835,DCM,&quot;CTDIw Phantom Type&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIw Phantom Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113835'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4052'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113835' and concept/@csd = 'DCM']"/>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 24] NUM (113836,DCM,"CTDIfreeair Calculation Factor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 24] NUM (113836,DCM,&quot;CTDIfreeair Calculation Factor&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIfreeair Calculation Factor'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113836'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy/mA.s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy/mA.s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113836' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113836' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113836' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for CTDIfreeair Calculation Factor is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 25] NUM (113837,DCM,"Mean CTDIfreeair")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 25] NUM (113837,DCM,&quot;Mean CTDIfreeair&quot;)'"/>
<xsl:with-param name="row" select="'25'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Mean CTDIfreeair'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113837'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113837' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113837' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113837' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Mean CTDIfreeair is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 26] NUM (113838,DCM,"DLP")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 26] NUM (113838,DCM,&quot;DLP&quot;)'"/>
<xsl:with-param name="row" select="'26'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113838'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113838' and concept/@csd = 'DCM']"/>
				<xsl:if test="count(num[concept/@cv='113838' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113838' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for DLP is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 27] NUM (113839,DCM,"Effective Dose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 27] NUM (113839,DCM,&quot;Effective Dose&quot;)'"/>
<xsl:with-param name="row" select="'27'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Effective Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113839'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mSv'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mSv'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113839' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 27] NUM (113839,DCM,"Effective Dose")/[Row 28] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 27] NUM (113839,DCM,&quot;Effective Dose&quot;)/[Row 28] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'28'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10011'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']">
						<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 27] NUM (113839,DCM,"Effective Dose")/[Row 28] CODE (G-C036,SRT,"Measurement Method")/[Row 29] NUM (113840,DCM,"Effective Dose Conversion Factor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(../value/@cv='113800' and ../value/@csd='DCM')                      or (../value/@cv='113802' and ../value/@csd='DCM')">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 27] NUM (113839,DCM,&quot;Effective Dose&quot;)/[Row 28] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 29] NUM (113840,DCM,&quot;Effective Dose Conversion Factor&quot;)'"/>
<xsl:with-param name="row" select="'29'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Effective Dose Conversion Factor'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113840'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mSv/mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mSv/mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 27] NUM (113839,DCM,&quot;Effective Dose&quot;)/[Row 28] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 29] NUM (113840,DCM,&quot;Effective Dose Conversion Factor&quot;)'"/>
<xsl:with-param name="row" select="'29'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Effective Dose Conversion Factor'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113840'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mSv/mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mSv/mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113840' and concept/@csd = 'DCM']"/>	
						<xsl:if test="count(num[concept/@cv='113840' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113840' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 27] NUM (113839,DCM,"Effective Dose")/[Row 28] CODE (G-C036,SRT,"Measurement Method"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Effective Dose Conversion Factor is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
					</xsl:for-each>
				</xsl:for-each>
				<xsl:if test="count(num[concept/@cv='113839' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113839' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Effective Dose is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 30] NUM (113930,DCM,"Size Specific Dose Estimation")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)'"/>
<xsl:with-param name="row" select="'30'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Size Specific Dose Estimation'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113930'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113930' and concept/@csd = 'DCM']">
					<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 30] NUM (113930,DCM,"Size Specific Dose Estimation")/[Row 31] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'31'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10023'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']">
						<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 30] NUM (113930,DCM,"Size Specific Dose Estimation")/[Row 31] CODE (G-C036,SRT,"Measurement Method")/[Row 32] NUM (113931,DCM,"Measured Lateral Dimension")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(../value/@cv='113934' and ../value/@csd='DCM')                      or (../value/@cv='113936' and ../value/@csd='DCM')">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 32] NUM (113931,DCM,&quot;Measured Lateral Dimension&quot;)'"/>
<xsl:with-param name="row" select="'32'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM  '"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measured Lateral Dimension'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113931'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 32] NUM (113931,DCM,&quot;Measured Lateral Dimension&quot;)'"/>
<xsl:with-param name="row" select="'32'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM  '"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measured Lateral Dimension'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113931'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113931' and concept/@csd = 'DCM']"/> 
						<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 30] NUM (113930,DCM,"Size Specific Dose Estimation")/[Row 31] CODE (G-C036,SRT,"Measurement Method")/[Row 33] NUM (113932,DCM,"Measured AP Dimension")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(../value/@cv='113935' and ../value/@csd='DCM')                      or (../value/@cv='113936' and ../value/@csd='DCM')">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 33] NUM (113932,DCM,&quot;Measured AP Dimension&quot;)'"/>
<xsl:with-param name="row" select="'33'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM  '"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measured AP Dimension'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113932'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 33] NUM (113932,DCM,&quot;Measured AP Dimension&quot;)'"/>
<xsl:with-param name="row" select="'33'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM  '"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measured AP Dimension'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113932'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113932' and concept/@csd = 'DCM']"/> 
						<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 21] CONTAINER (113829,DCM,"CT Dose")/[Row 30] NUM (113930,DCM,"Size Specific Dose Estimation")/[Row 31] CODE (G-C036,SRT,"Measurement Method")/[Row 34] NUM (113933,DCM,"Derived Effective Diameter")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(../value/@cv='113934' and ../value/@csd='DCM')                      or (../value/@cv='113935' and ../value/@csd='DCM')                      or (../value/@cv='113936' and ../value/@csd='DCM')                      or (../value/@cv='113937' and ../value/@csd='DCM')">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 34] NUM (113933,DCM,&quot;Derived Effective Diameter&quot;)'"/>
<xsl:with-param name="row" select="'34'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM  '"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derived Effective Diameter'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113933'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 21] CONTAINER (113829,DCM,&quot;CT Dose&quot;)/[Row 30] NUM (113930,DCM,&quot;Size Specific Dose Estimation&quot;)/[Row 31] CODE (G-C036,SRT,&quot;Measurement Method&quot;)/[Row 34] NUM (113933,DCM,&quot;Derived Effective Diameter&quot;)'"/>
<xsl:with-param name="row" select="'34'"/>
<xsl:with-param name="relationship" select="'INFERRED FROM  '"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derived Effective Diameter'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113933'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'5'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113933' and concept/@csd = 'DCM']"/> 
					</xsl:for-each>
				</xsl:for-each>

				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_10015</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_10015</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_10015">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>	
			</xsl:for-each>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 36] TEXT (113842,DCM,"X-Ray Modulation Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 36] TEXT (113842,DCM,&quot;X-Ray Modulation Type&quot;)'"/>
<xsl:with-param name="row" select="'36'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'X-Ray Modulation Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113842'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113842' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,"CT Acquisition")/[Row 37] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10013 CTIrradiationEventData/[Row 1] CONTAINER (113819,DCM,&quot;CT Acquisition&quot;)/[Row 37] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'37'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1020">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1021">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_10014">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10014</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10014 (ScanningLength)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 1] NUM (113825,DCM,"Scanning Length")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 1] NUM (113825,DCM,&quot;Scanning Length&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Scanning Length'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113825'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113825' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113825' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113825' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Scanning Length is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 2] NUM (113893,DCM,"Length of Reconstructable Volume")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 2] NUM (113893,DCM,&quot;Length of Reconstructable Volume&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Length of Reconstructable Volume'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113893'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113893' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113893' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113893' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Length of Reconstructable Volume, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 3] NUM (113899,DCM,"Exposed Range")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 3] NUM (113899,DCM,&quot;Exposed Range&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Exposed Range'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113899'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113899' and concept/@csd = 'DCM']"/> 
		<xsl:if test="count(num[concept/@cv='113899' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113899' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Exposed Range, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 4] NUM (113895,DCM,"Top Z Location of Reconstructable Volume")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 4] NUM (113895,DCM,&quot;Top Z Location of Reconstructable Volume&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Top Z Location of Reconstructable Volume'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113895'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113895' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113895' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113895' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Top Z Location of Reconstructable Volume, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 5] NUM (113896,DCM,"Bottom Z Location of Reconstructable Volume")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 5] NUM (113896,DCM,&quot;Bottom Z Location of Reconstructable Volume&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Bottom Z Location of Reconstructable Volume'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113896'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113896' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113896' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113896' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Bottom Z Location of Reconstructable Volume, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 6] NUM (113897,DCM,"Top Z Location of Scanning Length")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 6] NUM (113897,DCM,&quot;Top Z Location of Scanning Length&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Top Z Location of Scanning Length'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113897'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113897' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113897' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113897' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Top Z Location of Scanning Length, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 7] NUM (113898,DCM,"Bottom Z Location of Scanning Length")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 7] NUM (113898,DCM,&quot;Bottom Z Location of Scanning Length&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Bottom Z Location of Scanning Length'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113898'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113898' and concept/@csd = 'DCM']"/>
		<xsl:if test="count(num[concept/@cv='113898' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113898' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10014 ScanningLength: </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Bottom Z Location of Scanning Length, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10014 ScanningLength/[Row 8] UIDREF (112227,DCM,"Frame of Reference UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113895' and concept/@csd='DCM'])&gt;0              or count(num[concept/@cv='113896' and concept/@csd='DCM'])&gt;0              or count(num[concept/@cv='113897' and concept/@csd='DCM'])&gt;0              or count(num[concept/@cv='113898' and concept/@csd='DCM'])&gt;0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 8] UIDREF (112227,DCM,&quot;Frame of Reference UID&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Frame of Reference UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112227'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10014 ScanningLength/[Row 8] UIDREF (112227,DCM,&quot;Frame of Reference UID&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Frame of Reference UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112227'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112227' and concept/@csd = 'DCM']"/> 

	</xsl:template>
<xsl:template name="TID_10015">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">10015</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_10015 (CTDoseCheckDetails)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Check Alert Details'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113900'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113900' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 2] CODE (113901,DCM,"DLP Alert Value Configured")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 2] CODE (113901,DCM,&quot;DLP Alert Value Configured&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Alert Value Configured'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113901'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113901' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 3] CODE (113902,DCM,"CTDIvol Alert Value Configured")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 3] CODE (113902,DCM,&quot;CTDIvol Alert Value Configured&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Alert Value Configured'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113902'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113902' and concept/@csd = 'DCM']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 4] NUM (113903,DCM,"DLP Alert Value")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113901' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 4] NUM (113903,DCM,&quot;DLP Alert Value&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Alert Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113903'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 4] NUM (113903,DCM,&quot;DLP Alert Value&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Alert Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113903'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113903' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113903' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113903' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for DLP Alert Value is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 5] NUM (113904,DCM,"CTDIvol Alert Value")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113902' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 5] NUM (113904,DCM,&quot;CTDIvol Alert Value&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Alert Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113904'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 5] NUM (113904,DCM,&quot;CTDIvol Alert Value&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Alert Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113904'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113904' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113904' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113904' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for CTDIvol Alert Value is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 6] NUM (113905,DCM,"Accumulated DLP Forward Estimate")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113905' and concept/@csd='DCM'])&gt;0                   and count(num[concept/@cv='113903' and concept/@csd='DCM'])&gt;0                   and number(num[concept/@cv='113905' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113903' and concept/@csd='DCM']/value)">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 6] NUM (113905,DCM,&quot;Accumulated DLP Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accumulated DLP Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113905'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 6] NUM (113905,DCM,&quot;Accumulated DLP Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accumulated DLP Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113905'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113905' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113905' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113905' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Accumulated DLP Forward Estimate is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 7] NUM (113906,DCM,"Accumulated CTDIvol Forward Estimate")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113906' and concept/@csd='DCM'])&gt;0                   and count(num[concept/@cv='113904' and concept/@csd='DCM'])&gt;0                   and number(num[concept/@cv='113906' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113904' and concept/@csd='DCM']/value)">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 7] NUM (113906,DCM,&quot;Accumulated CTDIvol Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accumulated CTDIvol Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113906'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 7] NUM (113906,DCM,&quot;Accumulated CTDIvol Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Accumulated CTDIvol Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113906'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113906' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113906' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113906' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for Accumulated CTDIvol Forward Estimate is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,"Dose Check Alert Details")/[Row 8] TEXT (113907,DCM,"Reason for Proceeding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113905' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113903' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113905' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113903' and concept/@csd='DCM']/value))                or     (count(num[concept/@cv='113906' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113904' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113906' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113904' and concept/@csd='DCM']/value))">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 8] TEXT (113907,DCM,&quot;Reason for Proceeding&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Proceeding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 1] CONTAINER (113900,DCM,&quot;Dose Check Alert Details&quot;)/[Row 8] TEXT (113907,DCM,&quot;Reason for Proceeding&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Proceeding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113907' and concept/@csd = 'DCM']"/>	

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113905' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113903' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113905' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113903' and concept/@csd='DCM']/value))                or     (count(num[concept/@cv='113906' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113904' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113906' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113904' and concept/@csd='DCM']/value))">
<xsl:call-template name="TID_1020">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'MC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		</xsl:for-each>

		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Dose Check Notification Details'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113908'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '113908' and concept/@csd = 'DCM']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 11] CODE (113909,DCM,"DLP Notification Value Configured")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 11] CODE (113909,DCM,&quot;DLP Notification Value Configured&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Notification Value Configured'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113909'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113909' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 12] CODE (113910,DCM,"CTDIvol Notification Value Configured")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 12] CODE (113910,DCM,&quot;CTDIvol Notification Value Configured&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Notification Value Configured'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113910'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113910' and concept/@csd = 'DCM']"/>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 13] NUM (113911,DCM,"DLP Notification Value")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113909' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 13] NUM (113911,DCM,&quot;DLP Notification Value&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Notification Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113911'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 13] NUM (113911,DCM,&quot;DLP Notification Value&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Notification Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113911'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113911' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113911' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113911' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for DLP Notification Value is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 14] NUM (113912,DCM,"CTDIvol Notification Value")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(code[concept/@cv='113910' and concept/@csd='DCM' and value/@cv='R-0038D' and value/@csd='SRT']) &gt; 0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 14] NUM (113912,DCM,&quot;CTDIvol Notification Value&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Notification Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113912'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 14] NUM (113912,DCM,&quot;CTDIvol Notification Value&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Notification Value'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113912'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113912' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113912' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113912' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for CTDIvol Notification Value is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 15] NUM (113913,DCM,"DLP Forward Estimate")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113913' and concept/@csd='DCM'])&gt;0                   and count(num[concept/@cv='113911' and concept/@csd='DCM'])&gt;0                   and number(num[concept/@cv='113913' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113911' and concept/@csd='DCM']/value)">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 15] NUM (113913,DCM,&quot;DLP Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113913'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 15] NUM (113913,DCM,&quot;DLP Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'DLP Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113913'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy.cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy.cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113913' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113913' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113913' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for DLP Forward Estimate is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 16] NUM (113914,DCM,"CTDIvol Forward Estimate")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(num[concept/@cv='113914' and concept/@csd='DCM'])&gt;0                   and count(num[concept/@cv='113912' and concept/@csd='DCM'])&gt;0                   and number(num[concept/@cv='113914' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113912' and concept/@csd='DCM']/value)">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 16] NUM (113914,DCM,&quot;CTDIvol Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113914'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 16] NUM (113914,DCM,&quot;CTDIvol Forward Estimate&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CTDIvol Forward Estimate'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113914'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mGy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mGy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '113914' and concept/@csd = 'DCM']"/>	
			<xsl:if test="count(num[concept/@cv='113914' and concept/@csd='DCM'])&gt;0 and number(num[concept/@cv='113914' and concept/@csd='DCM']/value)=0">
<xsl:text>Warning: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details"): </xsl:text>
<xsl:call-template name="buildFullPathInInstanceToCurrentNode"/>
<xsl:text>: value of 0 for CTDIvol Forward Estimate is not illegal, but is unlikely to be correct</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,"Dose Check Notification Details")/[Row 17] TEXT (113907,DCM,"Reason for Proceeding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113913' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113911' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113913' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113911' and concept/@csd='DCM']/value))                or     (count(num[concept/@cv='113914' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113912' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113914' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113912' and concept/@csd='DCM']/value))">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 17] TEXT (113907,DCM,&quot;Reason for Proceeding&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Proceeding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 10015 CTDoseCheckDetails/[Row 10] CONTAINER (113908,DCM,&quot;Dose Check Notification Details&quot;)/[Row 17] TEXT (113907,DCM,&quot;Reason for Proceeding&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reason for Proceeding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'UC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'F'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '113907' and concept/@csd = 'DCM']"/>	

			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1020</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="(count(num[concept/@cv='113913' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113911' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113913' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113911' and concept/@csd='DCM']/value))                or     (count(num[concept/@cv='113914' and concept/@csd='DCM'])&gt;0                    and count(num[concept/@cv='113911' and concept/@csd='DCM'])&gt;0                       and number(num[concept/@cv='113914' and concept/@csd='DCM']/value) &gt; number(num[concept/@cv='113912' and concept/@csd='DCM']/value))">
<xsl:call-template name="TID_1020">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="'F'"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if>
		</xsl:for-each>
	</xsl:template>
<xsl:template name="TID_1500">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1500</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1500 (MeasurementReport)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_1500 (MeasurementReport)</xsl:text>
<xsl:value-of select="$newline"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="'7021'"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[(name() = 'container' and concept/@cv = '126000' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '126001' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '126002' and concept/@csd = 'DCM') or (name() = 'container' and concept/@cv = '126003' and concept/@csd = 'DCM')]">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1001</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1001">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 4] CODE (121058,DCM,"Procedure reported")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 4] CODE (121058,DCM,&quot;Procedure reported&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure reported'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121058'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'100'"/>
<xsl:with-param name="valueSetBDE" select="'B'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121058' and concept/@csd = 'DCM']"/>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1600</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1600</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1600">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 6] CONTAINER (126010,DCM,"Imaging Measurements")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(container[concept/@cv='126011' and concept/@csd='DCM'])=0                  and count(container[concept/@cv='C0034375' and concept/@csd='UMLS'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 6] CONTAINER (126010,DCM,&quot;Imaging Measurements&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Imaging Measurements'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 6] CONTAINER (126010,DCM,&quot;Imaging Measurements&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Imaging Measurements'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '126010' and concept/@csd = 'DCM']">
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1410</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1410</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(container[concept/@cv='125007' and concept/@csd='DCM']/image   [concept/@cv='111030' and concept/@csd='DCM']) = 1              or count(container[concept/@cv='125007' and concept/@csd='DCM']/image   [concept/@cv='121214' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_1410">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1411</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1411</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(container[concept/@cv='125007' and concept/@csd='DCM']/image   [concept/@cv='111030' and concept/@csd='DCM']) &gt; 1              or count(container[concept/@cv='125007' and concept/@csd='DCM']/image   [concept/@cv='121191' and concept/@csd='DCM']) &gt; 0              or count(container[concept/@cv='125007' and concept/@csd='DCM']/scoord3d[concept/@cv='121233' and concept/@csd='DCM']) &gt; 0">
<xsl:call-template name="TID_1411">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'UC'"/>
<xsl:with-param name="templateConditionSatisfied" select="'T'"/>
<xsl:with-param name="templateMBPO" select="''"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise/>
</xsl:choose>
</xsl:if> 
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1501</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1501</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1501">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		</xsl:for-each>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 10] CONTAINER (126011,DCM,"Derived Imaging Measurements")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(container[concept/@cv='126010' and concept/@csd='DCM'])=0                  and count(container[concept/@cv='C0034375' and concept/@csd='UMLS'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 10] CONTAINER (126011,DCM,&quot;Derived Imaging Measurements&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derived Imaging Measurements'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 10] CONTAINER (126011,DCM,&quot;Derived Imaging Measurements&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Derived Imaging Measurements'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '126011' and concept/@csd = 'DCM']">
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1420</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1420</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1420">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    		</xsl:for-each>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,"Qualitative Evaluations")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:choose>
<xsl:when test="count(container[concept/@cv='126010' and concept/@csd='DCM'])=0                  and count(container[concept/@cv='126011' and concept/@csd='DCM'])=0">
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,&quot;Qualitative Evaluations&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Qualitative Evaluations'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C0034375'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'T'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,&quot;Qualitative Evaluations&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Qualitative Evaluations'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C0034375'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'MC'"/>
<xsl:with-param name="conditionSatisfied" select="'F'"/>
<xsl:with-param name="mbpo" select="'T'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
</xsl:otherwise>
</xsl:choose>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'C0034375' and concept/@csd = 'UMLS']">
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,"Qualitative Evaluations")/[Row 13] CODE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,&quot;Qualitative Evaluations&quot;)/[Row 13] CODE *'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code']"/>
    			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,"Qualitative Evaluations")/[Row 14] TEXT *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1500 MeasurementReport/[Row 1] CONTAINER CID 7021/[Row 12] CONTAINER (C0034375,UMLS,&quot;Qualitative Evaluations&quot;)/[Row 14] TEXT *'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text']"/>
    		</xsl:for-each>
</xsl:for-each>
    <xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_1501">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1501</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1501 (MeasurementGroup)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Group'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'125007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '125007' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 1b] TEXT (C67447,NCIt,"Activity Session")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 1b] TEXT (C67447,NCIt,&quot;Activity Session&quot;)'"/>
<xsl:with-param name="row" select="'1b'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Activity Session'"/>
<xsl:with-param name="csdConceptName" select="'NCIt'"/>
<xsl:with-param name="cvConceptName" select="'C67447'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'C67447' and concept/@csd = 'NCIt']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 2] TEXT (112039,DCM,"Tracking Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 2] TEXT (112039,DCM,&quot;Tracking Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112039'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '112039' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 3] UIDREF (112040,DCM,"Tracking Unique Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 3] UIDREF (112040,DCM,&quot;Tracking Unique Identifier&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tracking Unique Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112040'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112040' and concept/@csd = 'DCM']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 3b] CODE (121071,DCM,"Finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 3b] CODE (121071,DCM,&quot;Finding&quot;)'"/>
<xsl:with-param name="row" select="'3b'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121071' and concept/@csd = 'DCM']"/>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1502</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1502</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1502">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 5] CODE (G-C036,SRT,"Measurement Method")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 5] CODE (G-C036,SRT,&quot;Measurement Method&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Measurement Method'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C036'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C036' and concept/@csd = 'SRT']"/>
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 6] CODE (G-C0E3,SRT,"Finding Site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 6] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Finding Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C0E3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C0E3' and concept/@csd = 'SRT']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 6] CODE (G-C0E3,SRT,"Finding Site")/[Row 7] CODE (G-C171,SRT,"Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 6] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 7] CODE (G-C171,SRT,&quot;Laterality&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Laterality'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C171'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'244'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C171' and concept/@csd = 'SRT']"/>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 6] CODE (G-C0E3,SRT,"Finding Site")/[Row 8] CODE (G-A1F8,SRT,"Topographical modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 6] CODE (G-C0E3,SRT,&quot;Finding Site&quot;)/[Row 8] CODE (G-A1F8,SRT,&quot;Topographical modifier&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Topographical modifier'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-A1F8'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-A1F8' and concept/@csd = 'SRT']"/>
			</xsl:for-each>
    		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,"Measurement Group")/[Row 9] COMPOSITE (126100,DCM,"Real World Value Map used for measurement")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1501 MeasurementGroup/[Row 1] CONTAINER (125007,DCM,&quot;Measurement Group&quot;)/[Row 9] COMPOSITE (126100,DCM,&quot;Real World Value Map used for measurement&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'composite'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Real World Value Map used for measurement'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'composite' and concept/@cv = '126100' and concept/@csd = 'DCM']"/>	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_300</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_300</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_300">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
				 
				 
		</xsl:for-each>
    </xsl:template>
<xsl:template name="TID_1502">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1502</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1502 (TimePointContext)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1502 TimePointContext/[Row 1] TEXT (126070,DCM,"Subject Time Point Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1502 TimePointContext/[Row 1] TEXT (126070,DCM,&quot;Subject Time Point Identifier&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Time Point Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126070'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '126070' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1502 TimePointContext/[Row 2] TEXT (126071,DCM,"Protocol Time Point Identifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1502 TimePointContext/[Row 2] TEXT (126071,DCM,&quot;Protocol Time Point Identifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Protocol Time Point Identifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126071'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '126071' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1502 TimePointContext/[Row 3] TEXT (C2348792,UMLS,"Time Point")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1502 TimePointContext/[Row 3] TEXT (C2348792,UMLS,&quot;Time Point&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C2348792'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'C2348792' and concept/@csd = 'UMLS']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1502 TimePointContext/[Row 4] CODE (126072,DCM,"Time Point Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1502 TimePointContext/[Row 4] CODE (126072,DCM,&quot;Time Point Type&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126072'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '126072' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1502 TimePointContext/[Row 5] NUM (126073,DCM,"Time Point Order")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1502 TimePointContext/[Row 5] NUM (126073,DCM,&quot;Time Point Order&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS OBS CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Time Point Order'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126073'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '126073' and concept/@csd = 'DCM']"/>
    </xsl:template>
<xsl:template name="TID_1600">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1600</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1600 (ImageLibrary)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1600 ImageLibrary/[Row 1] CONTAINER (111028,DCM,"Image Library")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1600 ImageLibrary/[Row 1] CONTAINER (111028,DCM,&quot;Image Library&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Library'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111028'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111028' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1600 ImageLibrary/[Row 1] CONTAINER (111028,DCM,"Image Library")/[Row 2] CONTAINER (126200,DCM,"Image Library Group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1600 ImageLibrary/[Row 1] CONTAINER (111028,DCM,&quot;Image Library&quot;)/[Row 2] CONTAINER (126200,DCM,&quot;Image Library Group&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Library Group'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126200'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '126200' and concept/@csd = 'DCM']">
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1602</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1602</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1602">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
				<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1601</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1601</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1601">
<xsl:with-param name="templatevmmin" select="''"/>
<xsl:with-param name="templatevmmax" select="''"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>	
			</xsl:for-each>
		</xsl:for-each>
    </xsl:template>
<xsl:template name="TID_1601">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1601</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1601 (ImageLibraryEntry)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1601 ImageLibraryEntry/[Row 1] IMAGE *</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1601 ImageLibraryEntry/[Row 1] IMAGE *'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'image'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="''"/>
<xsl:with-param name="csdConceptName" select="''"/>
<xsl:with-param name="cvConceptName" select="''"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1-n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'image']">	
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1602</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1602</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1602">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'n'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		</xsl:for-each>
    </xsl:template>
<xsl:template name="TID_1602">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1602</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1602 (ImageLibraryEntryDescriptors)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 1] CODE (121139,DCM,"Modality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 1] CODE (121139,DCM,&quot;Modality&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Modality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121139'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'29'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121139' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 2] CODE (123014,DCM,"Target Region")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 2] CODE (123014,DCM,&quot;Target Region&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Target Region'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123014'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4031'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '123014' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 3] CODE (111027,DCM,"Image Laterality")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 3] CODE (111027,DCM,&quot;Image Laterality&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Laterality'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111027'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111027' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 4] DATE (111060,DCM,"Study Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 4] DATE (111060,DCM,&quot;Study Date&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111060'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111060' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 5] TIME (111061,DCM,"Study Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 5] TIME (111061,DCM,&quot;Study Time&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Study Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111061'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111061' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 6] DATE (111018,DCM,"Content Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 6] DATE (111018,DCM,&quot;Content Date&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Content Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111018'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '111018' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 7] TIME (111019,DCM,"Content Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 7] TIME (111019,DCM,&quot;Content Time&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Content Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111019'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '111019' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 8] DATE (126201,DCM,"Acquisition Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 8] DATE (126201,DCM,&quot;Acquisition Date&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126201'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '126201' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 9] TIME (126202,DCM,"Acquisition Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 9] TIME (126202,DCM,&quot;Acquisition Time&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Acquisition Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126202'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '126202' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 10] UIDREF (112227,DCM,"Frame of Reference UID")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 10] UIDREF (112227,DCM,&quot;Frame of Reference UID&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'uidref'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Frame of Reference UID'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112227'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'uidref' and concept/@cv = '112227' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 11] NUM (110910,DCM,"Pixel Data Rows")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 11] NUM (110910,DCM,&quot;Pixel Data Rows&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Data Rows'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110910'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pixels'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pixels}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110910' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1602 ImageLibraryEntryDescriptors/[Row 12] NUM (110911,DCM,"Pixel Data Columns")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1602 ImageLibraryEntryDescriptors/[Row 12] NUM (110911,DCM,&quot;Pixel Data Columns&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pixel Data Columns'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110911'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'pixels'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{pixels}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110911' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1603</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1603</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1603">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1604</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1604</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1604">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1605</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1605</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1605">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1606</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1606</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1606">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1607</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1607</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1607">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
    </xsl:template>
<xsl:template name="TID_1603">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1603</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1603 (ImageLibraryEntryDescriptorsforProjectionRadiography)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 1] CODE (111031,DCM,"Image View")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 1] CODE (111031,DCM,&quot;Image View&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111031' and concept/@csd = 'DCM']">
			<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 1] CODE (111031,DCM,"Image View")/[Row 2] CODE (111032,DCM,"Image View Modifier")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 1] CODE (111031,DCM,&quot;Image View&quot;)/[Row 2] CODE (111032,DCM,&quot;Image View Modifier&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image View Modifier'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111032'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111032' and concept/@csd = 'DCM']"/>
		</xsl:for-each>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 3] TEXT (111044,DCM,"Patient Orientation Row")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 3] TEXT (111044,DCM,&quot;Patient Orientation Row&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Row'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111044'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111044' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 4] TEXT (111043,DCM,"Patient Orientation Column")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 4] TEXT (111043,DCM,&quot;Patient Orientation Column&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Orientation Column'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111043'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '111043' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 5] NUM (111026,DCM,"Horizontal Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 5] NUM (111026,DCM,&quot;Horizontal Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Horizontal Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111026'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111026' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 6] NUM (111066,DCM,"Vertical Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 6] NUM (111066,DCM,&quot;Vertical Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Vertical Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111066'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111066' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 7] NUM (112011,DCM,"Positioner Primary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 7] NUM (112011,DCM,&quot;Positioner Primary Angle&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Primary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112011' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 8] NUM (112012,DCM,"Positioner Secondary Angle")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1603 ImageLibraryEntryDescriptorsforProjectionRadiography/[Row 8] NUM (112012,DCM,&quot;Positioner Secondary Angle&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Positioner Secondary Angle'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112012' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1604">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1604</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1604 (ImageLibraryEntryDescriptorsforCrossSectionalModalities)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 1] NUM (111026,DCM,"Horizontal Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 1] NUM (111026,DCM,&quot;Horizontal Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Horizontal Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111026'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111026' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 2] NUM (111066,DCM,"Vertical Pixel Spacing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 2] NUM (111066,DCM,&quot;Vertical Pixel Spacing&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Vertical Pixel Spacing'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111066'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111066' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 3] NUM (112226,DCM,"Spacing between slices")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 3] NUM (112226,DCM,&quot;Spacing between slices&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Spacing between slices'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112226'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112226' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 4] NUM (112225,DCM,"Slice Thickness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 4] NUM (112225,DCM,&quot;Slice Thickness&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Slice Thickness'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'112225'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '112225' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 5] NUM (110901,DCM,"Image Position (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 5] NUM (110901,DCM,&quot;Image Position (Patient&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110901'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110901' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 6] NUM (110902,DCM,"Image Position (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 6] NUM (110902,DCM,&quot;Image Position (Patient&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110902'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110902' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 7] NUM (110903,DCM,"Image Position (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 7] NUM (110903,DCM,&quot;Image Position (Patient&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Position (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110903'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'millimeter'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110903' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 8] NUM (110904,DCM,"Image Orientation (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 8] NUM (110904,DCM,&quot;Image Orientation (Patient&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110904'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110904' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 9] NUM (110905,DCM,"Image Orientation (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 9] NUM (110905,DCM,&quot;Image Orientation (Patient&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110905'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110905' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 10] NUM (110906,DCM,"Image Orientation (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 10] NUM (110906,DCM,&quot;Image Orientation (Patient&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110906'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110906' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 11] NUM (110907,DCM,"Image Orientation (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 11] NUM (110907,DCM,&quot;Image Orientation (Patient&quot;)'"/>
<xsl:with-param name="row" select="'11'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110907'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110907' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 12] NUM (110908,DCM,"Image Orientation (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 12] NUM (110908,DCM,&quot;Image Orientation (Patient&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110908'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110908' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 13] NUM (110909,DCM,"Image Orientation (Patient")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1604 ImageLibraryEntryDescriptorsforCrossSectionalModalities/[Row 13] NUM (110909,DCM,&quot;Image Orientation (Patient&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Image Orientation (Patient'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110909'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'{-1:1}'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{-1:1}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '110909' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1605">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1605</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1605 (ImageLibraryEntryDescriptorsforCT)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1605 ImageLibraryEntryDescriptorsforCT/[Row 1] CODE (113820,DCM,"CT Acquisition Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1605 ImageLibraryEntryDescriptorsforCT/[Row 1] CODE (113820,DCM,&quot;CT Acquisition Type&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'CT Acquisition Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113820'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10013'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113820' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1605 ImageLibraryEntryDescriptorsforCT/[Row 2] CODE (113961,DCM,"Reconstruction Algorithm")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1605 ImageLibraryEntryDescriptorsforCT/[Row 2] CODE (113961,DCM,&quot;Reconstruction Algorithm&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Reconstruction Algorithm'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'113961'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'10033'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '113961' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1606">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1606</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1606 (ImageLibraryEntryDescriptorsforMR)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1606 ImageLibraryEntryDescriptorsforMR/[Row 1] TEXT (110909,DCM,"Pulse Sequence Name")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1606 ImageLibraryEntryDescriptorsforMR/[Row 1] TEXT (110909,DCM,&quot;Pulse Sequence Name&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pulse Sequence Name'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'110909'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '110909' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_1607">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">1607</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_1607 (ImageLibraryEntryDescriptorsforPET)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 1] CODE (C-10072,SRT,"Radionuclide")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 1] CODE (C-10072,SRT,&quot;Radionuclide&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radionuclide'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'C-10072'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4020'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'C-10072' and concept/@csd = 'SRT']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 2] CODE (F-61FDB,SRT,"Radiopharmaceutical agent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 2] CODE (F-61FDB,SRT,&quot;Radiopharmaceutical agent&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiopharmaceutical agent'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-61FDB'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'4021'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-61FDB' and concept/@csd = 'SRT']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 3] NUM (R-42806,SRT,"Half-life of radiopharmaceutical")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 3] NUM (R-42806,SRT,&quot;Half-life of radiopharmaceutical&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Half-life of radiopharmaceutical'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-42806'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'s'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'R-42806' and concept/@csd = 'SRT']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 4] DATETIME (123003,DCM,"Radiopharmaceutical Start Date Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 4] DATETIME (123003,DCM,&quot;Radiopharmaceutical Start Date Time&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiopharmaceutical Start Date Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123003'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = '123003' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 4] DATETIME (123004,DCM,"Radiopharmaceutical Stop Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 4] DATETIME (123004,DCM,&quot;Radiopharmaceutical Stop Time&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'datetime'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiopharmaceutical Stop Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123004'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'datetime' and concept/@cv = '123004' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 5] NUM (123005,DCM,"Radiopharmaceutical Volume")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 5] NUM (123005,DCM,&quot;Radiopharmaceutical Volume&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiopharmaceutical Volume'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123005'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'cm3'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'cm3'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '123005' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 6] NUM (123006,DCM,"Radionuclide Total Dose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 6] NUM (123006,DCM,&quot;Radionuclide Total Dose&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radionuclide Total Dose'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123006'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Bq'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Bq'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '123006' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 7] NUM (123007,DCM,"Radiopharmaceutical Specific Activity")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 7] NUM (123007,DCM,&quot;Radiopharmaceutical Specific Activity&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiopharmaceutical Specific Activity'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123007'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Bq/mol'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Bq/mol'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '123007' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 8] CODE (G-C340,SRT,"Route of Administration")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 8] CODE (G-C340,SRT,&quot;Route of Administration&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Route of Administration'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-C340'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'11'"/>
<xsl:with-param name="valueSetBDE" select="'B'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-C340' and concept/@csd = 'SRT']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 9] NUM (123009,DCM,"Radionuclide Syringe Counts")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 9] NUM (123009,DCM,&quot;Radionuclide Syringe Counts&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radionuclide Syringe Counts'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123009'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="'{counts}/s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '123009' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 10] NUM (123010,DCM,"Radionuclide Residual Syringe Counts")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 10] NUM (123010,DCM,&quot;Radionuclide Residual Syringe Counts&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radionuclide Residual Syringe Counts'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'123010'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="'{counts}/s'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '123010' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 10] NUM (126203,DCM,"PET Radionuclide Incubation Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 10] NUM (126203,DCM,&quot;PET Radionuclide Incubation Time&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'PET Radionuclide Incubation Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'126203'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'min'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'min'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '126203' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 12] NUM (14749-6,LN,"Glucose")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 12] NUM (14749-6,LN,&quot;Glucose&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Glucose'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'14749-6'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'mmol/l'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'mmol/l'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '14749-6' and concept/@csd = 'LN']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 13] DATE (109081,DCM,"Glucose Measurement Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 13] DATE (109081,DCM,&quot;Glucose Measurement Date&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Glucose Measurement Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'109081'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '109081' and concept/@csd = 'DCM']"/>
		<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 14] TIME (109082,DCM,"Glucose Measurement Time")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template 1607 ImageLibraryEntryDescriptorsforPET/[Row 14] TIME (109082,DCM,&quot;Glucose Measurement Time&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'HAS ACQ CONTEXT'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'time'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Glucose Measurement Time'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'109082'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'time' and concept/@cv = '109082' and concept/@csd = 'DCM']"/>
	</xsl:template>
<xsl:template name="TID_QIICR_2000">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2000</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2000 (MeasurementReport)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:text>Found Root Template TID_QIICR_2000 (MeasurementReport)</xsl:text>
<xsl:value-of select="$newline"/>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Summary Clinical Document'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-42BAB'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'R-42BAB' and concept/@csd = 'SRT']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_1204</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_1204">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Characteristics'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121118'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '121118' and concept/@csd = 'DCM']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")/[Row 4] DATE (121031,DCM,"Subject Birth Date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)/[Row 4] DATE (121031,DCM,&quot;Subject Birth Date&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Birth Date'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '121031' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")/[Row 5] CODE (121032,DCM,"Subject Sex")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)/[Row 5] CODE (121032,DCM,&quot;Subject Sex&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Subject Sex'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121032'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7455'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '121032' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")/[Row 6] NUM (8302-2,LN,"Patient Height")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)/[Row 6] NUM (8302-2,LN,&quot;Patient Height&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Height'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'8302-2'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'cm'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'cm'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '8302-2' and concept/@csd = 'LN']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")/[Row 7] NUM (29463-7,LN,"Patient Weight")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)/[Row 7] NUM (29463-7,LN,&quot;Patient Weight&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Patient Weight'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'29463-7'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'kg'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'kg'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '29463-7' and concept/@csd = 'LN']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")/[Row 8] CODE (S-0004D,SRT,"Racial group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)/[Row 8] CODE (S-0004D,SRT,&quot;Racial group&quot;)'"/>
<xsl:with-param name="row" select="'8'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Racial group'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'S-0004D'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2001'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'S-0004D' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 3] CONTAINER (121118,DCM,"Patient Characteristics")/[Row 9] CODE (S-00045,SRT,"Hispanic")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 3] CONTAINER (121118,DCM,&quot;Patient Characteristics&quot;)/[Row 9] CODE (S-00045,SRT,&quot;Hispanic&quot;)'"/>
<xsl:with-param name="row" select="'9'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Hispanic'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'S-00045'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'S-00045' and concept/@csd = 'SRT']"/>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 10] CONTAINER (11450-4,LN,"Problem List")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 10] CONTAINER (11450-4,LN,&quot;Problem List&quot;)'"/>
<xsl:with-param name="row" select="'10'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Problem List'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'11450-4'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '11450-4' and concept/@csd = 'LN']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2008</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2008</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2008">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 12] CONTAINER (29762-2,LN,"Social History")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 12] CONTAINER (29762-2,LN,&quot;Social History&quot;)'"/>
<xsl:with-param name="row" select="'12'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Social History'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'29762-2'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '29762-2' and concept/@csd = 'LN']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 12] CONTAINER (29762-2,LN,"Social History")/[Row 13] CODE (F-93109,SRT,"Tobacco Smoking Behavior")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 12] CONTAINER (29762-2,LN,&quot;Social History&quot;)/[Row 13] CODE (F-93109,SRT,&quot;Tobacco Smoking Behavior&quot;)'"/>
<xsl:with-param name="row" select="'13'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tobacco Smoking Behavior'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-93109'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'3724'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-93109' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 12] CONTAINER (29762-2,LN,"Social History")/[Row 14] CODE (F-02573,SRT,"Alcohol consumption")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 12] CONTAINER (29762-2,LN,&quot;Social History&quot;)/[Row 14] CODE (F-02573,SRT,&quot;Alcohol consumption&quot;)'"/>
<xsl:with-param name="row" select="'14'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Alcohol consumption'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-02573'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2003'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-02573' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 12] CONTAINER (29762-2,LN,"Social History")/[Row 15] CODE (F-0434C,SRT,"Details of tobacco chewing")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 12] CONTAINER (29762-2,LN,&quot;Social History&quot;)/[Row 15] CODE (F-0434C,SRT,&quot;Details of tobacco chewing&quot;)'"/>
<xsl:with-param name="row" select="'15'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Details of tobacco chewing'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-0434C'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2004'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-0434C' and concept/@csd = 'SRT']"/>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)'"/>
<xsl:with-param name="row" select="'16'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tumor Staging'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-E395'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'G-E395' and concept/@csd = 'SRT']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")/[Row 17] CODE (R-100D9,SRT,"Primary tumor site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)/[Row 17] CODE (R-100D9,SRT,&quot;Primary tumor site&quot;)'"/>
<xsl:with-param name="row" select="'17'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Primary tumor site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-100D9'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'7601'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-100D9' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")/[Row 18] CODE (R-00443,SRT,"Tumor stage finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)/[Row 18] CODE (R-00443,SRT,&quot;Tumor stage finding&quot;)'"/>
<xsl:with-param name="row" select="'18'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tumor stage finding'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-00443'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2005'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-00443' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")/[Row 19] CONTAINER (F-005C4,SRT,"TNM Category")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)/[Row 19] CONTAINER (F-005C4,SRT,&quot;TNM Category&quot;)'"/>
<xsl:with-param name="row" select="'19'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'TNM Category'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-005C4'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'F-005C4' and concept/@csd = 'SRT']">
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")/[Row 19] CONTAINER (F-005C4,SRT,"TNM Category")/[Row 20] CODE (G-F150,SRT,"T Stage")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)/[Row 19] CONTAINER (F-005C4,SRT,&quot;TNM Category&quot;)/[Row 20] CODE (G-F150,SRT,&quot;T Stage&quot;)'"/>
<xsl:with-param name="row" select="'20'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'T Stage'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-F150'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2006'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-F150' and concept/@csd = 'SRT']"/>
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")/[Row 19] CONTAINER (F-005C4,SRT,"TNM Category")/[Row 21] CODE (R-40030,SRT,"N Stage")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)/[Row 19] CONTAINER (F-005C4,SRT,&quot;TNM Category&quot;)/[Row 21] CODE (R-40030,SRT,&quot;N Stage&quot;)'"/>
<xsl:with-param name="row" select="'21'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'N Stage'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-40030'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2007'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-40030' and concept/@csd = 'SRT']"/>
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 16] CONTAINER (G-E395,SRT,"Tumor Staging")/[Row 19] CONTAINER (F-005C4,SRT,"TNM Category")/[Row 22] CODE (R-40031,SRT,"M Stage")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 16] CONTAINER (G-E395,SRT,&quot;Tumor Staging&quot;)/[Row 19] CONTAINER (F-005C4,SRT,&quot;TNM Category&quot;)/[Row 22] CODE (R-40031,SRT,&quot;M Stage&quot;)'"/>
<xsl:with-param name="row" select="'22'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'M Stage'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-40031'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2008'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-40031' and concept/@csd = 'SRT']"/>
        </xsl:for-each>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 23] CONTAINER (G-03E7,SRT,"Past medical history")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 23] CONTAINER (G-03E7,SRT,&quot;Past medical history&quot;)'"/>
<xsl:with-param name="row" select="'23'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Past medical history'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-03E7'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'G-03E7' and concept/@csd = 'SRT']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 23] CONTAINER (G-03E7,SRT,"Past medical history")/[Row 24] CODE (P0-099EB,SRT,"History of radiation therapy")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 23] CONTAINER (G-03E7,SRT,&quot;Past medical history&quot;)/[Row 24] CODE (P0-099EB,SRT,&quot;History of radiation therapy&quot;)'"/>
<xsl:with-param name="row" select="'24'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'History of radiation therapy'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P0-099EB'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2002'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'P0-099EB' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 23] CONTAINER (G-03E7,SRT,"Past medical history")/[Row 25] CODE (G-0133,SRT,"History of malignant neoplasm")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 23] CONTAINER (G-03E7,SRT,&quot;Past medical history&quot;)/[Row 25] CODE (G-0133,SRT,&quot;History of malignant neoplasm&quot;)'"/>
<xsl:with-param name="row" select="'25'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'History of malignant neoplasm'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'G-0133'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2009'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'G-0133' and concept/@csd = 'SRT']"/>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 26] CONTAINER (P0-00002,SRT,"Diagnostic Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 26] CONTAINER (P0-00002,SRT,&quot;Diagnostic Procedure&quot;)'"/>
<xsl:with-param name="row" select="'26'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Diagnostic Procedure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P0-00002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P0-00002' and concept/@csd = 'SRT']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2002</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2002">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 28] CONTAINER (P0-0000E,SRT,"Therapeutic Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 28] CONTAINER (P0-0000E,SRT,&quot;Therapeutic Procedure&quot;)'"/>
<xsl:with-param name="row" select="'28'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Therapeutic Procedure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P0-0000E'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P0-0000E' and concept/@csd = 'SRT']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2003</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2003">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2004</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2004">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2005</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2005">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 32] CONTAINER (300015,99PMP,"Pathology of original tumor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 32] CONTAINER (300015,99PMP,&quot;Pathology of original tumor&quot;)'"/>
<xsl:with-param name="row" select="'32'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pathology of original tumor'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300015'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '300015' and concept/@csd = '99PMP']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 32] CONTAINER (300015,99PMP,"Pathology of original tumor")/[Row 34] CONTAINER (P1-65320,SRT,"Excision of cervical lymph nodes group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 32] CONTAINER (300015,99PMP,&quot;Pathology of original tumor&quot;)/[Row 34] CONTAINER (P1-65320,SRT,&quot;Excision of cervical lymph nodes group&quot;)'"/>
<xsl:with-param name="row" select="'34'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Excision of cervical lymph nodes group'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P1-65320'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P1-65320' and concept/@csd = 'SRT']">
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2007</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2007">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'U'"/>
</xsl:call-template>
</xsl:if>
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 32] CONTAINER (300015,99PMP,"Pathology of original tumor")/[Row 34] CONTAINER (P1-65320,SRT,"Excision of cervical lymph nodes group")/[Row 36] CODE (F-004ED,SRT,"Status of extra-capsular extension of nodal tumor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 32] CONTAINER (300015,99PMP,&quot;Pathology of original tumor&quot;)/[Row 34] CONTAINER (P1-65320,SRT,&quot;Excision of cervical lymph nodes group&quot;)/[Row 36] CODE (F-004ED,SRT,&quot;Status of extra-capsular extension of nodal tumor&quot;)'"/>
<xsl:with-param name="row" select="'36'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Status of extra-capsular extension of nodal tumor'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-004ED'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2010'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-004ED' and concept/@csd = 'SRT']"/>
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 32] CONTAINER (300015,99PMP,"Pathology of original tumor")/[Row 34] CONTAINER (P1-65320,SRT,"Excision of cervical lymph nodes group")/[Row 37] TEXT (121106,DCM,"Comment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 32] CONTAINER (300015,99PMP,&quot;Pathology of original tumor&quot;)/[Row 34] CONTAINER (P1-65320,SRT,&quot;Excision of cervical lymph nodes group&quot;)/[Row 37] TEXT (121106,DCM,&quot;Comment&quot;)'"/>
<xsl:with-param name="row" select="'37'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Comment'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121106'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'4'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = '121106' and concept/@csd = 'DCM']"/>
        </xsl:for-each>
      </xsl:for-each>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)'"/>
<xsl:with-param name="row" select="'38'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Disease Outcome'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C0679250'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'C0679250' and concept/@csd = 'UMLS']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 39] DATE (C3694716,UMLS,"Follow-up visit date")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 39] DATE (C3694716,UMLS,&quot;Follow-up visit date&quot;)'"/>
<xsl:with-param name="row" select="'39'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Follow-up visit date'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C3694716'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'C3694716' and concept/@csd = 'UMLS']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 40] CODE (F-00F54,SRT,"Followup status")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 40] CODE (F-00F54,SRT,&quot;Followup status&quot;)'"/>
<xsl:with-param name="row" select="'40'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Followup status'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-00F54'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2011'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-00F54' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 41] DATE (F-04922,SRT,"Date of death")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 41] DATE (F-04922,SRT,&quot;Date of death&quot;)'"/>
<xsl:with-param name="row" select="'41'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date of death'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-04922'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-04922' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 42] CODE (F-03E6D,SRT,"Cause of death")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 42] CODE (F-03E6D,SRT,&quot;Cause of death&quot;)'"/>
<xsl:with-param name="row" select="'42'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Cause of death'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-03E6D'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2012'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-03E6D' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 43] CODE (300011,99PMP,"Post-radiotherapy treatment")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 43] CODE (300011,99PMP,&quot;Post-radiotherapy treatment&quot;)'"/>
<xsl:with-param name="row" select="'43'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Post-radiotherapy treatment'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300011'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'230'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '300011' and concept/@csd = '99PMP']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 44] DATE (63944-3,LN,"Date of cancer recurrence")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 44] DATE (63944-3,LN,&quot;Date of cancer recurrence&quot;)'"/>
<xsl:with-param name="row" select="'44'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date of cancer recurrence'"/>
<xsl:with-param name="csdConceptName" select="'LN'"/>
<xsl:with-param name="cvConceptName" select="'63944-3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '63944-3' and concept/@csd = 'LN']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 45] DATE (300012,99PMP,"Date of 2nd primary")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 45] DATE (300012,99PMP,&quot;Date of 2nd primary&quot;)'"/>
<xsl:with-param name="row" select="'45'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date of 2nd primary'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300012'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = '300012' and concept/@csd = '99PMP']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 46] CODE (300013,99PMP,"Location of first recurrence")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 46] CODE (300013,99PMP,&quot;Location of first recurrence&quot;)'"/>
<xsl:with-param name="row" select="'46'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Location of first recurrence'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300013'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2013'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '300013' and concept/@csd = '99PMP']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,"Summary Clinical Document")/[Row 38] CONTAINER (C0679250,UMLS,"Disease Outcome")/[Row 47] CONTAINER (300016,99PMP,"Pathology of recurrent tumor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2000 MeasurementReport/[Row 1] CONTAINER (R-42BAB,SRT,&quot;Summary Clinical Document&quot;)/[Row 38] CONTAINER (C0679250,UMLS,&quot;Disease Outcome&quot;)/[Row 47] CONTAINER (300016,99PMP,&quot;Pathology of recurrent tumor&quot;)'"/>
<xsl:with-param name="row" select="'47'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pathology of recurrent tumor'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300016'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '300016' and concept/@csd = '99PMP']">
          <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking whether or not to include nested Template: TID_QIICR_2006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:if test="$templateConditionSatisfied!='F'">
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Including Template: TID_QIICR_2006</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="TID_QIICR_2006">
<xsl:with-param name="templatevmmin" select="'1'"/>
<xsl:with-param name="templatevmmax" select="'1'"/>
<xsl:with-param name="templateRequiredType" select="'M'"/>
</xsl:call-template>
</xsl:if>
        </xsl:for-each>
      </xsl:for-each>
    </xsl:for-each>
  <xsl:text>Root Template Validation Complete</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:template>
<xsl:template name="TID_QIICR_2002">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2002</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2002 (Biopsy)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2002 Biopsy/[Row 1] CONTAINER (P1-03100,SRT,"Biopsy")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2002 Biopsy/[Row 1] CONTAINER (P1-03100,SRT,&quot;Biopsy&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Biopsy'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P1-03100'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P1-03100' and concept/@csd = 'SRT']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2002 Biopsy/[Row 1] CONTAINER (P1-03100,SRT,"Biopsy")/[Row 2] DATE (F-05045,SRT,"Date of procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2002 Biopsy/[Row 1] CONTAINER (P1-03100,SRT,&quot;Biopsy&quot;)/[Row 2] DATE (F-05045,SRT,&quot;Date of procedure&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date of procedure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-05045'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-05045' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2002 Biopsy/[Row 1] CONTAINER (P1-03100,SRT,"Biopsy")/[Row 3] TEXT (F-04956,SRT,"Biopsy Site")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2002 Biopsy/[Row 1] CONTAINER (P1-03100,SRT,&quot;Biopsy&quot;)/[Row 3] TEXT (F-04956,SRT,&quot;Biopsy Site&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Biopsy Site'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-04956'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'F-04956' and concept/@csd = 'SRT']"/>
    </xsl:for-each>
  </xsl:template>
<xsl:template name="TID_QIICR_2003">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2003</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2003 (SurgicalProcedureforHeadandNeckCancer)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,"Surgical Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,&quot;Surgical Procedure&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Surgical Procedure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P0-009C3'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P0-009C3' and concept/@csd = 'SRT']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,"Surgical Procedure")/[Row 2] DATE (F-05045,SRT,"Date of procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,&quot;Surgical Procedure&quot;)/[Row 2] DATE (F-05045,SRT,&quot;Date of procedure&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date of procedure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-05045'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-05045' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,"Surgical Procedure")/[Row 3] TEXT (C0807506,UMLS,"Procedure Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,&quot;Surgical Procedure&quot;)/[Row 3] TEXT (C0807506,UMLS,&quot;Procedure Description&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Description'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C0807506'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'C0807506' and concept/@csd = 'UMLS']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,"Surgical Procedure")/[Row 4] CODE (300001,99PMP,"Resection of primary tumor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,&quot;Surgical Procedure&quot;)/[Row 4] CODE (300001,99PMP,&quot;Resection of primary tumor&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Resection of primary tumor'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300001'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2014'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '300001' and concept/@csd = '99PMP']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,"Surgical Procedure")/[Row 5] CODE (P1-65325,SRT,"Block dissection of cervical lymph nodes")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2003 SurgicalProcedureforHeadandNeckCancer/[Row 1] CONTAINER (P0-009C3,SRT,&quot;Surgical Procedure&quot;)/[Row 5] CODE (P1-65325,SRT,&quot;Block dissection of cervical lymph nodes&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Block dissection of cervical lymph nodes'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P1-65325'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2002'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'P1-65325' and concept/@csd = 'SRT']"/>
    </xsl:for-each>
  </xsl:template>
<xsl:template name="TID_QIICR_2004">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2004</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2004 (RadiotherapyProcedure)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,"Radiotherapy Procedure")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,&quot;Radiotherapy Procedure&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiotherapy Procedure'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P5-C0000'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P5-C0000' and concept/@csd = 'SRT']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,"Radiotherapy Procedure")/[Row 2] DATE (F-04C2B,SRT,"Date treatment started")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,&quot;Radiotherapy Procedure&quot;)/[Row 2] DATE (F-04C2B,SRT,&quot;Date treatment started&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date treatment started'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-04C2B'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-04C2B' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,"Radiotherapy Procedure")/[Row 3] DATE (F-04C2C,SRT,"Date treatment stopped")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,&quot;Radiotherapy Procedure&quot;)/[Row 3] DATE (F-04C2C,SRT,&quot;Date treatment stopped&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date treatment stopped'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-04C2C'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-04C2C' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,"Radiotherapy Procedure")/[Row 4] NUM (R-007B0,SRT,"Total radiation dose delivered")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,&quot;Radiotherapy Procedure&quot;)/[Row 4] NUM (R-007B0,SRT,&quot;Total radiation dose delivered&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Total radiation dose delivered'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-007B0'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = 'R-007B0' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,"Radiotherapy Procedure")/[Row 5] NUM (300002,99PMP,"Radiation dose per fraction")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,&quot;Radiotherapy Procedure&quot;)/[Row 5] NUM (300002,99PMP,&quot;Radiation dose per fraction&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Radiation dose per fraction'"/>
<xsl:with-param name="csdConceptName" select="'99PMP'"/>
<xsl:with-param name="cvConceptName" select="'300002'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'Gy'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'Gy'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '300002' and concept/@csd = '99PMP']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,"Radiotherapy Procedure")/[Row 6] TEXT (C0807506,UMLS,"Procedure Description")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2004 RadiotherapyProcedure/[Row 1] CONTAINER (P5-C0000,SRT,&quot;Radiotherapy Procedure&quot;)/[Row 6] TEXT (C0807506,UMLS,&quot;Procedure Description&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'text'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Procedure Description'"/>
<xsl:with-param name="csdConceptName" select="'UMLS'"/>
<xsl:with-param name="cvConceptName" select="'C0807506'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'text' and concept/@cv = 'C0807506' and concept/@csd = 'UMLS']"/>
    </xsl:for-each>
  </xsl:template>
<xsl:template name="TID_QIICR_2005">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2005</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2005 (ChemotherapyProcedure)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,"Chemotherapy")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,&quot;Chemotherapy&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Chemotherapy'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P0-0058E'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = 'P0-0058E' and concept/@csd = 'SRT']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,"Chemotherapy")/[Row 2] DATE (F-04C2B,SRT,"Date treatment started")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,&quot;Chemotherapy&quot;)/[Row 2] DATE (F-04C2B,SRT,&quot;Date treatment started&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date treatment started'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-04C2B'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-04C2B' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,"Chemotherapy")/[Row 3] DATE (F-04C2C,SRT,"Date treatment stopped")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,&quot;Chemotherapy&quot;)/[Row 3] DATE (F-04C2C,SRT,&quot;Date treatment stopped&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'date'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Date treatment stopped'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-04C2C'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'date' and concept/@cv = 'F-04C2C' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,"Chemotherapy")/[Row 4] CODE (F-618AA,SRT,"Antineoplastic agent")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2005 ChemotherapyProcedure/[Row 1] CONTAINER (P0-0058E,SRT,&quot;Chemotherapy&quot;)/[Row 4] CODE (F-618AA,SRT,&quot;Antineoplastic agent&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Antineoplastic agent'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-618AA'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'3'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2015'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-618AA' and concept/@csd = 'SRT']"/>
    </xsl:for-each>
  </xsl:template>
<xsl:template name="TID_QIICR_2006">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2006</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2006 (TumorPathologyResults)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pathology Results'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111468'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '111468' and concept/@csd = 'DCM']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")/[Row 2] CODE (111042,DCM,"Pathology")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)/[Row 2] CODE (111042,DCM,&quot;Pathology&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Pathology'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111042'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="'Squamous Cell Carcinoma'"/>
<xsl:with-param name="csdValue" select="'SRT'"/>
<xsl:with-param name="cvValue" select="'M-80703'"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111042' and concept/@csd = 'DCM']">
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")/[Row 2] CODE (111042,DCM,"Pathology")/[Row 3] CODE (F-02900,SRT,"Histological grade finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)/[Row 2] CODE (111042,DCM,&quot;Pathology&quot;)/[Row 3] CODE (F-02900,SRT,&quot;Histological grade finding&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Histological grade finding'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-02900'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2016'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-02900' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")/[Row 2] CODE (111042,DCM,"Pathology")/[Row 4] CODE (111388,DCM,"Malignancy Type")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)/[Row 2] CODE (111042,DCM,&quot;Pathology&quot;)/[Row 4] CODE (111388,DCM,&quot;Malignancy Type&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Malignancy Type'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111388'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2017'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = '111388' and concept/@csd = 'DCM']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")/[Row 2] CODE (111042,DCM,"Pathology")/[Row 5] CODE (R-00274,SRT,"Tumor margin status")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)/[Row 2] CODE (111042,DCM,&quot;Pathology&quot;)/[Row 5] CODE (R-00274,SRT,&quot;Tumor margin status&quot;)'"/>
<xsl:with-param name="row" select="'5'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Tumor margin status'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-00274'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2018'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-00274' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")/[Row 2] CODE (111042,DCM,"Pathology")/[Row 6] CODE (F-0369E,SRT,"Perineural invasion finding")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)/[Row 2] CODE (111042,DCM,&quot;Pathology&quot;)/[Row 6] CODE (F-0369E,SRT,&quot;Perineural invasion finding&quot;)'"/>
<xsl:with-param name="row" select="'6'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Perineural invasion finding'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-0369E'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2019'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-0369E' and concept/@csd = 'SRT']"/>
        <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,"Pathology Results")/[Row 2] CODE (111042,DCM,"Pathology")/[Row 7] CODE (R-0026E,SRT,"Status of vascular invasion by tumor")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2006 TumorPathologyResults/[Row 1] CONTAINER (111468,DCM,&quot;Pathology Results&quot;)/[Row 2] CODE (111042,DCM,&quot;Pathology&quot;)/[Row 7] CODE (R-0026E,SRT,&quot;Status of vascular invasion by tumor&quot;)'"/>
<xsl:with-param name="row" select="'7'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Status of vascular invasion by tumor'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-0026E'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2020'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'3'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-0026E' and concept/@csd = 'SRT']"/>
      </xsl:for-each>
    </xsl:for-each>
  </xsl:template>
<xsl:template name="TID_QIICR_2007">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2007</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2007 (CervicalLymphNodeGroup)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,"Cervical lymph node group")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,&quot;Cervical lymph node group&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Cervical lymph node group'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'T-C4207'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2021'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'T-C4207' and concept/@csd = 'SRT']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,"Cervical lymph node group")/[Row 2] CODE (R-400D5,SRT,"Sidedness")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,&quot;Cervical lymph node group&quot;)/[Row 2] CODE (R-400D5,SRT,&quot;Sidedness&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'HAS CONCEPT MOD'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Sidedness'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'R-400D5'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'QIICR_2022'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'R-400D5' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,"Cervical lymph node group")/[Row 3] NUM (111473,DCM,"Number of nodes removed")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,&quot;Cervical lymph node group&quot;)/[Row 3] NUM (111473,DCM,&quot;Number of nodes removed&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of nodes removed'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111473'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'nodes'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{nodes}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111473' and concept/@csd = 'DCM']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,"Cervical lymph node group")/[Row 4] NUM (111474,DCM,"Number of nodes positive")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2007 CervicalLymphNodeGroup/[Row 1] CODE (T-C4207,SRT,&quot;Cervical lymph node group&quot;)/[Row 4] NUM (111474,DCM,&quot;Number of nodes positive&quot;)'"/>
<xsl:with-param name="row" select="'4'"/>
<xsl:with-param name="relationship" select="'HAS PROPERTIES'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'num'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Number of nodes positive'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'111474'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="'nodes'"/>
<xsl:with-param name="csdUnits" select="'UCUM'"/>
<xsl:with-param name="cvUnits" select="'{nodes}'"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'num' and concept/@cv = '111474' and concept/@csd = 'DCM']"/>
    </xsl:for-each>
  </xsl:template>
<xsl:template name="TID_QIICR_2008">
<xsl:param name="templatevmmin"/>
<xsl:param name="templatevmmax"/>
<xsl:param name="templateRequiredType"/>
<xsl:param name="templateConditionSatisfied"/>
<xsl:param name="templateMBPO"/>
<xsl:variable name="templateID">QIICR_2008</xsl:variable>
<xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking Template: TID_QIICR_2008 (DiabetesProblemProperties)</xsl:text>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmin = </xsl:text>
<xsl:value-of select="$templatevmmin"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templatevmmax = </xsl:text>
<xsl:value-of select="$templatevmmax"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateRequiredType = </xsl:text>
<xsl:value-of select="$templateRequiredType"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateConditionSatisfied = </xsl:text>
<xsl:value-of select="$templateConditionSatisfied"/>
<xsl:value-of select="$newline"/>
<xsl:text>Checking Template: templateMBPO = </xsl:text>
<xsl:value-of select="$templateMBPO"/>
<xsl:value-of select="$newline"/>
</xsl:if>
    <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2008 DiabetesProblemProperties/[Row 1] CONTAINER (121430,DCM,"Concern")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2008 DiabetesProblemProperties/[Row 1] CONTAINER (121430,DCM,&quot;Concern&quot;)'"/>
<xsl:with-param name="row" select="'1'"/>
<xsl:with-param name="relationship" select="''"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'container'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Concern'"/>
<xsl:with-param name="csdConceptName" select="'DCM'"/>
<xsl:with-param name="cvConceptName" select="'121430'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'1'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'container' and concept/@cv = '121430' and concept/@csd = 'DCM']">
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2008 DiabetesProblemProperties/[Row 1] CONTAINER (121430,DCM,"Concern")/[Row 2] CODE (F-01000,SRT,"Problem")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2008 DiabetesProblemProperties/[Row 1] CONTAINER (121430,DCM,&quot;Concern&quot;)/[Row 2] CODE (F-01000,SRT,&quot;Problem&quot;)'"/>
<xsl:with-param name="row" select="'2'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Problem'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'F-01000'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'1'"/>
<xsl:with-param name="requiredType" select="'M'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="''"/>
<xsl:with-param name="valueSetBDE" select="''"/>
<xsl:with-param name="cmValue" select="'History of Diabetes mellitus'"/>
<xsl:with-param name="csdValue" select="'SRT'"/>
<xsl:with-param name="cvValue" select="'G-023F'"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'F-01000' and concept/@csd = 'SRT']"/>
      <xsl:if test="$optionDescribeChecking='T'">
<xsl:text>Checking for content item: Template QIICR_2008 DiabetesProblemProperties/[Row 1] CONTAINER (121430,DCM,"Concern")/[Row 3] CODE (P0-0000E,SRT,"Therapy")</xsl:text>
<xsl:value-of select="$newline"/>
</xsl:if>
<xsl:call-template name="CheckContentItem">
<xsl:with-param name="description" select="'Template QIICR_2008 DiabetesProblemProperties/[Row 1] CONTAINER (121430,DCM,&quot;Concern&quot;)/[Row 3] CODE (P0-0000E,SRT,&quot;Therapy&quot;)'"/>
<xsl:with-param name="row" select="'3'"/>
<xsl:with-param name="relationship" select="'CONTAINS'"/>
<xsl:with-param name="byReference" select="'F'"/>
<xsl:with-param name="valueType" select="'code'"/>
<xsl:with-param name="conceptNameCID" select="''"/>
<xsl:with-param name="cmConceptName" select="'Therapy'"/>
<xsl:with-param name="csdConceptName" select="'SRT'"/>
<xsl:with-param name="cvConceptName" select="'P0-0000E'"/>
<xsl:with-param name="vmmin" select="'1'"/>
<xsl:with-param name="vmmax" select="'n'"/>
<xsl:with-param name="requiredType" select="'U'"/>
<xsl:with-param name="matchRelationship" select="''"/>
<xsl:with-param name="valueSetCID" select="'3722'"/>
<xsl:with-param name="valueSetBDE" select="'D'"/>
<xsl:with-param name="cmValue" select="''"/>
<xsl:with-param name="csdValue" select="''"/>
<xsl:with-param name="cvValue" select="''"/>
<xsl:with-param name="unitsCID" select="''"/>
<xsl:with-param name="unitsBDE" select="''"/>
<xsl:with-param name="cmUnits" select="''"/>
<xsl:with-param name="csdUnits" select="''"/>
<xsl:with-param name="cvUnits" select="''"/>
<xsl:with-param name="graphicType" select="''"/>
<xsl:with-param name="numpointsmin" select="''"/>
<xsl:with-param name="numpointsmax" select="''"/>
<xsl:with-param name="templatevmmin" select="$templatevmmin"/>
<xsl:with-param name="templatevmmax" select="$templatevmmax"/>
<xsl:with-param name="templateRequiredType" select="$templateRequiredType"/>
<xsl:with-param name="templateConditionSatisfied" select="$templateConditionSatisfied"/>
<xsl:with-param name="templateMBPO" select="$templateMBPO"/>
<xsl:with-param name="nestingLevel" select="'2'"/>
<xsl:with-param name="templateID" select="$templateID"/>
</xsl:call-template>
<xsl:for-each select="child::node()[name() = 'code' and concept/@cv = 'P0-0000E' and concept/@csd = 'SRT']"/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
